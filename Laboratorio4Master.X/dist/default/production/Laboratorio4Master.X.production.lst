

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Aug 09 14:37:48 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  008F                     	;# 
   272  0090                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  0105                     	;# 
   291  0107                     	;# 
   292  0108                     	;# 
   293  0109                     	;# 
   294  010C                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  0185                     	;# 
   300  0187                     	;# 
   301  0188                     	;# 
   302  0189                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  008F                     	;# 
   350  0090                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  0105                     	;# 
   369  0107                     	;# 
   370  0108                     	;# 
   371  0109                     	;# 
   372  010C                     	;# 
   373  010C                     	;# 
   374  010D                     	;# 
   375  010E                     	;# 
   376  010F                     	;# 
   377  0185                     	;# 
   378  0187                     	;# 
   379  0188                     	;# 
   380  0189                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383                           
   384                           	psect	idataBANK0
   385  04E0                     __pidataBANK0:
   386                           
   387                           ;initializer for _enter
   388  04E0  340A               	retlw	10
   389  0009                     _PORTEbits	set	9
   390  000B                     _INTCON	set	11
   391  000D                     _PIR2	set	13
   392  000C                     _PIR1	set	12
   393  0009                     _PORTE	set	9
   394  0008                     _PORTD	set	8
   395  0007                     _PORTC	set	7
   396  0005                     _PORTA	set	5
   397  0006                     _PORTB	set	6
   398  000B                     _INTCONbits	set	11
   399  0018                     _RCSTAbits	set	24
   400  001F                     _ADCON0bits	set	31
   401  0013                     _SSPBUF	set	19
   402  0014                     _SSPCON	set	20
   403  0049                     _RE1	set	73
   404  0063                     _SSPIF	set	99
   405  005E                     _PEIE	set	94
   406  005F                     _GIE	set	95
   407  008D                     _PIE2	set	141
   408  008C                     _PIE1	set	140
   409  0089                     _TRISE	set	137
   410  0088                     _TRISD	set	136
   411  0087                     _TRISC	set	135
   412  0081                     _OPTION_REG	set	129
   413  0096                     _IOCB	set	150
   414  0095                     _WPUB	set	149
   415  0086                     _TRISB	set	134
   416  009A                     _SPBRGH	set	154
   417  0099                     _SPBRG	set	153
   418  0098                     _TXSTAbits	set	152
   419  008C                     _PIE1bits	set	140
   420  009F                     _ADCON1bits	set	159
   421  0085                     _TRISA	set	133
   422  008F                     _OSCCONbits	set	143
   423  0091                     _SSPCON2bits	set	145
   424  0087                     _TRISCbits	set	135
   425  0094                     _SSPSTAT	set	148
   426  0093                     _SSPADD	set	147
   427  0091                     _SSPCON2	set	145
   428  0463                     _SSPIE	set	1123
   429  043C                     _TRISC4	set	1084
   430  043B                     _TRISC3	set	1083
   431  0187                     _BAUDCTLbits	set	391
   432  0189                     _ANSELH	set	393
   433  0188                     _ANSEL	set	392
   434                           
   435                           	psect	strings
   436  044E                     __pstrings:
   437  044E                     stringtab:
   438  044E                     __stringtab:
   439  044E                     stringcode:	
   440                           ;	String table - string pointers are 1 byte each
   441                           
   442  044E                     stringdir:
   443  044E  3004               	movlw	high stringdir
   444  044F  008A               	movwf	10
   445  0450  0804               	movf	4,w
   446  0451  0A84               	incf	4,f
   447  0452  0782               	addwf	2,f
   448  0453                     __stringbase:
   449  0453  3400               	retlw	0
   450  0454                     __end_of__stringtab:
   451  0454                     STR_2:
   452  0454  3441               	retlw	65	;'A'
   453  0455  3444               	retlw	68	;'D'
   454  0456  3443               	retlw	67	;'C'
   455  0457  343A               	retlw	58	;':'
   456  0458  3420               	retlw	32	;' '
   457  0459  3443               	retlw	67	;'C'
   458  045A  344F               	retlw	79	;'O'
   459  045B  344E               	retlw	78	;'N'
   460  045C  3454               	retlw	84	;'T'
   461  045D  343A               	retlw	58	;':'
   462  045E  3420               	retlw	32	;' '
   463  045F  3454               	retlw	84	;'T'
   464  0460  3445               	retlw	69	;'E'
   465  0461  344D               	retlw	77	;'M'
   466  0462  3450               	retlw	80	;'P'
   467  0463  343A               	retlw	58	;':'
   468  0464  3400               	retlw	0
   469  0465                     STR_4:
   470  0465  3420               	retlw	32	;' '
   471  0466  3420               	retlw	32	;' '
   472  0467  3400               	retlw	0
   473  0468                     STR_3:
   474  0468  342E               	retlw	46	;'.'
   475  0469  3400               	retlw	0
   476  046A                     STR_1:
   477  046A  3461               	retlw	97	;'a'
   478  046B  3400               	retlw	0
   479                           
   480                           	psect	cinit
   481  000F                     start_initialization:	
   482                           ; #config settings
   483                           
   484  000F                     __initialization:
   485                           
   486                           ; Initialize objects allocated to BANK0
   487  000F  120A  118A  24E0  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   488  0014  00BA               	movwf	__pdataBANK0& (0+127)
   489                           
   490                           ; Clear objects allocated to BANK0
   491  0015  01B1               	clrf	__pbssBANK0& (0+127)
   492  0016  01B2               	clrf	(__pbssBANK0+1)& (0+127)
   493  0017  01B3               	clrf	(__pbssBANK0+2)& (0+127)
   494  0018  01B4               	clrf	(__pbssBANK0+3)& (0+127)
   495  0019  01B5               	clrf	(__pbssBANK0+4)& (0+127)
   496  001A  01B6               	clrf	(__pbssBANK0+5)& (0+127)
   497  001B  01B7               	clrf	(__pbssBANK0+6)& (0+127)
   498  001C  01B8               	clrf	(__pbssBANK0+7)& (0+127)
   499  001D  01B9               	clrf	(__pbssBANK0+8)& (0+127)
   500                           
   501                           ; Clear objects allocated to COMMON
   502  001E  01FA               	clrf	__pbssCOMMON& (0+127)
   503  001F  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   504  0020                     end_of_initialization:	
   505                           ;End of C runtime variable initialization code
   506                           
   507  0020                     __end_of__initialization:
   508  0020  0183               	clrf	3
   509  0021  120A  118A  2824   	ljmp	_main	;jump to C main() function
   510                           
   511                           	psect	bssCOMMON
   512  007A                     __pbssCOMMON:
   513  007A                     _decenas:
   514  007A                     	ds	1
   515  007B                     _valor:
   516  007B                     	ds	1
   517                           
   518                           	psect	bssBANK0
   519  0031                     __pbssBANK0:
   520  0031                     _centenas:
   521  0031                     	ds	1
   522  0032                     _unidades:
   523  0032                     	ds	1
   524  0033                     _varUART:
   525  0033                     	ds	1
   526  0034                     _cont:
   527  0034                     	ds	1
   528  0035                     _varPot0:
   529  0035                     	ds	1
   530  0036                     _RXREC:
   531  0036                     	ds	1
   532  0037                     _start:
   533  0037                     	ds	1
   534  0038                     _startfinal:
   535  0038                     	ds	1
   536  0039                     _flagint:
   537  0039                     	ds	1
   538                           
   539                           	psect	dataBANK0
   540  003A                     __pdataBANK0:
   541  003A                     _enter:
   542  003A                     	ds	1
   543                           
   544                           	psect	cstackCOMMON
   545  0070                     __pcstackCOMMON:
   546  0070                     ?_setup:
   547  0070                     ?_Lcd_Init:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_Lcd_Clear:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_Lcd_Write_Char:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_Lcd_Write_String:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_voltASCII:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_I2C_Master_Wait:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_I2C_Master_Start:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_I2C_Master_Stop:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_initOsc:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_isr:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ??_isr:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_main:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_Lcd_Port:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_Lcd_Cmd:	
   587                           ; 1 bytes @ 0x0
   588                           
   589                           
   590                           ; 1 bytes @ 0x0
   591  0070                     	ds	2
   592  0072                     ??_I2C_Master_Wait:
   593  0072                     ??_I2C_Master_Start:	
   594                           ; 1 bytes @ 0x2
   595                           
   596  0072                     ??_I2C_Master_Stop:	
   597                           ; 1 bytes @ 0x2
   598                           
   599  0072                     ?_I2C_Master_Write:	
   600                           ; 1 bytes @ 0x2
   601                           
   602  0072                     ??_initOsc:	
   603                           ; 1 bytes @ 0x2
   604                           
   605  0072                     ??_Lcd_Port:	
   606                           ; 1 bytes @ 0x2
   607                           
   608  0072                     ?_I2C_Master_Read:	
   609                           ; 1 bytes @ 0x2
   610                           
   611  0072                     ?___awdiv:	
   612                           ; 2 bytes @ 0x2
   613                           
   614  0072                     ?___lldiv:	
   615                           ; 2 bytes @ 0x2
   616                           
   617  0072                     Lcd_Port@a:	
   618                           ; 4 bytes @ 0x2
   619                           
   620  0072                     I2C_Master_Write@d:	
   621                           ; 1 bytes @ 0x2
   622                           
   623  0072                     I2C_Master_Read@a:	
   624                           ; 2 bytes @ 0x2
   625                           
   626  0072                     ___awdiv@divisor:	
   627                           ; 2 bytes @ 0x2
   628                           
   629  0072                     ___lldiv@divisor:	
   630                           ; 2 bytes @ 0x2
   631                           
   632                           
   633                           ; 4 bytes @ 0x2
   634  0072                     	ds	1
   635  0073                     ??_Lcd_Write_Char:
   636  0073                     ??_Lcd_Cmd:	
   637                           ; 1 bytes @ 0x3
   638                           
   639                           
   640                           ; 1 bytes @ 0x3
   641  0073                     	ds	1
   642  0074                     ??_I2C_Master_Write:
   643  0074                     ??_I2C_Master_Read:	
   644                           ; 1 bytes @ 0x4
   645                           
   646  0074                     initOsc@frec:	
   647                           ; 1 bytes @ 0x4
   648                           
   649  0074                     ___awdiv@dividend:	
   650                           ; 1 bytes @ 0x4
   651                           
   652                           
   653                           ; 2 bytes @ 0x4
   654  0074                     	ds	1
   655  0075                     Lcd_Cmd@a:
   656  0075                     Lcd_Write_Char@a:	
   657                           ; 1 bytes @ 0x5
   658                           
   659                           
   660                           ; 1 bytes @ 0x5
   661  0075                     	ds	1
   662  0076                     ??_Lcd_Init:
   663  0076                     ??_Lcd_Clear:	
   664                           ; 1 bytes @ 0x6
   665                           
   666  0076                     ?_Lcd_Set_Cursor:	
   667                           ; 1 bytes @ 0x6
   668                           
   669  0076                     ??___awdiv:	
   670                           ; 1 bytes @ 0x6
   671                           
   672  0076                     Lcd_Set_Cursor@b:	
   673                           ; 1 bytes @ 0x6
   674                           
   675  0076                     Lcd_Write_Char@temp:	
   676                           ; 1 bytes @ 0x6
   677                           
   678  0076                     I2C_Master_Read@temp:	
   679                           ; 1 bytes @ 0x6
   680                           
   681  0076                     ___lldiv@dividend:	
   682                           ; 2 bytes @ 0x6
   683                           
   684                           
   685                           ; 4 bytes @ 0x6
   686  0076                     	ds	1
   687  0077                     ??_Lcd_Set_Cursor:
   688  0077                     ?___bmul:	
   689                           ; 1 bytes @ 0x7
   690                           
   691  0077                     Lcd_Write_Char@y:	
   692                           ; 1 bytes @ 0x7
   693                           
   694  0077                     ___bmul@multiplicand:	
   695                           ; 1 bytes @ 0x7
   696                           
   697                           
   698                           ; 1 bytes @ 0x7
   699  0077                     	ds	1
   700  0078                     ??_Lcd_Write_String:
   701  0078                     ??___bmul:	
   702                           ; 1 bytes @ 0x8
   703                           
   704                           
   705                           ; 1 bytes @ 0x8
   706  0078                     	ds	1
   707  0079                     voltASCII@variable:
   708                           
   709                           ; 1 bytes @ 0x9
   710  0079                     	ds	1
   711  007A                     ??_setup:
   712                           
   713                           	psect	cstackBANK0
   714  0020                     __pcstackBANK0:	
   715                           ; 1 bytes @ 0xA
   716                           
   717  0020                     ??___lldiv:
   718  0020                     Lcd_Set_Cursor@a:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0020                     ___awdiv@counter:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0020                     Lcd_Write_String@i:	
   725                           ; 1 bytes @ 0x0
   726                           
   727                           
   728                           ; 2 bytes @ 0x0
   729  0020                     	ds	1
   730  0021                     Lcd_Set_Cursor@z:
   731  0021                     ___awdiv@sign:	
   732                           ; 1 bytes @ 0x1
   733                           
   734  0021                     ___lldiv@quotient:	
   735                           ; 1 bytes @ 0x1
   736                           
   737                           
   738                           ; 4 bytes @ 0x1
   739  0021                     	ds	1
   740  0022                     Lcd_Set_Cursor@y:
   741  0022                     Lcd_Write_String@a:	
   742                           ; 1 bytes @ 0x2
   743                           
   744  0022                     ___awdiv@quotient:	
   745                           ; 1 bytes @ 0x2
   746                           
   747                           
   748                           ; 2 bytes @ 0x2
   749  0022                     	ds	1
   750  0023                     Lcd_Set_Cursor@temp:
   751                           
   752                           ; 1 bytes @ 0x3
   753  0023                     	ds	1
   754  0024                     ___bmul@product:
   755                           
   756                           ; 1 bytes @ 0x4
   757  0024                     	ds	1
   758  0025                     ___bmul@multiplier:
   759  0025                     ___lldiv@counter:	
   760                           ; 1 bytes @ 0x5
   761                           
   762                           
   763                           ; 1 bytes @ 0x5
   764  0025                     	ds	1
   765  0026                     ??_voltASCII:
   766  0026                     ?_I2C_Master_Init:	
   767                           ; 1 bytes @ 0x6
   768                           
   769  0026                     I2C_Master_Init@c:	
   770                           ; 1 bytes @ 0x6
   771                           
   772                           
   773                           ; 4 bytes @ 0x6
   774  0026                     	ds	4
   775  002A                     ??_I2C_Master_Init:
   776                           
   777                           ; 1 bytes @ 0xA
   778  002A                     	ds	4
   779  002E                     ??_main:
   780                           
   781                           ; 1 bytes @ 0xE
   782  002E                     	ds	3
   783                           
   784                           	psect	maintext
   785  0024                     __pmaintext:	
   786 ;;
   787 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   788 ;;
   789 ;; *************** function _main *****************
   790 ;; Defined at:
   791 ;;		line 79 in file "MainL4Master.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;		None
   794 ;; Auto vars:     Size  Location     Type
   795 ;;		None
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : B00/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   805 ;;      Params:         0       0       0       0       0
   806 ;;      Locals:         0       0       0       0       0
   807 ;;      Temps:          0       3       0       0       0
   808 ;;      Totals:         0       3       0       0       0
   809 ;;Total ram usage:        3 bytes
   810 ;; Hardware stack levels required when called: 4
   811 ;; This function calls:
   812 ;;		_I2C_Master_Read
   813 ;;		_I2C_Master_Start
   814 ;;		_I2C_Master_Stop
   815 ;;		_I2C_Master_Write
   816 ;;		_Lcd_Clear
   817 ;;		_Lcd_Init
   818 ;;		_Lcd_Set_Cursor
   819 ;;		_Lcd_Write_Char
   820 ;;		_Lcd_Write_String
   821 ;;		_setup
   822 ;;		_voltASCII
   823 ;; This function is called by:
   824 ;;		Startup code after reset
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           
   829                           ;psect for function _main
   830  0024                     _main:
   831  0024                     l1992:	
   832                           ;incstack = 0
   833                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   834                           
   835                           
   836                           ;MainL4Master.c: 80: 
   837  0024  120A  118A  23A3  120A  118A  	fcall	_setup
   838  0029                     l1994:
   839                           
   840                           ;MainL4Master.c: 82: 
   841  0029  120A  118A  231B  120A  118A  	fcall	_Lcd_Init
   842  002E                     l1996:
   843                           
   844                           ;MainL4Master.c: 87:   TRISB = 0b00000000;
   845  002E  120A  118A  249D  120A  118A  	fcall	_Lcd_Clear
   846  0033                     l1998:
   847                           
   848                           ;MainL4Master.c: 88:   TRISC = 0b00000000;
   849  0033  01F6               	clrf	Lcd_Set_Cursor@b
   850  0034  0AF6               	incf	Lcd_Set_Cursor@b,f
   851  0035  3001               	movlw	1
   852  0036  120A  118A  22C3  120A  118A  	fcall	_Lcd_Set_Cursor
   853  003B                     l2000:
   854                           
   855                           ;MainL4Master.c: 89:   TRISD = 0b00000000;
   856  003B  3017               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   857  003C  120A  118A  242C  120A  118A  	fcall	_Lcd_Write_Char
   858                           
   859                           ;MainL4Master.c: 90:   TRISE = 0x00;
   860  0041  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   861  0042  120A  118A  2403  120A  118A  	fcall	_Lcd_Write_String
   862  0047                     l2002:
   863                           
   864                           ;MainL4Master.c: 91: 
   865  0047  3003               	movlw	3
   866  0048  1283               	bcf	3,5	;RP0=0, select bank0
   867  0049  1303               	bcf	3,6	;RP1=0, select bank0
   868  004A  00B0               	movwf	??_main+2
   869  004B  3008               	movlw	8
   870  004C  00AF               	movwf	??_main+1
   871  004D  3076               	movlw	118
   872  004E  00AE               	movwf	??_main
   873  004F                     u967:
   874  004F  0BAE               	decfsz	??_main,f
   875  0050  284F               	goto	u967
   876  0051  0BAF               	decfsz	??_main+1,f
   877  0052  284F               	goto	u967
   878  0053  0BB0               	decfsz	??_main+2,f
   879  0054  284F               	goto	u967
   880  0055  0000               	nop
   881  0056                     l2004:
   882                           
   883                           ;MainL4Master.c: 93: 
   884  0056  120A  118A  24CA  120A  118A  	fcall	_I2C_Master_Start
   885  005B                     l2006:
   886                           
   887                           ;MainL4Master.c: 94:   OPTION_REG = 0b11000100;
   888  005B  3071               	movlw	113
   889  005C  00F2               	movwf	I2C_Master_Write@d
   890  005D  3000               	movlw	0
   891  005E  00F3               	movwf	I2C_Master_Write@d+1
   892  005F  120A  118A  24B7  120A  118A  	fcall	_I2C_Master_Write
   893  0064                     l2008:
   894                           
   895                           ;MainL4Master.c: 95: 
   896  0064  3000               	movlw	0
   897  0065  00F2               	movwf	I2C_Master_Read@a
   898  0066  00F3               	movwf	I2C_Master_Read@a+1
   899  0067  120A  118A  23D5  120A  118A  	fcall	_I2C_Master_Read
   900  006C  0872               	movf	?_I2C_Master_Read,w
   901  006D  1283               	bcf	3,5	;RP0=0, select bank0
   902  006E  1303               	bcf	3,6	;RP1=0, select bank0
   903  006F  00AE               	movwf	??_main
   904  0070  082E               	movf	??_main,w
   905  0071  00B4               	movwf	_cont
   906  0072                     l2010:
   907                           
   908                           ;MainL4Master.c: 96:   initOsc(8);
   909  0072  120A  118A  24C1  120A  118A  	fcall	_I2C_Master_Stop
   910  0077                     l2012:
   911                           
   912                           ;MainL4Master.c: 97:   I2C_Master_Init(100000);
   913  0077  3003               	movlw	3
   914  0078  1283               	bcf	3,5	;RP0=0, select bank0
   915  0079  1303               	bcf	3,6	;RP1=0, select bank0
   916  007A  00B0               	movwf	??_main+2
   917  007B  3008               	movlw	8
   918  007C  00AF               	movwf	??_main+1
   919  007D  3076               	movlw	118
   920  007E  00AE               	movwf	??_main
   921  007F                     u977:
   922  007F  0BAE               	decfsz	??_main,f
   923  0080  287F               	goto	u977
   924  0081  0BAF               	decfsz	??_main+1,f
   925  0082  287F               	goto	u977
   926  0083  0BB0               	decfsz	??_main+2,f
   927  0084  287F               	goto	u977
   928  0085  0000               	nop
   929  0086                     l2014:
   930                           
   931                           ;MainL4Master.c: 99:   PORTA = 0x00;
   932  0086  120A  118A  24CA  120A  118A  	fcall	_I2C_Master_Start
   933  008B                     l2016:
   934                           
   935                           ;MainL4Master.c: 100:   PORTB = 0x00;
   936  008B  3091               	movlw	145
   937  008C  00F2               	movwf	I2C_Master_Write@d
   938  008D  3000               	movlw	0
   939  008E  00F3               	movwf	I2C_Master_Write@d+1
   940  008F  120A  118A  24B7  120A  118A  	fcall	_I2C_Master_Write
   941  0094                     l2018:
   942                           
   943                           ;MainL4Master.c: 101:   PORTC = 0x00;
   944  0094  3000               	movlw	0
   945  0095  00F2               	movwf	I2C_Master_Read@a
   946  0096  00F3               	movwf	I2C_Master_Read@a+1
   947  0097  120A  118A  23D5  120A  118A  	fcall	_I2C_Master_Read
   948  009C  0872               	movf	?_I2C_Master_Read,w
   949  009D  1283               	bcf	3,5	;RP0=0, select bank0
   950  009E  1303               	bcf	3,6	;RP1=0, select bank0
   951  009F  00AE               	movwf	??_main
   952  00A0  082E               	movf	??_main,w
   953  00A1  00B5               	movwf	_varPot0
   954  00A2                     l2020:
   955                           
   956                           ;MainL4Master.c: 102:   PORTD = 0x00;
   957  00A2  120A  118A  24C1  120A  118A  	fcall	_I2C_Master_Stop
   958  00A7                     l2022:
   959                           
   960                           ;MainL4Master.c: 103:   PORTE = 0x00;
   961  00A7  3003               	movlw	3
   962  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   963  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   964  00AA  00B0               	movwf	??_main+2
   965  00AB  3008               	movlw	8
   966  00AC  00AF               	movwf	??_main+1
   967  00AD  3076               	movlw	118
   968  00AE  00AE               	movwf	??_main
   969  00AF                     u987:
   970  00AF  0BAE               	decfsz	??_main,f
   971  00B0  28AF               	goto	u987
   972  00B1  0BAF               	decfsz	??_main+1,f
   973  00B2  28AF               	goto	u987
   974  00B3  0BB0               	decfsz	??_main+2,f
   975  00B4  28AF               	goto	u987
   976  00B5  0000               	nop
   977  00B6                     l2024:
   978                           
   979                           ;MainL4Master.c: 106: 
   980  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   981  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   982  00B8  0834               	movf	_cont,w
   983  00B9  120A  118A  2110  120A  118A  	fcall	_voltASCII
   984  00BE                     l2026:
   985                           
   986                           ;MainL4Master.c: 107:   PIE1 = 0b00000000;
   987  00BE  01F6               	clrf	Lcd_Set_Cursor@b
   988  00BF  0AF6               	incf	Lcd_Set_Cursor@b,f
   989  00C0  3002               	movlw	2
   990  00C1  120A  118A  22C3  120A  118A  	fcall	_Lcd_Set_Cursor
   991  00C6                     l2028:
   992                           
   993                           ;MainL4Master.c: 108:   PIE2 = 0b00000000;
   994  00C6  1283               	bcf	3,5	;RP0=0, select bank0
   995  00C7  1303               	bcf	3,6	;RP1=0, select bank0
   996  00C8  0831               	movf	_centenas,w
   997  00C9  120A  118A  242C  120A  118A  	fcall	_Lcd_Write_Char
   998  00CE                     l2030:
   999                           
  1000                           ;MainL4Master.c: 109:   PIR1 = 0x00;
  1001  00CE  3015               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1002  00CF  120A  118A  2403  120A  118A  	fcall	_Lcd_Write_String
  1003  00D4                     l2032:
  1004                           
  1005                           ;MainL4Master.c: 110:   PIR2 = 0x00;
  1006  00D4  087A               	movf	_decenas,w
  1007  00D5  120A  118A  242C  120A  118A  	fcall	_Lcd_Write_Char
  1008  00DA                     l2034:
  1009                           
  1010                           ;MainL4Master.c: 111:   INTCON = 0b00000000;
  1011  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1012  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  1013  00DC  0832               	movf	_unidades,w
  1014  00DD  120A  118A  242C  120A  118A  	fcall	_Lcd_Write_Char
  1015  00E2                     l2036:
  1016                           
  1017                           ;MainL4Master.c: 112: }
  1018  00E2  3012               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1019  00E3  120A  118A  2403  120A  118A  	fcall	_Lcd_Write_String
  1020  00E8                     l2038:
  1021                           
  1022                           ;MainL4Master.c: 113: 
  1023  00E8  3003               	movlw	3
  1024  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  1025  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  1026  00EB  00B0               	movwf	??_main+2
  1027  00EC  3008               	movlw	8
  1028  00ED  00AF               	movwf	??_main+1
  1029  00EE  3076               	movlw	118
  1030  00EF  00AE               	movwf	??_main
  1031  00F0                     u997:
  1032  00F0  0BAE               	decfsz	??_main,f
  1033  00F1  28F0               	goto	u997
  1034  00F2  0BAF               	decfsz	??_main+1,f
  1035  00F3  28F0               	goto	u997
  1036  00F4  0BB0               	decfsz	??_main+2,f
  1037  00F5  28F0               	goto	u997
  1038  00F6  0000               	nop
  1039  00F7                     l2040:
  1040                           
  1041                           ;MainL4Master.c: 117: void voltASCII(uint8_t variable){
  1042  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1043  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1044  00F9  0835               	movf	_varPot0,w
  1045  00FA  0086               	movwf	6	;volatile
  1046  00FB                     l2042:
  1047                           
  1048                           ;MainL4Master.c: 118: 
  1049  00FB  0834               	movf	_cont,w
  1050  00FC  0085               	movwf	5	;volatile
  1051  00FD                     l2044:
  1052                           
  1053                           ;MainL4Master.c: 119:     valor = variable;
  1054  00FD  3003               	movlw	3
  1055  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1056  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1057  0100  00B0               	movwf	??_main+2
  1058  0101  3008               	movlw	8
  1059  0102  00AF               	movwf	??_main+1
  1060  0103  3076               	movlw	118
  1061  0104  00AE               	movwf	??_main
  1062  0105                     u1007:
  1063  0105  0BAE               	decfsz	??_main,f
  1064  0106  2905               	goto	u1007
  1065  0107  0BAF               	decfsz	??_main+1,f
  1066  0108  2905               	goto	u1007
  1067  0109  0BB0               	decfsz	??_main+2,f
  1068  010A  2905               	goto	u1007
  1069  010B  0000               	nop
  1070  010C  282E               	goto	l1996
  1071  010D  120A  118A  280C   	ljmp	start
  1072  0110                     __end_of_main:
  1073                           
  1074                           	psect	text1
  1075  0110                     __ptext1:	
  1076 ;; *************** function _voltASCII *****************
  1077 ;; Defined at:
  1078 ;;		line 163 in file "MainL4Master.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;  variable        1    wreg     unsigned char 
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;  variable        1    9[COMMON] unsigned char 
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		wreg, status,2, status,0, pclath, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1092 ;;      Params:         0       0       0       0       0
  1093 ;;      Locals:         1       0       0       0       0
  1094 ;;      Temps:          0       4       0       0       0
  1095 ;;      Totals:         1       4       0       0       0
  1096 ;;Total ram usage:        5 bytes
  1097 ;; Hardware stack levels used: 1
  1098 ;; Hardware stack levels required when called: 2
  1099 ;; This function calls:
  1100 ;;		___awdiv
  1101 ;;		___bmul
  1102 ;; This function is called by:
  1103 ;;		_main
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           
  1108                           ;psect for function _voltASCII
  1109  0110                     _voltASCII:
  1110                           
  1111                           ;incstack = 0
  1112                           ; Regs used in _voltASCII: [wreg+status,2+status,0+pclath+cstack]
  1113                           ;voltASCII@variable stored from wreg
  1114  0110  00F9               	movwf	voltASCII@variable
  1115  0111                     l1972:
  1116  0111  0879               	movf	voltASCII@variable,w
  1117  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1118  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1119  0114  00A6               	movwf	??_voltASCII
  1120  0115  0826               	movf	??_voltASCII,w
  1121  0116  00FB               	movwf	_valor
  1122  0117                     l1974:
  1123  0117  30F4               	movlw	244
  1124  0118  00A6               	movwf	??_voltASCII
  1125  0119  0826               	movf	??_voltASCII,w
  1126  011A  00F7               	movwf	___bmul@multiplicand
  1127  011B  087B               	movf	_valor,w
  1128  011C  00A7               	movwf	??_voltASCII+1
  1129  011D  01A8               	clrf	??_voltASCII+2
  1130  011E  0827               	movf	??_voltASCII+1,w
  1131  011F  00F4               	movwf	___awdiv@dividend
  1132  0120  0828               	movf	??_voltASCII+2,w
  1133  0121  00F5               	movwf	___awdiv@dividend+1
  1134  0122  30FF               	movlw	255
  1135  0123  00F2               	movwf	___awdiv@divisor
  1136  0124  3000               	movlw	0
  1137  0125  00F3               	movwf	___awdiv@divisor+1
  1138  0126  120A  118A  2196  120A  118A  	fcall	___awdiv
  1139  012B  0872               	movf	?___awdiv,w
  1140  012C  120A  118A  2486  120A  118A  	fcall	___bmul
  1141  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1142  0132  1303               	bcf	3,6	;RP1=0, select bank0
  1143  0133  00A9               	movwf	??_voltASCII+3
  1144  0134  0829               	movf	??_voltASCII+3,w
  1145  0135  00FB               	movwf	_valor
  1146  0136                     l1976:
  1147  0136  3064               	movlw	100
  1148  0137  00F2               	movwf	___awdiv@divisor
  1149  0138  3000               	movlw	0
  1150  0139  00F3               	movwf	___awdiv@divisor+1
  1151  013A  087B               	movf	_valor,w
  1152  013B  00A6               	movwf	??_voltASCII
  1153  013C  01A7               	clrf	??_voltASCII+1
  1154  013D  0826               	movf	??_voltASCII,w
  1155  013E  00F4               	movwf	___awdiv@dividend
  1156  013F  0827               	movf	??_voltASCII+1,w
  1157  0140  00F5               	movwf	___awdiv@dividend+1
  1158  0141  120A  118A  2196  120A  118A  	fcall	___awdiv
  1159  0146  0872               	movf	?___awdiv,w
  1160  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1161  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1162  0149  00A8               	movwf	??_voltASCII+2
  1163  014A  0828               	movf	??_voltASCII+2,w
  1164  014B  00B1               	movwf	_centenas
  1165  014C                     l1978:
  1166  014C  309C               	movlw	156
  1167  014D  00A6               	movwf	??_voltASCII
  1168  014E  0826               	movf	??_voltASCII,w
  1169  014F  00F7               	movwf	___bmul@multiplicand
  1170  0150  0831               	movf	_centenas,w
  1171  0151  120A  118A  2486  120A  118A  	fcall	___bmul
  1172  0156  077B               	addwf	_valor,w
  1173  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1174  0158  1303               	bcf	3,6	;RP1=0, select bank0
  1175  0159  00A7               	movwf	??_voltASCII+1
  1176  015A  0827               	movf	??_voltASCII+1,w
  1177  015B  00FB               	movwf	_valor
  1178  015C                     l1980:
  1179  015C  300A               	movlw	10
  1180  015D  00F2               	movwf	___awdiv@divisor
  1181  015E  3000               	movlw	0
  1182  015F  00F3               	movwf	___awdiv@divisor+1
  1183  0160  087B               	movf	_valor,w
  1184  0161  00A6               	movwf	??_voltASCII
  1185  0162  01A7               	clrf	??_voltASCII+1
  1186  0163  0826               	movf	??_voltASCII,w
  1187  0164  00F4               	movwf	___awdiv@dividend
  1188  0165  0827               	movf	??_voltASCII+1,w
  1189  0166  00F5               	movwf	___awdiv@dividend+1
  1190  0167  120A  118A  2196  120A  118A  	fcall	___awdiv
  1191  016C  0872               	movf	?___awdiv,w
  1192  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1193  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1194  016F  00A8               	movwf	??_voltASCII+2
  1195  0170  0828               	movf	??_voltASCII+2,w
  1196  0171  00FA               	movwf	_decenas
  1197  0172                     l1982:
  1198  0172  30F6               	movlw	246
  1199  0173  00A6               	movwf	??_voltASCII
  1200  0174  0826               	movf	??_voltASCII,w
  1201  0175  00F7               	movwf	___bmul@multiplicand
  1202  0176  087A               	movf	_decenas,w
  1203  0177  120A  118A  2486  120A  118A  	fcall	___bmul
  1204  017C  077B               	addwf	_valor,w
  1205  017D  1283               	bcf	3,5	;RP0=0, select bank0
  1206  017E  1303               	bcf	3,6	;RP1=0, select bank0
  1207  017F  00A7               	movwf	??_voltASCII+1
  1208  0180  0827               	movf	??_voltASCII+1,w
  1209  0181  00FB               	movwf	_valor
  1210  0182                     l1984:
  1211  0182  087B               	movf	_valor,w
  1212  0183  00A6               	movwf	??_voltASCII
  1213  0184  0826               	movf	??_voltASCII,w
  1214  0185  00B2               	movwf	_unidades
  1215  0186                     l1986:
  1216  0186  0831               	movf	_centenas,w
  1217  0187  3E30               	addlw	48
  1218  0188  00A6               	movwf	??_voltASCII
  1219  0189  0826               	movf	??_voltASCII,w
  1220  018A  00B1               	movwf	_centenas
  1221  018B                     l1988:
  1222  018B  087A               	movf	_decenas,w
  1223  018C  3E30               	addlw	48
  1224  018D  00A6               	movwf	??_voltASCII
  1225  018E  0826               	movf	??_voltASCII,w
  1226  018F  00FA               	movwf	_decenas
  1227  0190                     l1990:
  1228  0190  0832               	movf	_unidades,w
  1229  0191  3E30               	addlw	48
  1230  0192  00A6               	movwf	??_voltASCII
  1231  0193  0826               	movf	??_voltASCII,w
  1232  0194  00B2               	movwf	_unidades
  1233  0195                     l275:
  1234  0195  0008               	return
  1235  0196                     __end_of_voltASCII:
  1236                           
  1237                           	psect	text2
  1238  0486                     __ptext2:	
  1239 ;; *************** function ___bmul *****************
  1240 ;; Defined at:
  1241 ;;		line 4 in file "E:\Microchip\XC8\pic\sources\c90\common\Umul8.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;  multiplier      1    wreg     unsigned char 
  1244 ;;  multiplicand    1    7[COMMON] unsigned char 
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;  multiplier      1    5[BANK0 ] unsigned char 
  1247 ;;  product         1    4[BANK0 ] unsigned char 
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  1    wreg      unsigned char 
  1250 ;; Registers used:
  1251 ;;		wreg, status,2, status,0
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1257 ;;      Params:         1       0       0       0       0
  1258 ;;      Locals:         0       2       0       0       0
  1259 ;;      Temps:          1       0       0       0       0
  1260 ;;      Totals:         2       2       0       0       0
  1261 ;;Total ram usage:        4 bytes
  1262 ;; Hardware stack levels used: 1
  1263 ;; Hardware stack levels required when called: 1
  1264 ;; This function calls:
  1265 ;;		Nothing
  1266 ;; This function is called by:
  1267 ;;		_voltASCII
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           
  1272                           ;psect for function ___bmul
  1273  0486                     ___bmul:
  1274                           
  1275                           ;incstack = 0
  1276                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1277                           ;___bmul@multiplier stored from wreg
  1278  0486  1283               	bcf	3,5	;RP0=0, select bank0
  1279  0487  1303               	bcf	3,6	;RP1=0, select bank0
  1280  0488  00A5               	movwf	___bmul@multiplier
  1281  0489                     l1836:
  1282  0489  01A4               	clrf	___bmul@product
  1283  048A                     l1838:
  1284  048A  1C25               	btfss	___bmul@multiplier,0
  1285  048B  2C8D               	goto	u791
  1286  048C  2C8E               	goto	u790
  1287  048D                     u791:
  1288  048D  2C92               	goto	l1842
  1289  048E                     u790:
  1290  048E                     l1840:
  1291  048E  0877               	movf	___bmul@multiplicand,w
  1292  048F  00F8               	movwf	??___bmul
  1293  0490  0878               	movf	??___bmul,w
  1294  0491  07A4               	addwf	___bmul@product,f
  1295  0492                     l1842:
  1296  0492  1003               	clrc
  1297  0493  0DF7               	rlf	___bmul@multiplicand,f
  1298  0494                     l1844:
  1299  0494  1003               	clrc
  1300  0495  0CA5               	rrf	___bmul@multiplier,f
  1301  0496  0825               	movf	___bmul@multiplier,w
  1302  0497  1D03               	btfss	3,2
  1303  0498  2C9A               	goto	u801
  1304  0499  2C9B               	goto	u800
  1305  049A                     u801:
  1306  049A  2C8A               	goto	l1838
  1307  049B                     u800:
  1308  049B                     l1846:
  1309  049B  0824               	movf	___bmul@product,w
  1310  049C                     l428:
  1311  049C  0008               	return
  1312  049D                     __end_of___bmul:
  1313                           
  1314                           	psect	text3
  1315  0196                     __ptext3:	
  1316 ;; *************** function ___awdiv *****************
  1317 ;; Defined at:
  1318 ;;		line 5 in file "E:\Microchip\XC8\pic\sources\c90\common\awdiv.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;  divisor         2    2[COMMON] int 
  1321 ;;  dividend        2    4[COMMON] int 
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  quotient        2    2[BANK0 ] int 
  1324 ;;  sign            1    1[BANK0 ] unsigned char 
  1325 ;;  counter         1    0[BANK0 ] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  2    2[COMMON] int 
  1328 ;; Registers used:
  1329 ;;		wreg, status,2, status,0
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1335 ;;      Params:         4       0       0       0       0
  1336 ;;      Locals:         0       4       0       0       0
  1337 ;;      Temps:          1       0       0       0       0
  1338 ;;      Totals:         5       4       0       0       0
  1339 ;;Total ram usage:        9 bytes
  1340 ;; Hardware stack levels used: 1
  1341 ;; Hardware stack levels required when called: 1
  1342 ;; This function calls:
  1343 ;;		Nothing
  1344 ;; This function is called by:
  1345 ;;		_voltASCII
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           
  1350                           ;psect for function ___awdiv
  1351  0196                     ___awdiv:
  1352  0196                     l1850:	
  1353                           ;incstack = 0
  1354                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1355                           
  1356  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1357  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1358  0198  01A1               	clrf	___awdiv@sign
  1359  0199                     l1852:
  1360  0199  1FF3               	btfss	___awdiv@divisor+1,7
  1361  019A  299C               	goto	u811
  1362  019B  299D               	goto	u810
  1363  019C                     u811:
  1364  019C  29A4               	goto	l1858
  1365  019D                     u810:
  1366  019D                     l1854:
  1367  019D  09F2               	comf	___awdiv@divisor,f
  1368  019E  09F3               	comf	___awdiv@divisor+1,f
  1369  019F  0AF2               	incf	___awdiv@divisor,f
  1370  01A0  1903               	skipnz
  1371  01A1  0AF3               	incf	___awdiv@divisor+1,f
  1372  01A2                     l1856:
  1373  01A2  01A1               	clrf	___awdiv@sign
  1374  01A3  0AA1               	incf	___awdiv@sign,f
  1375  01A4                     l1858:
  1376  01A4  1FF5               	btfss	___awdiv@dividend+1,7
  1377  01A5  29A7               	goto	u821
  1378  01A6  29A8               	goto	u820
  1379  01A7                     u821:
  1380  01A7  29B1               	goto	l1864
  1381  01A8                     u820:
  1382  01A8                     l1860:
  1383  01A8  09F4               	comf	___awdiv@dividend,f
  1384  01A9  09F5               	comf	___awdiv@dividend+1,f
  1385  01AA  0AF4               	incf	___awdiv@dividend,f
  1386  01AB  1903               	skipnz
  1387  01AC  0AF5               	incf	___awdiv@dividend+1,f
  1388  01AD                     l1862:
  1389  01AD  3001               	movlw	1
  1390  01AE  00F6               	movwf	??___awdiv
  1391  01AF  0876               	movf	??___awdiv,w
  1392  01B0  06A1               	xorwf	___awdiv@sign,f
  1393  01B1                     l1864:
  1394  01B1  01A2               	clrf	___awdiv@quotient
  1395  01B2  01A3               	clrf	___awdiv@quotient+1
  1396  01B3                     l1866:
  1397  01B3  0872               	movf	___awdiv@divisor,w
  1398  01B4  0473               	iorwf	___awdiv@divisor+1,w
  1399  01B5  1903               	btfsc	3,2
  1400  01B6  29B8               	goto	u831
  1401  01B7  29B9               	goto	u830
  1402  01B8                     u831:
  1403  01B8  29F0               	goto	l1886
  1404  01B9                     u830:
  1405  01B9                     l1868:
  1406  01B9  01A0               	clrf	___awdiv@counter
  1407  01BA  0AA0               	incf	___awdiv@counter,f
  1408  01BB  29C7               	goto	l1874
  1409  01BC                     l1870:
  1410  01BC  3001               	movlw	1
  1411  01BD                     u845:
  1412  01BD  1003               	clrc
  1413  01BE  0DF2               	rlf	___awdiv@divisor,f
  1414  01BF  0DF3               	rlf	___awdiv@divisor+1,f
  1415  01C0  3EFF               	addlw	-1
  1416  01C1  1D03               	skipz
  1417  01C2  29BD               	goto	u845
  1418  01C3                     l1872:
  1419  01C3  3001               	movlw	1
  1420  01C4  00F6               	movwf	??___awdiv
  1421  01C5  0876               	movf	??___awdiv,w
  1422  01C6  07A0               	addwf	___awdiv@counter,f
  1423  01C7                     l1874:
  1424  01C7  1FF3               	btfss	___awdiv@divisor+1,7
  1425  01C8  29CA               	goto	u851
  1426  01C9  29CB               	goto	u850
  1427  01CA                     u851:
  1428  01CA  29BC               	goto	l1870
  1429  01CB                     u850:
  1430  01CB                     l1876:
  1431  01CB  3001               	movlw	1
  1432  01CC                     u865:
  1433  01CC  1003               	clrc
  1434  01CD  0DA2               	rlf	___awdiv@quotient,f
  1435  01CE  0DA3               	rlf	___awdiv@quotient+1,f
  1436  01CF  3EFF               	addlw	-1
  1437  01D0  1D03               	skipz
  1438  01D1  29CC               	goto	u865
  1439  01D2  0873               	movf	___awdiv@divisor+1,w
  1440  01D3  0275               	subwf	___awdiv@dividend+1,w
  1441  01D4  1D03               	skipz
  1442  01D5  29D8               	goto	u875
  1443  01D6  0872               	movf	___awdiv@divisor,w
  1444  01D7  0274               	subwf	___awdiv@dividend,w
  1445  01D8                     u875:
  1446  01D8  1C03               	skipc
  1447  01D9  29DB               	goto	u871
  1448  01DA  29DC               	goto	u870
  1449  01DB                     u871:
  1450  01DB  29E3               	goto	l1882
  1451  01DC                     u870:
  1452  01DC                     l1878:
  1453  01DC  0872               	movf	___awdiv@divisor,w
  1454  01DD  02F4               	subwf	___awdiv@dividend,f
  1455  01DE  0873               	movf	___awdiv@divisor+1,w
  1456  01DF  1C03               	skipc
  1457  01E0  03F5               	decf	___awdiv@dividend+1,f
  1458  01E1  02F5               	subwf	___awdiv@dividend+1,f
  1459  01E2                     l1880:
  1460  01E2  1422               	bsf	___awdiv@quotient,0
  1461  01E3                     l1882:
  1462  01E3  3001               	movlw	1
  1463  01E4                     u885:
  1464  01E4  1003               	clrc
  1465  01E5  0CF3               	rrf	___awdiv@divisor+1,f
  1466  01E6  0CF2               	rrf	___awdiv@divisor,f
  1467  01E7  3EFF               	addlw	-1
  1468  01E8  1D03               	skipz
  1469  01E9  29E4               	goto	u885
  1470  01EA                     l1884:
  1471  01EA  3001               	movlw	1
  1472  01EB  02A0               	subwf	___awdiv@counter,f
  1473  01EC  1D03               	btfss	3,2
  1474  01ED  29EF               	goto	u891
  1475  01EE  29F0               	goto	u890
  1476  01EF                     u891:
  1477  01EF  29CB               	goto	l1876
  1478  01F0                     u890:
  1479  01F0                     l1886:
  1480  01F0  0821               	movf	___awdiv@sign,w
  1481  01F1  1903               	btfsc	3,2
  1482  01F2  29F4               	goto	u901
  1483  01F3  29F5               	goto	u900
  1484  01F4                     u901:
  1485  01F4  29FA               	goto	l1890
  1486  01F5                     u900:
  1487  01F5                     l1888:
  1488  01F5  09A2               	comf	___awdiv@quotient,f
  1489  01F6  09A3               	comf	___awdiv@quotient+1,f
  1490  01F7  0AA2               	incf	___awdiv@quotient,f
  1491  01F8  1903               	skipnz
  1492  01F9  0AA3               	incf	___awdiv@quotient+1,f
  1493  01FA                     l1890:
  1494  01FA  0823               	movf	___awdiv@quotient+1,w
  1495  01FB  00F3               	movwf	?___awdiv+1
  1496  01FC  0822               	movf	___awdiv@quotient,w
  1497  01FD  00F2               	movwf	?___awdiv
  1498  01FE                     l555:
  1499  01FE  0008               	return
  1500  01FF                     __end_of___awdiv:
  1501                           
  1502                           	psect	text4
  1503  03A3                     __ptext4:	
  1504 ;; *************** function _setup *****************
  1505 ;; Defined at:
  1506 ;;		line 127 in file "MainL4Master.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;		None
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;		None
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      void 
  1513 ;; Registers used:
  1514 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1520 ;;      Params:         0       0       0       0       0
  1521 ;;      Locals:         0       0       0       0       0
  1522 ;;      Temps:          0       0       0       0       0
  1523 ;;      Totals:         0       0       0       0       0
  1524 ;;Total ram usage:        0 bytes
  1525 ;; Hardware stack levels used: 1
  1526 ;; Hardware stack levels required when called: 3
  1527 ;; This function calls:
  1528 ;;		_I2C_Master_Init
  1529 ;;		_initOsc
  1530 ;; This function is called by:
  1531 ;;		_main
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           
  1536                           ;psect for function _setup
  1537  03A3                     _setup:
  1538  03A3                     l1894:	
  1539                           ;incstack = 0
  1540                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1541                           
  1542                           
  1543                           ;MainL4Master.c: 130:     decenas = decenas + 48;
  1544  03A3  1683               	bsf	3,5	;RP0=1, select bank3
  1545  03A4  1703               	bsf	3,6	;RP1=1, select bank3
  1546  03A5  0189               	clrf	9	;volatile
  1547                           
  1548                           ;MainL4Master.c: 132: }
  1549  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  1550  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  1551  03A8  0185               	clrf	5	;volatile
  1552  03A9  0186               	clrf	6	;volatile
  1553  03AA  0187               	clrf	7	;volatile
  1554  03AB  0188               	clrf	8	;volatile
  1555  03AC  0189               	clrf	9	;volatile
  1556  03AD                     l1896:
  1557  03AD  30C4               	movlw	196
  1558  03AE  0081               	movwf	1	;volatile
  1559  03AF                     l1898:
  1560  03AF  3008               	movlw	8
  1561  03B0  120A  118A  2267  120A  118A  	fcall	_initOsc
  1562  03B5                     l1900:
  1563  03B5  3000               	movlw	0
  1564  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  1565  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  1566  03B8  00A9               	movwf	I2C_Master_Init@c+3
  1567  03B9  3001               	movlw	1
  1568  03BA  00A8               	movwf	I2C_Master_Init@c+2
  1569  03BB  3086               	movlw	134
  1570  03BC  00A7               	movwf	I2C_Master_Init@c+1
  1571  03BD  30A0               	movlw	160
  1572  03BE  00A6               	movwf	I2C_Master_Init@c
  1573  03BF  120A  118A  236B  120A  118A  	fcall	_I2C_Master_Init
  1574  03C4                     l1902:
  1575  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  1576  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  1577  03C6  0185               	clrf	5	;volatile
  1578  03C7                     l1904:
  1579  03C7  0186               	clrf	6	;volatile
  1580  03C8                     l1906:
  1581  03C8  0187               	clrf	7	;volatile
  1582  03C9                     l1908:
  1583  03C9  0188               	clrf	8	;volatile
  1584  03CA                     l1910:
  1585  03CA  0189               	clrf	9	;volatile
  1586  03CB                     l1912:
  1587  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  1588  03CC  1303               	bcf	3,6	;RP1=0, select bank1
  1589  03CD  018C               	clrf	12	;volatile
  1590  03CE                     l1914:
  1591  03CE  018D               	clrf	13	;volatile
  1592  03CF                     l1916:
  1593  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  1594  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  1595  03D1  018C               	clrf	12	;volatile
  1596  03D2                     l1918:
  1597  03D2  018D               	clrf	13	;volatile
  1598  03D3                     l1920:
  1599  03D3  018B               	clrf	11	;volatile
  1600  03D4                     l272:
  1601  03D4  0008               	return
  1602  03D5                     __end_of_setup:
  1603                           
  1604                           	psect	text5
  1605  0267                     __ptext5:	
  1606 ;; *************** function _initOsc *****************
  1607 ;; Defined at:
  1608 ;;		line 14 in file "./my_lib.h"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;  frec            1    wreg     unsigned char 
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;  frec            1    4[COMMON] unsigned char 
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      void 
  1615 ;; Registers used:
  1616 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1622 ;;      Params:         0       0       0       0       0
  1623 ;;      Locals:         1       0       0       0       0
  1624 ;;      Temps:          2       0       0       0       0
  1625 ;;      Totals:         3       0       0       0       0
  1626 ;;Total ram usage:        3 bytes
  1627 ;; Hardware stack levels used: 1
  1628 ;; Hardware stack levels required when called: 1
  1629 ;; This function calls:
  1630 ;;		Nothing
  1631 ;; This function is called by:
  1632 ;;		_setup
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           
  1637                           ;psect for function _initOsc
  1638  0267                     _initOsc:
  1639                           
  1640                           ;incstack = 0
  1641                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1642                           ;initOsc@frec stored from wreg
  1643  0267  00F4               	movwf	initOsc@frec
  1644  0268                     l1478:
  1645                           
  1646                           ;./my_lib.h: 16:         switch(frec){
  1647  0268  2A9F               	goto	l1482
  1648  0269                     l145:	
  1649                           ;./my_lib.h: 17:             case 8:
  1650                           
  1651                           
  1652                           ;./my_lib.h: 18:                 OSCCONbits.IRCF0 = 1;
  1653  0269  1683               	bsf	3,5	;RP0=1, select bank1
  1654  026A  1303               	bcf	3,6	;RP1=0, select bank1
  1655  026B  160F               	bsf	15,4	;volatile
  1656                           
  1657                           ;./my_lib.h: 19:                 OSCCONbits.IRCF1 = 1;
  1658  026C  168F               	bsf	15,5	;volatile
  1659                           
  1660                           ;./my_lib.h: 20:                 OSCCONbits.IRCF2 = 1;
  1661  026D  170F               	bsf	15,6	;volatile
  1662                           
  1663                           ;./my_lib.h: 21:                 break;
  1664  026E  2AC1               	goto	l146
  1665  026F                     l147:	
  1666                           ;./my_lib.h: 23:             case 4:
  1667                           
  1668                           
  1669                           ;./my_lib.h: 24:                 OSCCONbits.IRCF0 = 0;
  1670  026F  1683               	bsf	3,5	;RP0=1, select bank1
  1671  0270  1303               	bcf	3,6	;RP1=0, select bank1
  1672  0271  120F               	bcf	15,4	;volatile
  1673                           
  1674                           ;./my_lib.h: 25:                 OSCCONbits.IRCF1 = 1;
  1675  0272  168F               	bsf	15,5	;volatile
  1676                           
  1677                           ;./my_lib.h: 26:                 OSCCONbits.IRCF2 = 1;
  1678  0273  170F               	bsf	15,6	;volatile
  1679                           
  1680                           ;./my_lib.h: 27:                 break;
  1681  0274  2AC1               	goto	l146
  1682  0275                     l148:	
  1683                           ;./my_lib.h: 28:             case 2:
  1684                           
  1685                           
  1686                           ;./my_lib.h: 29:                 OSCCONbits.IRCF0 = 1;
  1687  0275  1683               	bsf	3,5	;RP0=1, select bank1
  1688  0276  1303               	bcf	3,6	;RP1=0, select bank1
  1689  0277  160F               	bsf	15,4	;volatile
  1690                           
  1691                           ;./my_lib.h: 30:                 OSCCONbits.IRCF1 = 0;
  1692  0278  128F               	bcf	15,5	;volatile
  1693                           
  1694                           ;./my_lib.h: 31:                 OSCCONbits.IRCF2 = 1;
  1695  0279  170F               	bsf	15,6	;volatile
  1696                           
  1697                           ;./my_lib.h: 32:                 break;
  1698  027A  2AC1               	goto	l146
  1699  027B                     l149:	
  1700                           ;./my_lib.h: 33:              case 1:
  1701                           
  1702                           
  1703                           ;./my_lib.h: 34:                 OSCCONbits.IRCF0 = 0;
  1704  027B  1683               	bsf	3,5	;RP0=1, select bank1
  1705  027C  1303               	bcf	3,6	;RP1=0, select bank1
  1706  027D  120F               	bcf	15,4	;volatile
  1707                           
  1708                           ;./my_lib.h: 35:                 OSCCONbits.IRCF1 = 0;
  1709  027E  128F               	bcf	15,5	;volatile
  1710                           
  1711                           ;./my_lib.h: 36:                 OSCCONbits.IRCF2 = 1;
  1712  027F  170F               	bsf	15,6	;volatile
  1713                           
  1714                           ;./my_lib.h: 37:                 break;
  1715  0280  2AC1               	goto	l146
  1716  0281                     l150:	
  1717                           ;./my_lib.h: 38:              case 50:
  1718                           
  1719                           
  1720                           ;./my_lib.h: 39:                 OSCCONbits.IRCF0 = 0;
  1721  0281  1683               	bsf	3,5	;RP0=1, select bank1
  1722  0282  1303               	bcf	3,6	;RP1=0, select bank1
  1723  0283  120F               	bcf	15,4	;volatile
  1724                           
  1725                           ;./my_lib.h: 40:                 OSCCONbits.IRCF1 = 1;
  1726  0284  168F               	bsf	15,5	;volatile
  1727                           
  1728                           ;./my_lib.h: 41:                 OSCCONbits.IRCF2 = 1;
  1729  0285  170F               	bsf	15,6	;volatile
  1730                           
  1731                           ;./my_lib.h: 42:                 break;
  1732  0286  2AC1               	goto	l146
  1733  0287                     l151:	
  1734                           ;./my_lib.h: 43:              case 25:
  1735                           
  1736                           
  1737                           ;./my_lib.h: 44:                 OSCCONbits.IRCF0 = 0;
  1738  0287  1683               	bsf	3,5	;RP0=1, select bank1
  1739  0288  1303               	bcf	3,6	;RP1=0, select bank1
  1740  0289  120F               	bcf	15,4	;volatile
  1741                           
  1742                           ;./my_lib.h: 45:                 OSCCONbits.IRCF1 = 1;
  1743  028A  168F               	bsf	15,5	;volatile
  1744                           
  1745                           ;./my_lib.h: 46:                 OSCCONbits.IRCF2 = 0;
  1746  028B  130F               	bcf	15,6	;volatile
  1747                           
  1748                           ;./my_lib.h: 47:                 break;
  1749  028C  2AC1               	goto	l146
  1750  028D                     l152:	
  1751                           ;./my_lib.h: 48:               case 12:
  1752                           
  1753                           
  1754                           ;./my_lib.h: 49:                 OSCCONbits.IRCF0 = 1;
  1755  028D  1683               	bsf	3,5	;RP0=1, select bank1
  1756  028E  1303               	bcf	3,6	;RP1=0, select bank1
  1757  028F  160F               	bsf	15,4	;volatile
  1758                           
  1759                           ;./my_lib.h: 50:                 OSCCONbits.IRCF1 = 0;
  1760  0290  128F               	bcf	15,5	;volatile
  1761                           
  1762                           ;./my_lib.h: 51:                 OSCCONbits.IRCF2 = 0;
  1763  0291  130F               	bcf	15,6	;volatile
  1764                           
  1765                           ;./my_lib.h: 52:                 break;
  1766  0292  2AC1               	goto	l146
  1767  0293                     l153:	
  1768                           ;./my_lib.h: 53:               case 31:
  1769                           
  1770                           
  1771                           ;./my_lib.h: 54:                 OSCCONbits.IRCF0 = 0;
  1772  0293  1683               	bsf	3,5	;RP0=1, select bank1
  1773  0294  1303               	bcf	3,6	;RP1=0, select bank1
  1774  0295  120F               	bcf	15,4	;volatile
  1775                           
  1776                           ;./my_lib.h: 55:                 OSCCONbits.IRCF1 = 1;
  1777  0296  168F               	bsf	15,5	;volatile
  1778                           
  1779                           ;./my_lib.h: 56:                 OSCCONbits.IRCF2 = 1;
  1780  0297  170F               	bsf	15,6	;volatile
  1781                           
  1782                           ;./my_lib.h: 57:                 break;
  1783  0298  2AC1               	goto	l146
  1784  0299                     l154:	
  1785                           ;./my_lib.h: 58:               default:
  1786                           
  1787                           
  1788                           ;./my_lib.h: 59:                 OSCCONbits.IRCF0 = 0;
  1789  0299  1683               	bsf	3,5	;RP0=1, select bank1
  1790  029A  1303               	bcf	3,6	;RP1=0, select bank1
  1791  029B  120F               	bcf	15,4	;volatile
  1792                           
  1793                           ;./my_lib.h: 60:                 OSCCONbits.IRCF1 = 1;
  1794  029C  168F               	bsf	15,5	;volatile
  1795                           
  1796                           ;./my_lib.h: 61:                 OSCCONbits.IRCF2 = 1;
  1797  029D  170F               	bsf	15,6	;volatile
  1798                           
  1799                           ;./my_lib.h: 62:                 break;
  1800  029E  2AC1               	goto	l146
  1801  029F                     l1482:
  1802  029F  0874               	movf	initOsc@frec,w
  1803  02A0  00F2               	movwf	??_initOsc
  1804  02A1  01F3               	clrf	??_initOsc+1
  1805                           
  1806                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1807                           ; Switch size 1, requested type "simple"
  1808                           ; Number of cases is 1, Range of values is 0 to 0
  1809                           ; switch strategies available:
  1810                           ; Name         Instructions Cycles
  1811                           ; simple_byte            4     3 (average)
  1812                           ; direct_byte           11     8 (fixed)
  1813                           ; jumptable            260     6 (fixed)
  1814                           ;	Chosen strategy is simple_byte
  1815  02A2  0873               	movf	??_initOsc+1,w
  1816  02A3  3A00               	xorlw	0	; case 0
  1817  02A4  1903               	skipnz
  1818  02A5  2AA7               	goto	l2070
  1819  02A6  2A99               	goto	l154
  1820  02A7                     l2070:
  1821                           
  1822                           ; Switch size 1, requested type "simple"
  1823                           ; Number of cases is 8, Range of values is 1 to 50
  1824                           ; switch strategies available:
  1825                           ; Name         Instructions Cycles
  1826                           ; simple_byte           25    13 (average)
  1827                           ; direct_byte          161    11 (fixed)
  1828                           ; jumptable            263     9 (fixed)
  1829                           ;	Chosen strategy is simple_byte
  1830  02A7  0872               	movf	??_initOsc,w
  1831  02A8  3A01               	xorlw	1	; case 1
  1832  02A9  1903               	skipnz
  1833  02AA  2A7B               	goto	l149
  1834  02AB  3A03               	xorlw	3	; case 2
  1835  02AC  1903               	skipnz
  1836  02AD  2A75               	goto	l148
  1837  02AE  3A06               	xorlw	6	; case 4
  1838  02AF  1903               	skipnz
  1839  02B0  2A6F               	goto	l147
  1840  02B1  3A0C               	xorlw	12	; case 8
  1841  02B2  1903               	skipnz
  1842  02B3  2A69               	goto	l145
  1843  02B4  3A04               	xorlw	4	; case 12
  1844  02B5  1903               	skipnz
  1845  02B6  2A8D               	goto	l152
  1846  02B7  3A15               	xorlw	21	; case 25
  1847  02B8  1903               	skipnz
  1848  02B9  2A87               	goto	l151
  1849  02BA  3A06               	xorlw	6	; case 31
  1850  02BB  1903               	skipnz
  1851  02BC  2A93               	goto	l153
  1852  02BD  3A2D               	xorlw	45	; case 50
  1853  02BE  1903               	skipnz
  1854  02BF  2A81               	goto	l150
  1855  02C0  2A99               	goto	l154
  1856  02C1                     l146:
  1857                           
  1858                           ;./my_lib.h: 64:     OSCCONbits.SCS = 1;
  1859  02C1  140F               	bsf	15,0	;volatile
  1860  02C2                     l155:
  1861  02C2  0008               	return
  1862  02C3                     __end_of_initOsc:
  1863                           
  1864                           	psect	text6
  1865  036B                     __ptext6:	
  1866 ;; *************** function _I2C_Master_Init *****************
  1867 ;; Defined at:
  1868 ;;		line 16 in file "I2C.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  c               4    6[BANK0 ] const unsigned long 
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;		None
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  1    wreg      void 
  1875 ;; Registers used:
  1876 ;;		wreg, status,2, status,0, pclath, cstack
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1882 ;;      Params:         0       4       0       0       0
  1883 ;;      Locals:         0       0       0       0       0
  1884 ;;      Temps:          0       4       0       0       0
  1885 ;;      Totals:         0       8       0       0       0
  1886 ;;Total ram usage:        8 bytes
  1887 ;; Hardware stack levels used: 1
  1888 ;; Hardware stack levels required when called: 2
  1889 ;; This function calls:
  1890 ;;		___lldiv
  1891 ;; This function is called by:
  1892 ;;		_setup
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           
  1897                           ;psect for function _I2C_Master_Init
  1898  036B                     _I2C_Master_Init:
  1899  036B                     l1802:	
  1900                           ;incstack = 0
  1901                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1902                           
  1903                           
  1904                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1905  036B  3028               	movlw	40
  1906  036C  1283               	bcf	3,5	;RP0=0, select bank0
  1907  036D  1303               	bcf	3,6	;RP1=0, select bank0
  1908  036E  0094               	movwf	20	;volatile
  1909  036F                     l1804:
  1910                           
  1911                           ;I2C.c: 19:     SSPCON2 = 0;
  1912  036F  1683               	bsf	3,5	;RP0=1, select bank1
  1913  0370  1303               	bcf	3,6	;RP1=0, select bank1
  1914  0371  0191               	clrf	17	;volatile
  1915  0372                     l1806:
  1916                           
  1917                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1918  0372  1283               	bcf	3,5	;RP0=0, select bank0
  1919  0373  1303               	bcf	3,6	;RP1=0, select bank0
  1920  0374  0826               	movf	I2C_Master_Init@c,w
  1921  0375  00AA               	movwf	??_I2C_Master_Init
  1922  0376  0827               	movf	I2C_Master_Init@c+1,w
  1923  0377  00AB               	movwf	??_I2C_Master_Init+1
  1924  0378  0828               	movf	I2C_Master_Init@c+2,w
  1925  0379  00AC               	movwf	??_I2C_Master_Init+2
  1926  037A  0829               	movf	I2C_Master_Init@c+3,w
  1927  037B  00AD               	movwf	??_I2C_Master_Init+3
  1928  037C  3002               	movlw	2
  1929  037D                     u785:
  1930  037D  1003               	clrc
  1931  037E  0DAA               	rlf	??_I2C_Master_Init,f
  1932  037F  0DAB               	rlf	??_I2C_Master_Init+1,f
  1933  0380  0DAC               	rlf	??_I2C_Master_Init+2,f
  1934  0381  0DAD               	rlf	??_I2C_Master_Init+3,f
  1935  0382                     u780:
  1936  0382  3EFF               	addlw	-1
  1937  0383  1D03               	skipz
  1938  0384  2B7D               	goto	u785
  1939  0385  082D               	movf	??_I2C_Master_Init+3,w
  1940  0386  00F5               	movwf	___lldiv@divisor+3
  1941  0387  082C               	movf	??_I2C_Master_Init+2,w
  1942  0388  00F4               	movwf	___lldiv@divisor+2
  1943  0389  082B               	movf	??_I2C_Master_Init+1,w
  1944  038A  00F3               	movwf	___lldiv@divisor+1
  1945  038B  082A               	movf	??_I2C_Master_Init,w
  1946  038C  00F2               	movwf	___lldiv@divisor
  1947  038D  3000               	movlw	0
  1948  038E  00F9               	movwf	___lldiv@dividend+3
  1949  038F  307A               	movlw	122
  1950  0390  00F8               	movwf	___lldiv@dividend+2
  1951  0391  3012               	movlw	18
  1952  0392  00F7               	movwf	___lldiv@dividend+1
  1953  0393  3000               	movlw	0
  1954  0394  00F6               	movwf	___lldiv@dividend
  1955  0395  120A  118A  21FF  120A  118A  	fcall	___lldiv
  1956  039A  0872               	movf	?___lldiv,w
  1957  039B  3EFF               	addlw	255
  1958  039C  1683               	bsf	3,5	;RP0=1, select bank1
  1959  039D  1303               	bcf	3,6	;RP1=0, select bank1
  1960  039E  0093               	movwf	19	;volatile
  1961  039F                     l1808:
  1962                           
  1963                           ;I2C.c: 21:     SSPSTAT = 0;
  1964  039F  0194               	clrf	20	;volatile
  1965  03A0                     l1810:
  1966                           
  1967                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1968  03A0  1587               	bsf	7,3	;volatile
  1969  03A1                     l1812:
  1970                           
  1971                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1972  03A1  1607               	bsf	7,4	;volatile
  1973  03A2                     l29:
  1974  03A2  0008               	return
  1975  03A3                     __end_of_I2C_Master_Init:
  1976                           
  1977                           	psect	text7
  1978  01FF                     __ptext7:	
  1979 ;; *************** function ___lldiv *****************
  1980 ;; Defined at:
  1981 ;;		line 5 in file "E:\Microchip\XC8\pic\sources\c90\common\__lldiv.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;  divisor         4    2[COMMON] unsigned long 
  1984 ;;  dividend        4    6[COMMON] unsigned long 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  quotient        4    1[BANK0 ] unsigned long 
  1987 ;;  counter         1    5[BANK0 ] unsigned char 
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  4    2[COMMON] unsigned long 
  1990 ;; Registers used:
  1991 ;;		wreg, status,2, status,0
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1997 ;;      Params:         8       0       0       0       0
  1998 ;;      Locals:         0       5       0       0       0
  1999 ;;      Temps:          0       1       0       0       0
  2000 ;;      Totals:         8       6       0       0       0
  2001 ;;Total ram usage:       14 bytes
  2002 ;; Hardware stack levels used: 1
  2003 ;; Hardware stack levels required when called: 1
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_I2C_Master_Init
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           
  2012                           ;psect for function ___lldiv
  2013  01FF                     ___lldiv:
  2014  01FF                     l1778:	
  2015                           ;incstack = 0
  2016                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2017                           
  2018  01FF  3000               	movlw	0
  2019  0200  1283               	bcf	3,5	;RP0=0, select bank0
  2020  0201  1303               	bcf	3,6	;RP1=0, select bank0
  2021  0202  00A4               	movwf	___lldiv@quotient+3
  2022  0203  3000               	movlw	0
  2023  0204  00A3               	movwf	___lldiv@quotient+2
  2024  0205  3000               	movlw	0
  2025  0206  00A2               	movwf	___lldiv@quotient+1
  2026  0207  3000               	movlw	0
  2027  0208  00A1               	movwf	___lldiv@quotient
  2028  0209  0875               	movf	___lldiv@divisor+3,w
  2029  020A  0474               	iorwf	___lldiv@divisor+2,w
  2030  020B  0473               	iorwf	___lldiv@divisor+1,w
  2031  020C  0472               	iorwf	___lldiv@divisor,w
  2032  020D  1903               	skipnz
  2033  020E  2A10               	goto	u711
  2034  020F  2A11               	goto	u710
  2035  0210                     u711:
  2036  0210  2A5E               	goto	l1798
  2037  0211                     u710:
  2038  0211                     l1780:
  2039  0211  01A5               	clrf	___lldiv@counter
  2040  0212  0AA5               	incf	___lldiv@counter,f
  2041  0213  2A21               	goto	l1784
  2042  0214                     l1782:
  2043  0214  3001               	movlw	1
  2044  0215  00A0               	movwf	??___lldiv
  2045  0216                     u725:
  2046  0216  1003               	clrc
  2047  0217  0DF2               	rlf	___lldiv@divisor,f
  2048  0218  0DF3               	rlf	___lldiv@divisor+1,f
  2049  0219  0DF4               	rlf	___lldiv@divisor+2,f
  2050  021A  0DF5               	rlf	___lldiv@divisor+3,f
  2051  021B  0BA0               	decfsz	??___lldiv,f
  2052  021C  2A16               	goto	u725
  2053  021D  3001               	movlw	1
  2054  021E  00A0               	movwf	??___lldiv
  2055  021F  0820               	movf	??___lldiv,w
  2056  0220  07A5               	addwf	___lldiv@counter,f
  2057  0221                     l1784:
  2058  0221  1FF5               	btfss	___lldiv@divisor+3,7
  2059  0222  2A24               	goto	u731
  2060  0223  2A25               	goto	u730
  2061  0224                     u731:
  2062  0224  2A14               	goto	l1782
  2063  0225                     u730:
  2064  0225                     l1786:
  2065  0225  3001               	movlw	1
  2066  0226  00A0               	movwf	??___lldiv
  2067  0227                     u745:
  2068  0227  1003               	clrc
  2069  0228  0DA1               	rlf	___lldiv@quotient,f
  2070  0229  0DA2               	rlf	___lldiv@quotient+1,f
  2071  022A  0DA3               	rlf	___lldiv@quotient+2,f
  2072  022B  0DA4               	rlf	___lldiv@quotient+3,f
  2073  022C  0BA0               	decfsz	??___lldiv,f
  2074  022D  2A27               	goto	u745
  2075  022E                     l1788:
  2076  022E  0875               	movf	___lldiv@divisor+3,w
  2077  022F  0279               	subwf	___lldiv@dividend+3,w
  2078  0230  1D03               	skipz
  2079  0231  2A3C               	goto	u755
  2080  0232  0874               	movf	___lldiv@divisor+2,w
  2081  0233  0278               	subwf	___lldiv@dividend+2,w
  2082  0234  1D03               	skipz
  2083  0235  2A3C               	goto	u755
  2084  0236  0873               	movf	___lldiv@divisor+1,w
  2085  0237  0277               	subwf	___lldiv@dividend+1,w
  2086  0238  1D03               	skipz
  2087  0239  2A3C               	goto	u755
  2088  023A  0872               	movf	___lldiv@divisor,w
  2089  023B  0276               	subwf	___lldiv@dividend,w
  2090  023C                     u755:
  2091  023C  1C03               	skipc
  2092  023D  2A3F               	goto	u751
  2093  023E  2A40               	goto	u750
  2094  023F                     u751:
  2095  023F  2A4F               	goto	l1794
  2096  0240                     u750:
  2097  0240                     l1790:
  2098  0240  0872               	movf	___lldiv@divisor,w
  2099  0241  02F6               	subwf	___lldiv@dividend,f
  2100  0242  0873               	movf	___lldiv@divisor+1,w
  2101  0243  1C03               	skipc
  2102  0244  0F73               	incfsz	___lldiv@divisor+1,w
  2103  0245  02F7               	subwf	___lldiv@dividend+1,f
  2104  0246  0874               	movf	___lldiv@divisor+2,w
  2105  0247  1C03               	skipc
  2106  0248  0F74               	incfsz	___lldiv@divisor+2,w
  2107  0249  02F8               	subwf	___lldiv@dividend+2,f
  2108  024A  0875               	movf	___lldiv@divisor+3,w
  2109  024B  1C03               	skipc
  2110  024C  0F75               	incfsz	___lldiv@divisor+3,w
  2111  024D  02F9               	subwf	___lldiv@dividend+3,f
  2112  024E                     l1792:
  2113  024E  1421               	bsf	___lldiv@quotient,0
  2114  024F                     l1794:
  2115  024F  3001               	movlw	1
  2116  0250                     u765:
  2117  0250  1003               	clrc
  2118  0251  0CF5               	rrf	___lldiv@divisor+3,f
  2119  0252  0CF4               	rrf	___lldiv@divisor+2,f
  2120  0253  0CF3               	rrf	___lldiv@divisor+1,f
  2121  0254  0CF2               	rrf	___lldiv@divisor,f
  2122  0255  3EFF               	addlw	-1
  2123  0256  1D03               	skipz
  2124  0257  2A50               	goto	u765
  2125  0258                     l1796:
  2126  0258  3001               	movlw	1
  2127  0259  02A5               	subwf	___lldiv@counter,f
  2128  025A  1D03               	btfss	3,2
  2129  025B  2A5D               	goto	u771
  2130  025C  2A5E               	goto	u770
  2131  025D                     u771:
  2132  025D  2A25               	goto	l1786
  2133  025E                     u770:
  2134  025E                     l1798:
  2135  025E  0824               	movf	___lldiv@quotient+3,w
  2136  025F  00F5               	movwf	?___lldiv+3
  2137  0260  0823               	movf	___lldiv@quotient+2,w
  2138  0261  00F4               	movwf	?___lldiv+2
  2139  0262  0822               	movf	___lldiv@quotient+1,w
  2140  0263  00F3               	movwf	?___lldiv+1
  2141  0264  0821               	movf	___lldiv@quotient,w
  2142  0265  00F2               	movwf	?___lldiv
  2143  0266                     l438:
  2144  0266  0008               	return
  2145  0267                     __end_of___lldiv:
  2146                           
  2147                           	psect	text8
  2148  0403                     __ptext8:	
  2149 ;; *************** function _Lcd_Write_String *****************
  2150 ;; Defined at:
  2151 ;;		line 78 in file "LCD.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;  a               1    wreg     PTR unsigned char 
  2154 ;;		 -> STR_4(3), STR_3(2), STR_2(17), 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2157 ;;		 -> STR_4(3), STR_3(2), STR_2(17), 
  2158 ;;  i               2    0[BANK0 ] int 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  1    wreg      void 
  2161 ;; Registers used:
  2162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2168 ;;      Params:         0       0       0       0       0
  2169 ;;      Locals:         0       3       0       0       0
  2170 ;;      Temps:          0       0       0       0       0
  2171 ;;      Totals:         0       3       0       0       0
  2172 ;;Total ram usage:        3 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; Hardware stack levels required when called: 3
  2175 ;; This function calls:
  2176 ;;		_Lcd_Write_Char
  2177 ;; This function is called by:
  2178 ;;		_main
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           
  2183                           ;psect for function _Lcd_Write_String
  2184  0403                     _Lcd_Write_String:
  2185                           
  2186                           ;incstack = 0
  2187                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2188                           ;Lcd_Write_String@a stored from wreg
  2189  0403  1283               	bcf	3,5	;RP0=0, select bank0
  2190  0404  1303               	bcf	3,6	;RP1=0, select bank0
  2191  0405  00A2               	movwf	Lcd_Write_String@a
  2192  0406                     l1964:
  2193                           
  2194                           ;LCD.c: 79:     int i;;LCD.c: 80:     for (i = 0; a[i] != '\0'; i++)
  2195  0406  01A0               	clrf	Lcd_Write_String@i
  2196  0407  01A1               	clrf	Lcd_Write_String@i+1
  2197  0408  2C1E               	goto	l1970
  2198  0409                     l1966:
  2199                           
  2200                           ;LCD.c: 81:         Lcd_Write_Char(a[i]);
  2201  0409  0820               	movf	Lcd_Write_String@i,w
  2202  040A  0722               	addwf	Lcd_Write_String@a,w
  2203  040B  0084               	movwf	4
  2204  040C  120A  118A  244E  120A  118A  	fcall	stringdir
  2205  0411  120A  118A  242C  120A  118A  	fcall	_Lcd_Write_Char
  2206  0416                     l1968:
  2207  0416  3001               	movlw	1
  2208  0417  1283               	bcf	3,5	;RP0=0, select bank0
  2209  0418  1303               	bcf	3,6	;RP1=0, select bank0
  2210  0419  07A0               	addwf	Lcd_Write_String@i,f
  2211  041A  1803               	skipnc
  2212  041B  0AA1               	incf	Lcd_Write_String@i+1,f
  2213  041C  3000               	movlw	0
  2214  041D  07A1               	addwf	Lcd_Write_String@i+1,f
  2215  041E                     l1970:
  2216  041E  0820               	movf	Lcd_Write_String@i,w
  2217  041F  0722               	addwf	Lcd_Write_String@a,w
  2218  0420  0084               	movwf	4
  2219  0421  120A  118A  244E  120A  118A  	fcall	stringdir
  2220  0426  3A00               	xorlw	0
  2221  0427  1D03               	skipz
  2222  0428  2C2A               	goto	u951
  2223  0429  2C2B               	goto	u950
  2224  042A                     u951:
  2225  042A  2C09               	goto	l1966
  2226  042B                     u950:
  2227  042B                     l310:
  2228  042B  0008               	return
  2229  042C                     __end_of_Lcd_Write_String:
  2230                           
  2231                           	psect	text9
  2232  042C                     __ptext9:	
  2233 ;; *************** function _Lcd_Write_Char *****************
  2234 ;; Defined at:
  2235 ;;		line 66 in file "LCD.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  a               1    wreg     unsigned char 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  a               1    5[COMMON] unsigned char 
  2240 ;;  y               1    7[COMMON] unsigned char 
  2241 ;;  temp            1    6[COMMON] unsigned char 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg, status,2, status,0, pclath, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2251 ;;      Params:         0       0       0       0       0
  2252 ;;      Locals:         3       0       0       0       0
  2253 ;;      Temps:          2       0       0       0       0
  2254 ;;      Totals:         5       0       0       0       0
  2255 ;;Total ram usage:        5 bytes
  2256 ;; Hardware stack levels used: 1
  2257 ;; Hardware stack levels required when called: 2
  2258 ;; This function calls:
  2259 ;;		_Lcd_Port
  2260 ;; This function is called by:
  2261 ;;		_main
  2262 ;;		_Lcd_Write_String
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           
  2267                           ;psect for function _Lcd_Write_Char
  2268  042C                     _Lcd_Write_Char:
  2269                           
  2270                           ;incstack = 0
  2271                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2272                           ;Lcd_Write_Char@a stored from wreg
  2273  042C  00F5               	movwf	Lcd_Write_Char@a
  2274  042D                     l1814:
  2275                           
  2276                           ;LCD.c: 67:     char temp, y;;LCD.c: 68:     temp = a;
  2277  042D  0875               	movf	Lcd_Write_Char@a,w
  2278  042E  00F3               	movwf	??_Lcd_Write_Char
  2279  042F  0873               	movf	??_Lcd_Write_Char,w
  2280  0430  00F6               	movwf	Lcd_Write_Char@temp
  2281                           
  2282                           ;LCD.c: 69:     y = temp;
  2283  0431  0876               	movf	Lcd_Write_Char@temp,w
  2284  0432  00F3               	movwf	??_Lcd_Write_Char
  2285  0433  0873               	movf	??_Lcd_Write_Char,w
  2286  0434  00F7               	movwf	Lcd_Write_Char@y
  2287  0435                     l1816:
  2288                           
  2289                           ;LCD.c: 70:     PORTEbits.RE0 = 1;
  2290  0435  1283               	bcf	3,5	;RP0=0, select bank0
  2291  0436  1303               	bcf	3,6	;RP1=0, select bank0
  2292  0437  1409               	bsf	9,0	;volatile
  2293  0438                     l1818:
  2294                           
  2295                           ;LCD.c: 71:     Lcd_Port(y);
  2296  0438  0877               	movf	Lcd_Write_Char@y,w
  2297  0439  120A  118A  24DA  120A  118A  	fcall	_Lcd_Port
  2298  043E                     l1820:
  2299                           
  2300                           ;LCD.c: 72:     RE1 = 1;
  2301  043E  1283               	bcf	3,5	;RP0=0, select bank0
  2302  043F  1303               	bcf	3,6	;RP1=0, select bank0
  2303  0440  1489               	bsf	9,1	;volatile
  2304  0441                     l1822:
  2305                           
  2306                           ;LCD.c: 73:     _delay((unsigned long)((40)*(8000000/4000.0)));
  2307  0441  3068               	movlw	104
  2308  0442  00F4               	movwf	??_Lcd_Write_Char+1
  2309  0443  30E4               	movlw	228
  2310  0444  00F3               	movwf	??_Lcd_Write_Char
  2311  0445                     u1017:
  2312  0445  0BF3               	decfsz	??_Lcd_Write_Char,f
  2313  0446  2C45               	goto	u1017
  2314  0447  0BF4               	decfsz	??_Lcd_Write_Char+1,f
  2315  0448  2C45               	goto	u1017
  2316  0449  0000               	nop
  2317  044A                     l1824:
  2318                           
  2319                           ;LCD.c: 74:     RE1 = 0;
  2320  044A  1283               	bcf	3,5	;RP0=0, select bank0
  2321  044B  1303               	bcf	3,6	;RP1=0, select bank0
  2322  044C  1089               	bcf	9,1	;volatile
  2323  044D                     l304:
  2324  044D  0008               	return
  2325  044E                     __end_of_Lcd_Write_Char:
  2326                           
  2327                           	psect	text10
  2328  02C3                     __ptext10:	
  2329 ;; *************** function _Lcd_Set_Cursor *****************
  2330 ;; Defined at:
  2331 ;;		line 30 in file "LCD.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  a               1    wreg     unsigned char 
  2334 ;;  b               1    6[COMMON] unsigned char 
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;  a               1    0[BANK0 ] unsigned char 
  2337 ;;  temp            1    3[BANK0 ] unsigned char 
  2338 ;;  y               1    2[BANK0 ] unsigned char 
  2339 ;;  z               1    1[BANK0 ] unsigned char 
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      void 
  2342 ;; Registers used:
  2343 ;;		wreg, status,2, status,0, pclath, cstack
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2349 ;;      Params:         1       0       0       0       0
  2350 ;;      Locals:         0       4       0       0       0
  2351 ;;      Temps:          2       0       0       0       0
  2352 ;;      Totals:         3       4       0       0       0
  2353 ;;Total ram usage:        7 bytes
  2354 ;; Hardware stack levels used: 1
  2355 ;; Hardware stack levels required when called: 3
  2356 ;; This function calls:
  2357 ;;		_Lcd_Cmd
  2358 ;; This function is called by:
  2359 ;;		_main
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           
  2364                           ;psect for function _Lcd_Set_Cursor
  2365  02C3                     _Lcd_Set_Cursor:
  2366                           
  2367                           ;incstack = 0
  2368                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2369                           ;Lcd_Set_Cursor@a stored from wreg
  2370  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  2371  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  2372  02C5  00A0               	movwf	Lcd_Set_Cursor@a
  2373  02C6                     l1944:
  2374                           
  2375                           ;LCD.c: 31:     char temp, z, y;;LCD.c: 32:     if (a == 1) {
  2376  02C6  0320               	decf	Lcd_Set_Cursor@a,w
  2377  02C7  1D03               	btfss	3,2
  2378  02C8  2ACA               	goto	u911
  2379  02C9  2ACB               	goto	u910
  2380  02CA                     u911:
  2381  02CA  2AF0               	goto	l1954
  2382  02CB                     u910:
  2383  02CB                     l1946:
  2384                           
  2385                           ;LCD.c: 33:         temp = 0x80 + b - 1;
  2386  02CB  0876               	movf	Lcd_Set_Cursor@b,w
  2387  02CC  3E7F               	addlw	127
  2388  02CD  00F7               	movwf	??_Lcd_Set_Cursor
  2389  02CE  0877               	movf	??_Lcd_Set_Cursor,w
  2390  02CF  00A3               	movwf	Lcd_Set_Cursor@temp
  2391                           
  2392                           ;LCD.c: 34:         z = temp >> 4;
  2393  02D0  0823               	movf	Lcd_Set_Cursor@temp,w
  2394  02D1  00F7               	movwf	??_Lcd_Set_Cursor
  2395  02D2  3004               	movlw	4
  2396  02D3                     u925:
  2397  02D3  1003               	clrc
  2398  02D4  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2399  02D5  3EFF               	addlw	-1
  2400  02D6  1D03               	skipz
  2401  02D7  2AD3               	goto	u925
  2402  02D8  0877               	movf	??_Lcd_Set_Cursor,w
  2403  02D9  00F8               	movwf	??_Lcd_Set_Cursor+1
  2404  02DA  0878               	movf	??_Lcd_Set_Cursor+1,w
  2405  02DB  00A1               	movwf	Lcd_Set_Cursor@z
  2406  02DC                     l1948:
  2407                           
  2408                           ;LCD.c: 35:         y = temp & 0x0F;
  2409  02DC  0823               	movf	Lcd_Set_Cursor@temp,w
  2410  02DD  390F               	andlw	15
  2411  02DE  00F7               	movwf	??_Lcd_Set_Cursor
  2412  02DF  0877               	movf	??_Lcd_Set_Cursor,w
  2413  02E0  00A2               	movwf	Lcd_Set_Cursor@y
  2414  02E1                     l1950:
  2415                           
  2416                           ;LCD.c: 36:         Lcd_Cmd(z);
  2417  02E1  0821               	movf	Lcd_Set_Cursor@z,w
  2418  02E2  120A  118A  246C  120A  118A  	fcall	_Lcd_Cmd
  2419  02E7                     l1952:
  2420                           
  2421                           ;LCD.c: 37:         Lcd_Cmd(y);
  2422  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  2423  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  2424  02E9  0822               	movf	Lcd_Set_Cursor@y,w
  2425  02EA  120A  118A  246C  120A  118A  	fcall	_Lcd_Cmd
  2426                           
  2427                           ;LCD.c: 38:     } else if (a == 2) {
  2428  02EF  2B1A               	goto	l298
  2429  02F0                     l1954:
  2430  02F0  3002               	movlw	2
  2431  02F1  0620               	xorwf	Lcd_Set_Cursor@a,w
  2432  02F2  1D03               	btfss	3,2
  2433  02F3  2AF5               	goto	u931
  2434  02F4  2AF6               	goto	u930
  2435  02F5                     u931:
  2436  02F5  2B1A               	goto	l298
  2437  02F6                     u930:
  2438  02F6                     l1956:
  2439                           
  2440                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  2441  02F6  0876               	movf	Lcd_Set_Cursor@b,w
  2442  02F7  3EBF               	addlw	191
  2443  02F8  00F7               	movwf	??_Lcd_Set_Cursor
  2444  02F9  0877               	movf	??_Lcd_Set_Cursor,w
  2445  02FA  00A3               	movwf	Lcd_Set_Cursor@temp
  2446                           
  2447                           ;LCD.c: 40:         z = temp >> 4;
  2448  02FB  0823               	movf	Lcd_Set_Cursor@temp,w
  2449  02FC  00F7               	movwf	??_Lcd_Set_Cursor
  2450  02FD  3004               	movlw	4
  2451  02FE                     u945:
  2452  02FE  1003               	clrc
  2453  02FF  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2454  0300  3EFF               	addlw	-1
  2455  0301  1D03               	skipz
  2456  0302  2AFE               	goto	u945
  2457  0303  0877               	movf	??_Lcd_Set_Cursor,w
  2458  0304  00F8               	movwf	??_Lcd_Set_Cursor+1
  2459  0305  0878               	movf	??_Lcd_Set_Cursor+1,w
  2460  0306  00A1               	movwf	Lcd_Set_Cursor@z
  2461  0307                     l1958:
  2462                           
  2463                           ;LCD.c: 41:         y = temp & 0xF0;
  2464  0307  0823               	movf	Lcd_Set_Cursor@temp,w
  2465  0308  39F0               	andlw	240
  2466  0309  00F7               	movwf	??_Lcd_Set_Cursor
  2467  030A  0877               	movf	??_Lcd_Set_Cursor,w
  2468  030B  00A2               	movwf	Lcd_Set_Cursor@y
  2469  030C                     l1960:
  2470                           
  2471                           ;LCD.c: 42:         Lcd_Cmd(z);
  2472  030C  0821               	movf	Lcd_Set_Cursor@z,w
  2473  030D  120A  118A  246C  120A  118A  	fcall	_Lcd_Cmd
  2474  0312                     l1962:
  2475                           
  2476                           ;LCD.c: 43:         Lcd_Cmd(y);
  2477  0312  1283               	bcf	3,5	;RP0=0, select bank0
  2478  0313  1303               	bcf	3,6	;RP1=0, select bank0
  2479  0314  0822               	movf	Lcd_Set_Cursor@y,w
  2480  0315  120A  118A  246C  120A  118A  	fcall	_Lcd_Cmd
  2481  031A                     l298:
  2482  031A  0008               	return
  2483  031B                     __end_of_Lcd_Set_Cursor:
  2484                           
  2485                           	psect	text11
  2486  031B                     __ptext11:	
  2487 ;; *************** function _Lcd_Init *****************
  2488 ;; Defined at:
  2489 ;;		line 47 in file "LCD.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;		None
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;		None
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      void 
  2496 ;; Registers used:
  2497 ;;		wreg, status,2, status,0, pclath, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2503 ;;      Params:         0       0       0       0       0
  2504 ;;      Locals:         0       0       0       0       0
  2505 ;;      Temps:          2       0       0       0       0
  2506 ;;      Totals:         2       0       0       0       0
  2507 ;;Total ram usage:        2 bytes
  2508 ;; Hardware stack levels used: 1
  2509 ;; Hardware stack levels required when called: 3
  2510 ;; This function calls:
  2511 ;;		_Lcd_Cmd
  2512 ;;		_Lcd_Port
  2513 ;; This function is called by:
  2514 ;;		_main
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           
  2519                           ;psect for function _Lcd_Init
  2520  031B                     _Lcd_Init:
  2521  031B                     l1922:	
  2522                           ;incstack = 0
  2523                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2524                           
  2525                           
  2526                           ;LCD.c: 48:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2527  031B  3034               	movlw	52
  2528  031C  00F7               	movwf	??_Lcd_Init+1
  2529  031D  30F1               	movlw	241
  2530  031E  00F6               	movwf	??_Lcd_Init
  2531  031F                     u1027:
  2532  031F  0BF6               	decfsz	??_Lcd_Init,f
  2533  0320  2B1F               	goto	u1027
  2534  0321  0BF7               	decfsz	??_Lcd_Init+1,f
  2535  0322  2B1F               	goto	u1027
  2536  0323  2B24               	nop2
  2537  0324                     l1924:
  2538                           
  2539                           ;LCD.c: 49:     Lcd_Port(0x00);
  2540  0324  3000               	movlw	0
  2541  0325  120A  118A  24DA  120A  118A  	fcall	_Lcd_Port
  2542  032A                     l1926:
  2543                           
  2544                           ;LCD.c: 50:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2545  032A  3034               	movlw	52
  2546  032B  00F7               	movwf	??_Lcd_Init+1
  2547  032C  30F1               	movlw	241
  2548  032D  00F6               	movwf	??_Lcd_Init
  2549  032E                     u1037:
  2550  032E  0BF6               	decfsz	??_Lcd_Init,f
  2551  032F  2B2E               	goto	u1037
  2552  0330  0BF7               	decfsz	??_Lcd_Init+1,f
  2553  0331  2B2E               	goto	u1037
  2554  0332  2B33               	nop2
  2555                           
  2556                           ;LCD.c: 51:     Lcd_Cmd(0x30);
  2557  0333  3030               	movlw	48
  2558  0334  120A  118A  246C  120A  118A  	fcall	_Lcd_Cmd
  2559  0339                     l1928:
  2560                           
  2561                           ;LCD.c: 52:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2562  0339  300D               	movlw	13
  2563  033A  00F7               	movwf	??_Lcd_Init+1
  2564  033B  30FB               	movlw	251
  2565  033C  00F6               	movwf	??_Lcd_Init
  2566  033D                     u1047:
  2567  033D  0BF6               	decfsz	??_Lcd_Init,f
  2568  033E  2B3D               	goto	u1047
  2569  033F  0BF7               	decfsz	??_Lcd_Init+1,f
  2570  0340  2B3D               	goto	u1047
  2571  0341  2B42               	nop2
  2572  0342                     l1930:
  2573                           
  2574                           ;LCD.c: 53:     Lcd_Cmd(0x30);
  2575  0342  3030               	movlw	48
  2576  0343  120A  118A  246C  120A  118A  	fcall	_Lcd_Cmd
  2577                           
  2578                           ;LCD.c: 54:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  2579  0348  3085               	movlw	133
  2580  0349  00F6               	movwf	??_Lcd_Init
  2581  034A                     u1057:
  2582  034A  0BF6               	decfsz	??_Lcd_Init,f
  2583  034B  2B4A               	goto	u1057
  2584  034C                     l1932:
  2585                           
  2586                           ;LCD.c: 55:     Lcd_Cmd(0x30);
  2587  034C  3030               	movlw	48
  2588  034D  120A  118A  246C  120A  118A  	fcall	_Lcd_Cmd
  2589  0352                     l1934:
  2590                           
  2591                           ;LCD.c: 57:     Lcd_Cmd(0x3C);
  2592  0352  303C               	movlw	60
  2593  0353  120A  118A  246C  120A  118A  	fcall	_Lcd_Cmd
  2594  0358                     l1936:
  2595                           
  2596                           ;LCD.c: 59:     Lcd_Cmd(0x08);
  2597  0358  3008               	movlw	8
  2598  0359  120A  118A  246C  120A  118A  	fcall	_Lcd_Cmd
  2599  035E                     l1938:
  2600                           
  2601                           ;LCD.c: 61:     Lcd_Cmd(0x01);
  2602  035E  3001               	movlw	1
  2603  035F  120A  118A  246C  120A  118A  	fcall	_Lcd_Cmd
  2604  0364                     l1940:
  2605                           
  2606                           ;LCD.c: 63:     Lcd_Cmd(0x06);
  2607  0364  3006               	movlw	6
  2608  0365  120A  118A  246C  120A  118A  	fcall	_Lcd_Cmd
  2609  036A                     l301:
  2610  036A  0008               	return
  2611  036B                     __end_of_Lcd_Init:
  2612                           
  2613                           	psect	text12
  2614  049D                     __ptext12:	
  2615 ;; *************** function _Lcd_Clear *****************
  2616 ;; Defined at:
  2617 ;;		line 25 in file "LCD.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;		None
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;		None
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      void 
  2624 ;; Registers used:
  2625 ;;		wreg, status,2, status,0, pclath, cstack
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2631 ;;      Params:         0       0       0       0       0
  2632 ;;      Locals:         0       0       0       0       0
  2633 ;;      Temps:          0       0       0       0       0
  2634 ;;      Totals:         0       0       0       0       0
  2635 ;;Total ram usage:        0 bytes
  2636 ;; Hardware stack levels used: 1
  2637 ;; Hardware stack levels required when called: 3
  2638 ;; This function calls:
  2639 ;;		_Lcd_Cmd
  2640 ;; This function is called by:
  2641 ;;		_main
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           
  2646                           ;psect for function _Lcd_Clear
  2647  049D                     _Lcd_Clear:
  2648  049D                     l1942:	
  2649                           ;incstack = 0
  2650                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2651                           
  2652                           
  2653                           ;LCD.c: 26:     Lcd_Cmd(0);
  2654  049D  3000               	movlw	0
  2655  049E  120A  118A  246C  120A  118A  	fcall	_Lcd_Cmd
  2656                           
  2657                           ;LCD.c: 27:     Lcd_Cmd(1);
  2658  04A3  3001               	movlw	1
  2659  04A4  120A  118A  246C  120A  118A  	fcall	_Lcd_Cmd
  2660  04A9                     l292:
  2661  04A9  0008               	return
  2662  04AA                     __end_of_Lcd_Clear:
  2663                           
  2664                           	psect	text13
  2665  046C                     __ptext13:	
  2666 ;; *************** function _Lcd_Cmd *****************
  2667 ;; Defined at:
  2668 ;;		line 17 in file "LCD.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  a               1    wreg     unsigned char 
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;  a               1    5[COMMON] unsigned char 
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  1    wreg      void 
  2675 ;; Registers used:
  2676 ;;		wreg, status,2, status,0, pclath, cstack
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2682 ;;      Params:         0       0       0       0       0
  2683 ;;      Locals:         1       0       0       0       0
  2684 ;;      Temps:          2       0       0       0       0
  2685 ;;      Totals:         3       0       0       0       0
  2686 ;;Total ram usage:        3 bytes
  2687 ;; Hardware stack levels used: 1
  2688 ;; Hardware stack levels required when called: 2
  2689 ;; This function calls:
  2690 ;;		_Lcd_Port
  2691 ;; This function is called by:
  2692 ;;		_Lcd_Clear
  2693 ;;		_Lcd_Set_Cursor
  2694 ;;		_Lcd_Init
  2695 ;;		_Lcd_Shift_Right
  2696 ;;		_Lcd_Shift_Left
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700                           
  2701                           ;psect for function _Lcd_Cmd
  2702  046C                     _Lcd_Cmd:
  2703                           
  2704                           ;incstack = 0
  2705                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2706                           ;Lcd_Cmd@a stored from wreg
  2707  046C  00F5               	movwf	Lcd_Cmd@a
  2708  046D                     l1826:
  2709                           
  2710                           ;LCD.c: 18:     PORTEbits.RE0 = 0;
  2711  046D  1283               	bcf	3,5	;RP0=0, select bank0
  2712  046E  1303               	bcf	3,6	;RP1=0, select bank0
  2713  046F  1009               	bcf	9,0	;volatile
  2714  0470                     l1828:
  2715                           
  2716                           ;LCD.c: 19:     Lcd_Port(a);
  2717  0470  0875               	movf	Lcd_Cmd@a,w
  2718  0471  120A  118A  24DA  120A  118A  	fcall	_Lcd_Port
  2719  0476                     l1830:
  2720                           
  2721                           ;LCD.c: 20:     RE1 = 1;
  2722  0476  1283               	bcf	3,5	;RP0=0, select bank0
  2723  0477  1303               	bcf	3,6	;RP1=0, select bank0
  2724  0478  1489               	bsf	9,1	;volatile
  2725  0479                     l1832:
  2726                           
  2727                           ;LCD.c: 21:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2728  0479  300B               	movlw	11
  2729  047A  00F4               	movwf	??_Lcd_Cmd+1
  2730  047B  3062               	movlw	98
  2731  047C  00F3               	movwf	??_Lcd_Cmd
  2732  047D                     u1067:
  2733  047D  0BF3               	decfsz	??_Lcd_Cmd,f
  2734  047E  2C7D               	goto	u1067
  2735  047F  0BF4               	decfsz	??_Lcd_Cmd+1,f
  2736  0480  2C7D               	goto	u1067
  2737  0481  0000               	nop
  2738  0482                     l1834:
  2739                           
  2740                           ;LCD.c: 22:     RE1 = 0;
  2741  0482  1283               	bcf	3,5	;RP0=0, select bank0
  2742  0483  1303               	bcf	3,6	;RP1=0, select bank0
  2743  0484  1089               	bcf	9,1	;volatile
  2744  0485                     l289:
  2745  0485  0008               	return
  2746  0486                     __end_of_Lcd_Cmd:
  2747                           
  2748                           	psect	text14
  2749  04DA                     __ptext14:	
  2750 ;; *************** function _Lcd_Port *****************
  2751 ;; Defined at:
  2752 ;;		line 12 in file "LCD.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  a               1    wreg     unsigned char 
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;  a               1    2[COMMON] unsigned char 
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		wreg
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2766 ;;      Params:         0       0       0       0       0
  2767 ;;      Locals:         1       0       0       0       0
  2768 ;;      Temps:          0       0       0       0       0
  2769 ;;      Totals:         1       0       0       0       0
  2770 ;;Total ram usage:        1 bytes
  2771 ;; Hardware stack levels used: 1
  2772 ;; Hardware stack levels required when called: 1
  2773 ;; This function calls:
  2774 ;;		Nothing
  2775 ;; This function is called by:
  2776 ;;		_Lcd_Cmd
  2777 ;;		_Lcd_Init
  2778 ;;		_Lcd_Write_Char
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           
  2783                           ;psect for function _Lcd_Port
  2784  04DA                     _Lcd_Port:
  2785                           
  2786                           ;incstack = 0
  2787                           ; Regs used in _Lcd_Port: [wreg]
  2788                           ;Lcd_Port@a stored from wreg
  2789  04DA  00F2               	movwf	Lcd_Port@a
  2790  04DB                     l1776:
  2791                           
  2792                           ;LCD.c: 13:     PORTD = a;
  2793  04DB  0872               	movf	Lcd_Port@a,w
  2794  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  2795  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  2796  04DE  0088               	movwf	8	;volatile
  2797  04DF                     l286:
  2798  04DF  0008               	return
  2799  04E0                     __end_of_Lcd_Port:
  2800                           
  2801                           	psect	text15
  2802  04B7                     __ptext15:	
  2803 ;; *************** function _I2C_Master_Write *****************
  2804 ;; Defined at:
  2805 ;;		line 65 in file "I2C.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;  d               2    2[COMMON] unsigned int 
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;		None
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  1    wreg      void 
  2812 ;; Registers used:
  2813 ;;		wreg, status,2, status,0, pclath, cstack
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2819 ;;      Params:         2       0       0       0       0
  2820 ;;      Locals:         0       0       0       0       0
  2821 ;;      Temps:          0       0       0       0       0
  2822 ;;      Totals:         2       0       0       0       0
  2823 ;;Total ram usage:        2 bytes
  2824 ;; Hardware stack levels used: 1
  2825 ;; Hardware stack levels required when called: 2
  2826 ;; This function calls:
  2827 ;;		_I2C_Master_Wait
  2828 ;; This function is called by:
  2829 ;;		_main
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           
  2834                           ;psect for function _I2C_Master_Write
  2835  04B7                     _I2C_Master_Write:
  2836  04B7                     l1576:	
  2837                           ;incstack = 0
  2838                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2839                           
  2840                           
  2841                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2842  04B7  120A  118A  24AA  120A  118A  	fcall	_I2C_Master_Wait
  2843  04BC                     l1578:
  2844                           
  2845                           ;I2C.c: 68:     SSPBUF = d;
  2846  04BC  0872               	movf	I2C_Master_Write@d,w
  2847  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  2848  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  2849  04BF  0093               	movwf	19	;volatile
  2850  04C0                     l47:
  2851  04C0  0008               	return
  2852  04C1                     __end_of_I2C_Master_Write:
  2853                           
  2854                           	psect	text16
  2855  04C1                     __ptext16:	
  2856 ;; *************** function _I2C_Master_Stop *****************
  2857 ;; Defined at:
  2858 ;;		line 55 in file "I2C.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;		None
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;		None
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1    wreg      void 
  2865 ;; Registers used:
  2866 ;;		wreg, status,2, status,0, pclath, cstack
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2872 ;;      Params:         0       0       0       0       0
  2873 ;;      Locals:         0       0       0       0       0
  2874 ;;      Temps:          0       0       0       0       0
  2875 ;;      Totals:         0       0       0       0       0
  2876 ;;Total ram usage:        0 bytes
  2877 ;; Hardware stack levels used: 1
  2878 ;; Hardware stack levels required when called: 2
  2879 ;; This function calls:
  2880 ;;		_I2C_Master_Wait
  2881 ;; This function is called by:
  2882 ;;		_main
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           
  2887                           ;psect for function _I2C_Master_Stop
  2888  04C1                     _I2C_Master_Stop:
  2889  04C1                     l1572:	
  2890                           ;incstack = 0
  2891                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2892                           
  2893                           
  2894                           ;I2C.c: 57:     I2C_Master_Wait();
  2895  04C1  120A  118A  24AA  120A  118A  	fcall	_I2C_Master_Wait
  2896  04C6                     l1574:
  2897                           
  2898                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2899  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  2900  04C7  1303               	bcf	3,6	;RP1=0, select bank1
  2901  04C8  1511               	bsf	17,2	;volatile
  2902  04C9                     l44:
  2903  04C9  0008               	return
  2904  04CA                     __end_of_I2C_Master_Stop:
  2905                           
  2906                           	psect	text17
  2907  04CA                     __ptext17:	
  2908 ;; *************** function _I2C_Master_Start *****************
  2909 ;; Defined at:
  2910 ;;		line 39 in file "I2C.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;		None
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;		None
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      void 
  2917 ;; Registers used:
  2918 ;;		wreg, status,2, status,0, pclath, cstack
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2924 ;;      Params:         0       0       0       0       0
  2925 ;;      Locals:         0       0       0       0       0
  2926 ;;      Temps:          0       0       0       0       0
  2927 ;;      Totals:         0       0       0       0       0
  2928 ;;Total ram usage:        0 bytes
  2929 ;; Hardware stack levels used: 1
  2930 ;; Hardware stack levels required when called: 2
  2931 ;; This function calls:
  2932 ;;		_I2C_Master_Wait
  2933 ;; This function is called by:
  2934 ;;		_main
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           
  2939                           ;psect for function _I2C_Master_Start
  2940  04CA                     _I2C_Master_Start:
  2941  04CA                     l1568:	
  2942                           ;incstack = 0
  2943                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2944                           
  2945                           
  2946                           ;I2C.c: 41:     I2C_Master_Wait();
  2947  04CA  120A  118A  24AA  120A  118A  	fcall	_I2C_Master_Wait
  2948  04CF                     l1570:
  2949                           
  2950                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2951  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  2952  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  2953  04D1  1411               	bsf	17,0	;volatile
  2954  04D2                     l38:
  2955  04D2  0008               	return
  2956  04D3                     __end_of_I2C_Master_Start:
  2957                           
  2958                           	psect	text18
  2959  03D5                     __ptext18:	
  2960 ;; *************** function _I2C_Master_Read *****************
  2961 ;; Defined at:
  2962 ;;		line 74 in file "I2C.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  a               2    2[COMMON] unsigned short 
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;  temp            2    6[COMMON] unsigned short 
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  2    2[COMMON] unsigned short 
  2969 ;; Registers used:
  2970 ;;		wreg, status,2, status,0, pclath, cstack
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2976 ;;      Params:         2       0       0       0       0
  2977 ;;      Locals:         2       0       0       0       0
  2978 ;;      Temps:          2       0       0       0       0
  2979 ;;      Totals:         6       0       0       0       0
  2980 ;;Total ram usage:        6 bytes
  2981 ;; Hardware stack levels used: 1
  2982 ;; Hardware stack levels required when called: 2
  2983 ;; This function calls:
  2984 ;;		_I2C_Master_Wait
  2985 ;; This function is called by:
  2986 ;;		_main
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           
  2991                           ;psect for function _I2C_Master_Read
  2992  03D5                     _I2C_Master_Read:
  2993  03D5                     l1580:	
  2994                           ;incstack = 0
  2995                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2996                           
  2997                           
  2998                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2999  03D5  120A  118A  24AA  120A  118A  	fcall	_I2C_Master_Wait
  3000  03DA                     l1582:
  3001                           
  3002                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3003  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  3004  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  3005  03DC  1591               	bsf	17,3	;volatile
  3006                           
  3007                           ;I2C.c: 79:     I2C_Master_Wait();
  3008  03DD  120A  118A  24AA  120A  118A  	fcall	_I2C_Master_Wait
  3009  03E2                     l1584:
  3010                           
  3011                           ;I2C.c: 80:     temp = SSPBUF;
  3012  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  3013  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  3014  03E4  0813               	movf	19,w	;volatile
  3015  03E5  00F4               	movwf	??_I2C_Master_Read
  3016  03E6  01F5               	clrf	??_I2C_Master_Read+1
  3017  03E7  0874               	movf	??_I2C_Master_Read,w
  3018  03E8  00F6               	movwf	I2C_Master_Read@temp
  3019  03E9  0875               	movf	??_I2C_Master_Read+1,w
  3020  03EA  00F7               	movwf	I2C_Master_Read@temp+1
  3021  03EB                     l1586:
  3022                           
  3023                           ;I2C.c: 81:     I2C_Master_Wait();
  3024  03EB  120A  118A  24AA  120A  118A  	fcall	_I2C_Master_Wait
  3025  03F0                     l1588:
  3026                           
  3027                           ;I2C.c: 82:     if(a == 1){
  3028  03F0  0372               	decf	I2C_Master_Read@a,w
  3029  03F1  0473               	iorwf	I2C_Master_Read@a+1,w
  3030  03F2  1D03               	btfss	3,2
  3031  03F3  2BF5               	goto	u651
  3032  03F4  2BF6               	goto	u650
  3033  03F5                     u651:
  3034  03F5  2BFA               	goto	l50
  3035  03F6                     u650:
  3036  03F6                     l1590:
  3037                           
  3038                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3039  03F6  1683               	bsf	3,5	;RP0=1, select bank1
  3040  03F7  1303               	bcf	3,6	;RP1=0, select bank1
  3041  03F8  1291               	bcf	17,5	;volatile
  3042                           
  3043                           ;I2C.c: 84:     }else{
  3044  03F9  2BFD               	goto	l51
  3045  03FA                     l50:
  3046                           
  3047                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3048  03FA  1683               	bsf	3,5	;RP0=1, select bank1
  3049  03FB  1303               	bcf	3,6	;RP1=0, select bank1
  3050  03FC  1691               	bsf	17,5	;volatile
  3051  03FD                     l51:	
  3052                           ;I2C.c: 86:     }
  3053                           
  3054                           
  3055                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3056  03FD  1611               	bsf	17,4	;volatile
  3057  03FE                     l1592:
  3058                           
  3059                           ;I2C.c: 88:     return temp;
  3060  03FE  0877               	movf	I2C_Master_Read@temp+1,w
  3061  03FF  00F3               	movwf	?_I2C_Master_Read+1
  3062  0400  0876               	movf	I2C_Master_Read@temp,w
  3063  0401  00F2               	movwf	?_I2C_Master_Read
  3064  0402                     l52:
  3065  0402  0008               	return
  3066  0403                     __end_of_I2C_Master_Read:
  3067                           
  3068                           	psect	text19
  3069  04AA                     __ptext19:	
  3070 ;; *************** function _I2C_Master_Wait *****************
  3071 ;; Defined at:
  3072 ;;		line 32 in file "I2C.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;		None
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;		None
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      void 
  3079 ;; Registers used:
  3080 ;;		wreg, status,2
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3086 ;;      Params:         0       0       0       0       0
  3087 ;;      Locals:         0       0       0       0       0
  3088 ;;      Temps:          0       0       0       0       0
  3089 ;;      Totals:         0       0       0       0       0
  3090 ;;Total ram usage:        0 bytes
  3091 ;; Hardware stack levels used: 1
  3092 ;; Hardware stack levels required when called: 1
  3093 ;; This function calls:
  3094 ;;		Nothing
  3095 ;; This function is called by:
  3096 ;;		_I2C_Master_Start
  3097 ;;		_I2C_Master_Stop
  3098 ;;		_I2C_Master_Write
  3099 ;;		_I2C_Master_Read
  3100 ;;		_I2C_Master_RepeatedStart
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           
  3105                           ;psect for function _I2C_Master_Wait
  3106  04AA                     _I2C_Master_Wait:
  3107  04AA                     l1474:	
  3108                           ;incstack = 0
  3109                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3110                           
  3111  04AA                     l32:	
  3112                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3113                           
  3114  04AA  1683               	bsf	3,5	;RP0=1, select bank1
  3115  04AB  1303               	bcf	3,6	;RP1=0, select bank1
  3116  04AC  1914               	btfsc	20,2	;volatile
  3117  04AD  2CAF               	goto	u511
  3118  04AE  2CB0               	goto	u510
  3119  04AF                     u511:
  3120  04AF  2CAA               	goto	l32
  3121  04B0                     u510:
  3122  04B0                     l1476:
  3123  04B0  0811               	movf	17,w	;volatile
  3124  04B1  391F               	andlw	31
  3125  04B2  1D03               	btfss	3,2
  3126  04B3  2CB5               	goto	u521
  3127  04B4  2CB6               	goto	u520
  3128  04B5                     u521:
  3129  04B5  2CAA               	goto	l32
  3130  04B6                     u520:
  3131  04B6                     l35:
  3132  04B6  0008               	return
  3133  04B7                     __end_of_I2C_Master_Wait:
  3134                           
  3135                           	psect	text20
  3136  04D3                     __ptext20:	
  3137 ;; *************** function _isr *****************
  3138 ;; Defined at:
  3139 ;;		line 71 in file "MainL4Master.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;		None
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;		None
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  1    wreg      void 
  3146 ;; Registers used:
  3147 ;;		None
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3153 ;;      Params:         0       0       0       0       0
  3154 ;;      Locals:         0       0       0       0       0
  3155 ;;      Temps:          2       0       0       0       0
  3156 ;;      Totals:         2       0       0       0       0
  3157 ;;Total ram usage:        2 bytes
  3158 ;; Hardware stack levels used: 1
  3159 ;; This function calls:
  3160 ;;		Nothing
  3161 ;; This function is called by:
  3162 ;;		Interrupt level 1
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           
  3167                           ;psect for function _isr
  3168  04D3                     _isr:
  3169  04D3                     i1l261:
  3170  04D3  0871               	movf	??_isr+1,w
  3171  04D4  008A               	movwf	10
  3172  04D5  0E70               	swapf	??_isr,w
  3173  04D6  0083               	movwf	3
  3174  04D7  0EFE               	swapf	btemp,f
  3175  04D8  0E7E               	swapf	btemp,w
  3176  04D9  0009               	retfie
  3177  04DA                     __end_of_isr:
  3178  007E                     btemp	set	126	;btemp
  3179  007E                     wtemp0	set	126
  3180                           
  3181                           	psect	intentry
  3182  0004                     __pintentry:	
  3183                           ;incstack = 0
  3184                           ; Regs used in _isr: []
  3185                           
  3186  0004                     interrupt_function:
  3187  007E                     saved_w	set	btemp
  3188  0004  00FE               	movwf	btemp
  3189  0005  0E03               	swapf	3,w
  3190  0006  00F0               	movwf	??_isr
  3191  0007  080A               	movf	10,w
  3192  0008  00F1               	movwf	??_isr+1
  3193  0009  120A  118A  2CD3   	ljmp	_isr
  3194                           
  3195                           	psect	config
  3196                           
  3197                           ;Config register CONFIG1 @ 0x2007
  3198                           ;	Oscillator Selection bits
  3199                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3200                           ;	Watchdog Timer Enable bit
  3201                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3202                           ;	Power-up Timer Enable bit
  3203                           ;	PWRTE = OFF, PWRT disabled
  3204                           ;	RE3/MCLR pin function select bit
  3205                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3206                           ;	Code Protection bit
  3207                           ;	CP = OFF, Program memory code protection is disabled
  3208                           ;	Data Code Protection bit
  3209                           ;	CPD = OFF, Data memory code protection is disabled
  3210                           ;	Brown Out Reset Selection bits
  3211                           ;	BOREN = OFF, BOR disabled
  3212                           ;	Internal External Switchover bit
  3213                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3214                           ;	Fail-Safe Clock Monitor Enabled bit
  3215                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3216                           ;	Low Voltage Programming Enable bit
  3217                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3218                           ;	In-Circuit Debugger Mode bit
  3219                           ;	DEBUG = 0x1, unprogrammed default
  3220  2007                     	org	8199
  3221  2007  20D4               	dw	8404
  3222                           
  3223                           ;Config register CONFIG2 @ 0x2008
  3224                           ;	Brown-out Reset Selection bit
  3225                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3226                           ;	Flash Program Memory Self Write Enable bits
  3227                           ;	WRT = OFF, Write protection off
  3228  2008                     	org	8200
  3229  2008  3FFF               	dw	16383

Data Sizes:
    Strings     24
    Constant    0
    Data        1
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     17      27
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[3]), STR_3(CODE[2]), STR_2(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_voltASCII
    _voltASCII->___bmul
    ___bmul->___awdiv
    _I2C_Master_Init->___lldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _voltASCII->___bmul
    ___bmul->___awdiv
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3642
                                             14 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                              _setup
                          _voltASCII
 ---------------------------------------------------------------------------------
 (1) _voltASCII                                            5     5      0    1422
                                              9 COMMON     1     1      0
                                              6 BANK0      4     4      0
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     406
                                              7 COMMON     2     1      1
                                              4 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     985
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     564
                    _I2C_Master_Init
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     368
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       5     5      0     130
                                              3 COMMON     5     5      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     632
                                              6 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     174
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   _setup
     _I2C_Master_Init
       ___lldiv
     _initOsc
   _voltASCII
     ___awdiv
     ___bmul
       ___awdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     11      1B       5       33.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      27      12        0.0%
ABS                  0      0      27       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Aug 09 14:37:48 2021

                        pc 0002             ___bmul@product 0024                         l32 04AA  
                       l50 03FA                         l35 04B6                         l51 03FD  
                       l52 0402                         l44 04C9                         l29 03A2  
                       l38 04D2                         l47 04C0               ___awdiv@sign 0021  
                       fsr 0004                        l301 036A                        l310 042B  
                      l150 0281                        l151 0287                        l304 044D  
                      l152 028D                        l153 0293                        l145 0269  
                      l154 0299                        l146 02C1                        l155 02C2  
                      l147 026F                        l148 0275                        l149 027B  
                      l272 03D4                        l275 0195                        l292 04A9  
                      l428 049C                        l286 04DF                        l438 0266  
                      l289 0485                        l298 031A                        l555 01FE  
                      _GIE 005F                        _RE1 0049                        u510 04B0  
                      u511 04AF                        u520 04B6                        u521 04B5  
                      u710 0211                        u711 0210                        u800 049B  
                      u801 049A                        u650 03F6                        u730 0225  
                      u810 019D                        u651 03F5                        u731 0224  
                      u811 019C                        u900 01F5                        u820 01A8  
                      u725 0216                        u901 01F4                        u821 01A7  
                      u910 02CB                        u750 0240                        u830 01B9  
                      u911 02CA                        u751 023F                        u831 01B8  
                      u745 0227                        u930 02F6                        u770 025E  
                      u850 01CB                        u931 02F5                        u771 025D  
                      u755 023C                        u851 01CA                        u780 0382  
                      u925 02D3                        u765 0250                        u845 01BD  
                      u950 042B                        u870 01DC                        u790 048E  
                      u951 042A                        u871 01DB                        u791 048D  
                      u945 02FE                        u785 037D                        u865 01CC  
                      u890 01F0                        u891 01EF                        u875 01D8  
                      u885 01E4                        u967 004F                        u977 007F  
                      u987 00AF                        u997 00F0                        _isr 04D3  
                      fsr0 0004                       l2000 003B                       l2010 0072  
                     l2002 0047                       l2020 00A2                       l2012 0077  
                     l2004 0056                       l2030 00CE                       l2022 00A7  
                     l2014 0086                       l2006 005B                       l2040 00F7  
                     l2032 00D4                       l2024 00B6                       l2016 008B  
                     l2008 0064                       l2042 00FB                       l2034 00DA  
                     l2026 00BE                       l2018 0094                       l2044 00FD  
                     l2036 00E2                       l2028 00C6                       l2070 02A7  
                     l2038 00E8                       l1474 04AA                       l1570 04CF  
                     l1810 03A0                       l1802 036B                       l1482 029F  
                     l1476 04B0                       l1580 03D5                       l1572 04C1  
                     l1820 043E                       l1812 03A1                       l1804 036F  
                     l1900 03B5                       l1590 03F6                       l1582 03DA  
                     l1574 04C6                       l1830 0476                       l1822 0441  
                     l1814 042D                       l1806 0372                       l1478 0268  
                     l1910 03CA                       l1902 03C4                       l1592 03FE  
                     l1584 03E2                       l1568 04CA                       l1576 04B7  
                     l1832 0479                       l1824 044A                       l1816 0435  
                     l1808 039F                       l1920 03D3                       l1912 03CB  
                     l1904 03C7                       l1840 048E                       l1586 03EB  
                     l1578 04BC                       l1834 0482                       l1826 046D  
                     l1930 0342                       l1922 031B                       l1818 0438  
                     l1914 03CE                       l1906 03C8                       l1850 0196  
                     l1842 0492                       l1588 03F0                       l1828 0470  
                     l1940 0364                       l1932 034C                       l1924 0324  
                     l1780 0211                       l1916 03CF                       l1908 03C9  
                     l1860 01A8                       l1852 0199                       l1844 0494  
                     l1836 0489                       l1942 049D                       l1934 0352  
                     l1926 032A                       l1950 02E1                       l1790 0240  
                     l1782 0214                       l1918 03D2                       l1870 01BC  
                     l1862 01AD                       l1854 019D                       l1846 049B  
                     l1838 048A                       l1776 04DB                       l1936 0358  
                     l1928 0339                       l1960 030C                       l1952 02E7  
                     l1944 02C6                       l1792 024E                       l1784 0221  
                     l1880 01E2                       l1872 01C3                       l1864 01B1  
                     l1856 01A2                       l1938 035E                       l1962 0312  
                     l1946 02CB                       l1954 02F0                       l1970 041E  
                     l1794 024F                       l1786 0225                       l1778 01FF  
                     l1890 01FA                       l1882 01E3                       l1874 01C7  
                     l1866 01B3                       l1858 01A4                       l1956 02F6  
                     l1948 02DC                       l1964 0406                       l1796 0258  
                     l1788 022E                       l1884 01EA                       l1876 01CB  
                     l1868 01B9                       l1980 015C                       l1972 0111  
                     l1958 0307                       l1966 0409                       l1798 025E  
                     l1894 03A3                       l1878 01DC                       l1886 01F0  
                     l1990 0190                       l1982 0172                       l1974 0117  
                     l1968 0416                       l1896 03AD                       l1888 01F5  
                     l1984 0182                       l1976 0136                       l1992 0024  
                     l1898 03AF                       l1986 0186                       l1978 014C  
                     l1994 0029                       l1988 018B                       l1996 002E  
                     l1998 0033                       ?_isr 0070                       STR_1 046A  
                     STR_2 0454                       STR_3 0468                       STR_4 0465  
                     u1007 0105                       u1017 0445                       u1027 031F  
                     u1037 032E                       u1047 033D                       u1057 034A  
                     u1067 047D                       _IOCB 0096                       _PIE1 008C  
                     _PIE2 008D                       _PEIE 005E                       _PIR1 000C  
                     _PIR2 000D                       _WPUB 0095          ?_Lcd_Write_String 0070  
                     _cont 0034                       _main 0024                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0078            __end_of_Lcd_Cmd 0486  
        ___bmul@multiplier 0025                      ??_isr 0070           ?_I2C_Master_Init 0026  
         ?_I2C_Master_Read 0072           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070            __end_of___awdiv 01FF                      _ANSEL 0188  
          __end_of___lldiv 0267            ___awdiv@divisor 0072                      i1l261 04D3  
          ___awdiv@counter 0020                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009    __size_of_Lcd_Set_Cursor 0058                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _SSPIE 0463                      _TRISE 0089                      _SSPIF 0063  
                    _RXREC 0036            __end_of_initOsc 02C3                      _enter 003A  
                    _valor 007B                      _setup 03A3                      _start 0037  
                    pclath 000A                      status 0003                      wtemp0 007E  
        voltASCII@variable 0079           __end_of_Lcd_Init 036B           __end_of_Lcd_Port 04E0  
          __initialization 000F               __end_of_main 0110                     ??_main 002E  
       __size_of_Lcd_Clear 000D          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0072  
       ??_I2C_Master_Start 0072         ??_I2C_Master_Write 0074           ___awdiv@dividend 0074  
                   ?_setup 0070                     _ANSELH 0189                     _INTCON 000B  
              initOsc@frec 0074                  ??_Lcd_Cmd 0073                     _SPBRGH 009A  
  __size_of_Lcd_Write_Char 0022                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
                   ___bmul 0486                  ??___awdiv 0076                  ??___lldiv 0020  
         ___awdiv@quotient 0022                  ??_initOsc 0072                     saved_w 007E  
          Lcd_Set_Cursor@a 0020            Lcd_Set_Cursor@b 0076            Lcd_Set_Cursor@y 0022  
          Lcd_Set_Cursor@z 0021    __end_of__initialization 0020          __end_of_Lcd_Clear 04AA  
      ___bmul@multiplicand 0077             __pcstackCOMMON 0070               __pidataBANK0 04E0  
            __end_of_setup 03D5             _Lcd_Set_Cursor 02C3                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_setup 007A                 __pbssBANK0 0031  
               __pmaintext 0024                    ?___bmul 0077                 __pintentry 0004  
__size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 031B                 ??_Lcd_Init 0076  
               ??_Lcd_Port 0072         __size_of_voltASCII 0086                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 044E             _Lcd_Write_Char 042C  
                  _Lcd_Cmd 046C            __size_of___bmul 0017                    ___awdiv 0196  
                  ___lldiv 01FF                    _decenas 007A            ?_Lcd_Set_Cursor 0076  
                  __ptext1 0110                    __ptext2 0486                    __ptext3 0196  
                  __ptext4 03A3                    __ptext5 0267                    __ptext6 036B  
                  __ptext7 01FF                    __ptext8 0403                    __ptext9 042C  
                  _flagint 0039                    _initOsc 0267               __size_of_isr 0007  
                  _varUART 0033                    _varPot0 0035   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
   __end_of_Lcd_Write_Char 044E       end_of_initialization 0020  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0072            ___lldiv@counter 0025  
                _RCSTAbits 0018           I2C_Master_Init@c 0026           I2C_Master_Read@a 0072  
        __end_of_voltASCII 0196                  Lcd_Port@a 0072                  _PORTEbits 0009  
                _TRISCbits 0087            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0022  
        Lcd_Write_String@i 0020                 _startfinal 0038                  _TXSTAbits 0098  
                _Lcd_Clear 049D             __end_of___bmul 049D           _Lcd_Write_String 0403  
              _BAUDCTLbits 0187        start_initialization 000F                __end_of_isr 04DA  
        __size_of_Lcd_Init 0050          __size_of_Lcd_Port 0006          ??_I2C_Master_Init 002A  
        ??_I2C_Master_Read 0074          ??_I2C_Master_Wait 0072          ??_I2C_Master_Stop 0072  
               ?_Lcd_Clear 0070                   ??___bmul 0078                __pdataBANK0 003A  
          Lcd_Write_Char@a 0075            Lcd_Write_Char@y 0077                __pbssCOMMON 007A  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
         _I2C_Master_Start 04CA           _I2C_Master_Write 04B7           ??_Lcd_Set_Cursor 0077  
                 ?___awdiv 0072                   ?___lldiv 0072                  __pstrings 044E  
                 ?_initOsc 0070             __size_of_setup 0032          interrupt_function 0004  
                 _PIE1bits 008C                   Lcd_Cmd@a 0075                ??_Lcd_Clear 0076  
                _voltASCII 0110                 _ADCON0bits 001F                __stringbase 0453  
               _ADCON1bits 009F           ??_Lcd_Write_Char 0073                   _Lcd_Init 031B  
                 _Lcd_Port 04DA        I2C_Master_Read@temp 0076   __end_of_Lcd_Write_String 042C  
         __size_of_Lcd_Cmd 001A           __size_of___awdiv 0069           __size_of___lldiv 0068  
               ?_voltASCII 0070         __end_of__stringtab 0454            _I2C_Master_Init 036B  
          _I2C_Master_Read 03D5            _I2C_Master_Wait 04AA            _I2C_Master_Stop 04C1  
         __size_of_initOsc 005C                   _centenas 0031                   __ptext10 02C3  
                 __ptext11 031B                   __ptext20 04D3                   __ptext12 049D  
                 __ptext13 046C                   __ptext14 04DA                   __ptext15 04B7  
                 __ptext16 04C1                   __ptext17 04CA                   __ptext18 03D5  
                 __ptext19 04AA              __size_of_main 00EC                   _unidades 0032  
 __end_of_I2C_Master_Start 04D3   __end_of_I2C_Master_Write 04C1                 _INTCONbits 000B  
       Lcd_Write_Char@temp 0076                   intlevel1 0000           ___lldiv@dividend 0076  
                stringcode 044E                 _OSCCONbits 008F    __end_of_I2C_Master_Init 03A3  
  __end_of_I2C_Master_Read 0403    __end_of_I2C_Master_Wait 04B7    __end_of_I2C_Master_Stop 04CA  
       Lcd_Set_Cursor@temp 0023                ??_voltASCII 0026                 _OPTION_REG 0081  
         ___lldiv@quotient 0021          I2C_Master_Write@d 0072                   stringdir 044E  
                 stringtab 044E                _SSPCON2bits 0091  
