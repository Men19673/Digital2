

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Aug 09 15:58:49 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  0105                     	;# 
   133  0107                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0185                     	;# 
   142  0187                     	;# 
   143  0188                     	;# 
   144  0189                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  0088                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0008                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  000E                     	;# 
   240  000E                     	;# 
   241  000F                     	;# 
   242  0010                     	;# 
   243  0011                     	;# 
   244  0012                     	;# 
   245  0013                     	;# 
   246  0014                     	;# 
   247  0015                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0017                     	;# 
   251  0018                     	;# 
   252  0019                     	;# 
   253  001A                     	;# 
   254  001B                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001D                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  0087                     	;# 
   264  0088                     	;# 
   265  0089                     	;# 
   266  008C                     	;# 
   267  008D                     	;# 
   268  008E                     	;# 
   269  008F                     	;# 
   270  0090                     	;# 
   271  0091                     	;# 
   272  0092                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0094                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  009F                     	;# 
   288  0105                     	;# 
   289  0107                     	;# 
   290  0108                     	;# 
   291  0109                     	;# 
   292  010C                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  0185                     	;# 
   298  0187                     	;# 
   299  0188                     	;# 
   300  0189                     	;# 
   301  018C                     	;# 
   302  018D                     	;# 
   303  0000                     	;# 
   304  0001                     	;# 
   305  0002                     	;# 
   306  0003                     	;# 
   307  0004                     	;# 
   308  0005                     	;# 
   309  0006                     	;# 
   310  0007                     	;# 
   311  0008                     	;# 
   312  0009                     	;# 
   313  000A                     	;# 
   314  000B                     	;# 
   315  000C                     	;# 
   316  000D                     	;# 
   317  000E                     	;# 
   318  000E                     	;# 
   319  000F                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0014                     	;# 
   325  0015                     	;# 
   326  0015                     	;# 
   327  0016                     	;# 
   328  0017                     	;# 
   329  0018                     	;# 
   330  0019                     	;# 
   331  001A                     	;# 
   332  001B                     	;# 
   333  001B                     	;# 
   334  001C                     	;# 
   335  001D                     	;# 
   336  001E                     	;# 
   337  001F                     	;# 
   338  0081                     	;# 
   339  0085                     	;# 
   340  0086                     	;# 
   341  0087                     	;# 
   342  0088                     	;# 
   343  0089                     	;# 
   344  008C                     	;# 
   345  008D                     	;# 
   346  008E                     	;# 
   347  008F                     	;# 
   348  0090                     	;# 
   349  0091                     	;# 
   350  0092                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0094                     	;# 
   355  0095                     	;# 
   356  0096                     	;# 
   357  0097                     	;# 
   358  0098                     	;# 
   359  0099                     	;# 
   360  009A                     	;# 
   361  009B                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  009F                     	;# 
   366  0105                     	;# 
   367  0107                     	;# 
   368  0108                     	;# 
   369  0109                     	;# 
   370  010C                     	;# 
   371  010C                     	;# 
   372  010D                     	;# 
   373  010E                     	;# 
   374  010F                     	;# 
   375  0185                     	;# 
   376  0187                     	;# 
   377  0188                     	;# 
   378  0189                     	;# 
   379  018C                     	;# 
   380  018D                     	;# 
   381  000B                     _INTCON	set	11
   382  000D                     _PIR2	set	13
   383  000C                     _PIR1	set	12
   384  0009                     _PORTE	set	9
   385  0008                     _PORTD	set	8
   386  0007                     _PORTC	set	7
   387  0005                     _PORTA	set	5
   388  0006                     _PORTB	set	6
   389  000B                     _INTCONbits	set	11
   390  0018                     _RCSTAbits	set	24
   391  001F                     _ADCON0bits	set	31
   392  0013                     _SSPBUF	set	19
   393  0014                     _SSPCON	set	20
   394  0049                     _RE1	set	73
   395  0048                     _RE0	set	72
   396  0063                     _SSPIF	set	99
   397  005E                     _PEIE	set	94
   398  005F                     _GIE	set	95
   399  008D                     _PIE2	set	141
   400  008C                     _PIE1	set	140
   401  0089                     _TRISE	set	137
   402  0088                     _TRISD	set	136
   403  0087                     _TRISC	set	135
   404  0081                     _OPTION_REG	set	129
   405  0096                     _IOCB	set	150
   406  0095                     _WPUB	set	149
   407  0086                     _TRISB	set	134
   408  009A                     _SPBRGH	set	154
   409  0099                     _SPBRG	set	153
   410  0098                     _TXSTAbits	set	152
   411  008C                     _PIE1bits	set	140
   412  009F                     _ADCON1bits	set	159
   413  0085                     _TRISA	set	133
   414  008F                     _OSCCONbits	set	143
   415  0091                     _SSPCON2bits	set	145
   416  0087                     _TRISCbits	set	135
   417  0094                     _SSPSTAT	set	148
   418  0093                     _SSPADD	set	147
   419  0091                     _SSPCON2	set	145
   420  0463                     _SSPIE	set	1123
   421  043C                     _TRISC4	set	1084
   422  043B                     _TRISC3	set	1083
   423  0187                     _BAUDCTLbits	set	391
   424  0189                     _ANSELH	set	393
   425  0188                     _ANSEL	set	392
   426                           
   427                           	psect	strings
   428  041A                     __pstrings:
   429  041A                     stringtab:
   430  041A                     __stringtab:
   431  041A                     stringcode:	
   432                           ;	String table - string pointers are 1 byte each
   433                           
   434  041A                     stringdir:
   435  041A  3004               	movlw	high stringdir
   436  041B  008A               	movwf	10
   437  041C  0804               	movf	4,w
   438  041D  0A84               	incf	4,f
   439  041E  0782               	addwf	2,f
   440  041F                     __stringbase:
   441  041F  3400               	retlw	0
   442  0420                     __end_of__stringtab:
   443  0420                     STR_2:
   444  0420  3441               	retlw	65	;'A'
   445  0421  3444               	retlw	68	;'D'
   446  0422  3443               	retlw	67	;'C'
   447  0423  343A               	retlw	58	;':'
   448  0424  3420               	retlw	32	;' '
   449  0425  3443               	retlw	67	;'C'
   450  0426  344F               	retlw	79	;'O'
   451  0427  344E               	retlw	78	;'N'
   452  0428  3454               	retlw	84	;'T'
   453  0429  343A               	retlw	58	;':'
   454  042A  3420               	retlw	32	;' '
   455  042B  3454               	retlw	84	;'T'
   456  042C  3445               	retlw	69	;'E'
   457  042D  344D               	retlw	77	;'M'
   458  042E  3450               	retlw	80	;'P'
   459  042F  343A               	retlw	58	;':'
   460  0430  3400               	retlw	0
   461  0431                     STR_4:
   462  0431  3420               	retlw	32	;' '
   463  0432  3420               	retlw	32	;' '
   464  0433  3400               	retlw	0
   465  0434                     STR_3:
   466  0434  342E               	retlw	46	;'.'
   467  0435  3400               	retlw	0
   468  0436                     STR_1:
   469  0436  3461               	retlw	97	;'a'
   470  0437  3400               	retlw	0
   471                           
   472                           	psect	cinit
   473  000F                     start_initialization:	
   474                           ; #config settings
   475                           
   476  000F                     __initialization:
   477                           
   478                           ; Clear objects allocated to COMMON
   479  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   480  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   481                           
   482                           ; Clear objects allocated to BANK0
   483  0011  1283               	bcf	3,5	;RP0=0, select bank0
   484  0012  1303               	bcf	3,6	;RP1=0, select bank0
   485  0013  01B1               	clrf	__pbssBANK0& (0+127)
   486  0014  01B2               	clrf	(__pbssBANK0+1)& (0+127)
   487  0015  01B3               	clrf	(__pbssBANK0+2)& (0+127)
   488  0016  01B4               	clrf	(__pbssBANK0+3)& (0+127)
   489  0017  01B5               	clrf	(__pbssBANK0+4)& (0+127)
   490  0018  01B6               	clrf	(__pbssBANK0+5)& (0+127)
   491  0019  01B7               	clrf	(__pbssBANK0+6)& (0+127)
   492  001A  01B8               	clrf	(__pbssBANK0+7)& (0+127)
   493  001B                     end_of_initialization:	
   494                           ;End of C runtime variable initialization code
   495                           
   496  001B                     __end_of__initialization:
   497  001B  0183               	clrf	3
   498  001C  120A  118A  281F   	ljmp	_main	;jump to C main() function
   499                           
   500                           	psect	bssCOMMON
   501  007A                     __pbssCOMMON:
   502  007A                     _decenas:
   503  007A                     	ds	1
   504  007B                     _valor:
   505  007B                     	ds	1
   506                           
   507                           	psect	bssBANK0
   508  0031                     __pbssBANK0:
   509  0031                     _centenas:
   510  0031                     	ds	1
   511  0032                     _unidades:
   512  0032                     	ds	1
   513  0033                     _cont:
   514  0033                     	ds	1
   515  0034                     _varPot0:
   516  0034                     	ds	1
   517  0035                     _RXREC:
   518  0035                     	ds	1
   519  0036                     _start:
   520  0036                     	ds	1
   521  0037                     _startfinal:
   522  0037                     	ds	1
   523  0038                     _flagint:
   524  0038                     	ds	1
   525                           
   526                           	psect	cstackCOMMON
   527  0070                     __pcstackCOMMON:
   528  0070                     ?_setup:
   529  0070                     ?_Lcd_Init:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ?_Lcd_Clear:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ?_Lcd_Write_Char:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ?_Lcd_Write_String:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?_voltASCII:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_I2C_Master_Wait:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_I2C_Master_Start:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_I2C_Master_Stop:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_initOsc:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_isr:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ??_isr:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_main:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_Lcd_Port:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_Lcd_Cmd:	
   569                           ; 1 bytes @ 0x0
   570                           
   571                           
   572                           ; 1 bytes @ 0x0
   573  0070                     	ds	2
   574  0072                     ??_I2C_Master_Wait:
   575  0072                     ??_I2C_Master_Start:	
   576                           ; 1 bytes @ 0x2
   577                           
   578  0072                     ??_I2C_Master_Stop:	
   579                           ; 1 bytes @ 0x2
   580                           
   581  0072                     ?_I2C_Master_Write:	
   582                           ; 1 bytes @ 0x2
   583                           
   584  0072                     ??_initOsc:	
   585                           ; 1 bytes @ 0x2
   586                           
   587  0072                     ??_Lcd_Port:	
   588                           ; 1 bytes @ 0x2
   589                           
   590  0072                     ?_I2C_Master_Read:	
   591                           ; 1 bytes @ 0x2
   592                           
   593  0072                     ?___awdiv:	
   594                           ; 2 bytes @ 0x2
   595                           
   596  0072                     ?___lldiv:	
   597                           ; 2 bytes @ 0x2
   598                           
   599  0072                     Lcd_Port@a:	
   600                           ; 4 bytes @ 0x2
   601                           
   602  0072                     I2C_Master_Write@d:	
   603                           ; 1 bytes @ 0x2
   604                           
   605  0072                     I2C_Master_Read@a:	
   606                           ; 2 bytes @ 0x2
   607                           
   608  0072                     ___awdiv@divisor:	
   609                           ; 2 bytes @ 0x2
   610                           
   611  0072                     ___lldiv@divisor:	
   612                           ; 2 bytes @ 0x2
   613                           
   614                           
   615                           ; 4 bytes @ 0x2
   616  0072                     	ds	1
   617  0073                     ??_Lcd_Write_Char:
   618  0073                     ??_Lcd_Cmd:	
   619                           ; 1 bytes @ 0x3
   620                           
   621                           
   622                           ; 1 bytes @ 0x3
   623  0073                     	ds	1
   624  0074                     ??_I2C_Master_Write:
   625  0074                     ??_I2C_Master_Read:	
   626                           ; 1 bytes @ 0x4
   627                           
   628  0074                     initOsc@frec:	
   629                           ; 1 bytes @ 0x4
   630                           
   631  0074                     Lcd_Write_Char@a:	
   632                           ; 1 bytes @ 0x4
   633                           
   634  0074                     ___awdiv@dividend:	
   635                           ; 1 bytes @ 0x4
   636                           
   637                           
   638                           ; 2 bytes @ 0x4
   639  0074                     	ds	1
   640  0075                     Lcd_Cmd@a:
   641  0075                     Lcd_Write_Char@temp:	
   642                           ; 1 bytes @ 0x5
   643                           
   644                           
   645                           ; 1 bytes @ 0x5
   646  0075                     	ds	1
   647  0076                     ??_Lcd_Init:
   648  0076                     ??_Lcd_Clear:	
   649                           ; 1 bytes @ 0x6
   650                           
   651  0076                     ?_Lcd_Set_Cursor:	
   652                           ; 1 bytes @ 0x6
   653                           
   654  0076                     ??___awdiv:	
   655                           ; 1 bytes @ 0x6
   656                           
   657  0076                     Lcd_Set_Cursor@b:	
   658                           ; 1 bytes @ 0x6
   659                           
   660  0076                     Lcd_Write_Char@y:	
   661                           ; 1 bytes @ 0x6
   662                           
   663  0076                     I2C_Master_Read@temp:	
   664                           ; 1 bytes @ 0x6
   665                           
   666  0076                     ___lldiv@dividend:	
   667                           ; 2 bytes @ 0x6
   668                           
   669                           
   670                           ; 4 bytes @ 0x6
   671  0076                     	ds	1
   672  0077                     ??_Lcd_Set_Cursor:
   673  0077                     ??_Lcd_Write_String:	
   674                           ; 1 bytes @ 0x7
   675                           
   676  0077                     ?___bmul:	
   677                           ; 1 bytes @ 0x7
   678                           
   679  0077                     ___bmul@multiplicand:	
   680                           ; 1 bytes @ 0x7
   681                           
   682  0077                     Lcd_Write_String@i:	
   683                           ; 1 bytes @ 0x7
   684                           
   685                           
   686                           ; 2 bytes @ 0x7
   687  0077                     	ds	1
   688  0078                     ??___bmul:
   689                           
   690                           ; 1 bytes @ 0x8
   691  0078                     	ds	1
   692  0079                     voltASCII@variable:
   693  0079                     Lcd_Write_String@a:	
   694                           ; 1 bytes @ 0x9
   695                           
   696                           
   697                           ; 1 bytes @ 0x9
   698  0079                     	ds	1
   699  007A                     ??_setup:
   700                           
   701                           	psect	cstackBANK0
   702  0020                     __pcstackBANK0:	
   703                           ; 1 bytes @ 0xA
   704                           
   705  0020                     ??___lldiv:
   706  0020                     Lcd_Set_Cursor@a:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0020                     ___awdiv@counter:	
   710                           ; 1 bytes @ 0x0
   711                           
   712                           
   713                           ; 1 bytes @ 0x0
   714  0020                     	ds	1
   715  0021                     Lcd_Set_Cursor@z:
   716  0021                     ___awdiv@sign:	
   717                           ; 1 bytes @ 0x1
   718                           
   719  0021                     ___lldiv@quotient:	
   720                           ; 1 bytes @ 0x1
   721                           
   722                           
   723                           ; 4 bytes @ 0x1
   724  0021                     	ds	1
   725  0022                     Lcd_Set_Cursor@y:
   726  0022                     ___awdiv@quotient:	
   727                           ; 1 bytes @ 0x2
   728                           
   729                           
   730                           ; 2 bytes @ 0x2
   731  0022                     	ds	1
   732  0023                     Lcd_Set_Cursor@temp:
   733                           
   734                           ; 1 bytes @ 0x3
   735  0023                     	ds	1
   736  0024                     ___bmul@product:
   737                           
   738                           ; 1 bytes @ 0x4
   739  0024                     	ds	1
   740  0025                     ___bmul@multiplier:
   741  0025                     ___lldiv@counter:	
   742                           ; 1 bytes @ 0x5
   743                           
   744                           
   745                           ; 1 bytes @ 0x5
   746  0025                     	ds	1
   747  0026                     ??_voltASCII:
   748  0026                     ?_I2C_Master_Init:	
   749                           ; 1 bytes @ 0x6
   750                           
   751  0026                     I2C_Master_Init@c:	
   752                           ; 1 bytes @ 0x6
   753                           
   754                           
   755                           ; 4 bytes @ 0x6
   756  0026                     	ds	4
   757  002A                     ??_I2C_Master_Init:
   758                           
   759                           ; 1 bytes @ 0xA
   760  002A                     	ds	4
   761  002E                     ??_main:
   762                           
   763                           ; 1 bytes @ 0xE
   764  002E                     	ds	3
   765                           
   766                           	psect	maintext
   767  001F                     __pmaintext:	
   768 ;;
   769 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   770 ;;
   771 ;; *************** function _main *****************
   772 ;; Defined at:
   773 ;;		line 78 in file "MainL4Master.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;		None
   776 ;; Auto vars:     Size  Location     Type
   777 ;;		None
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   782 ;; Tracked objects:
   783 ;;		On entry : B00/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   787 ;;      Params:         0       0       0       0       0
   788 ;;      Locals:         0       0       0       0       0
   789 ;;      Temps:          0       3       0       0       0
   790 ;;      Totals:         0       3       0       0       0
   791 ;;Total ram usage:        3 bytes
   792 ;; Hardware stack levels required when called: 4
   793 ;; This function calls:
   794 ;;		_I2C_Master_Read
   795 ;;		_I2C_Master_Start
   796 ;;		_I2C_Master_Stop
   797 ;;		_I2C_Master_Write
   798 ;;		_Lcd_Clear
   799 ;;		_Lcd_Init
   800 ;;		_Lcd_Set_Cursor
   801 ;;		_Lcd_Write_Char
   802 ;;		_Lcd_Write_String
   803 ;;		_setup
   804 ;;		_voltASCII
   805 ;; This function is called by:
   806 ;;		Startup code after reset
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           
   811                           ;psect for function _main
   812  001F                     _main:
   813  001F                     l1894:	
   814                           ;incstack = 0
   815                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   816                           
   817                           
   818                           ;MainL4Master.c: 79: 
   819  001F  120A  118A  2395  120A  118A  	fcall	_setup
   820  0024                     l1896:
   821                           
   822                           ;MainL4Master.c: 81: 
   823  0024  120A  118A  2316  120A  118A  	fcall	_Lcd_Init
   824  0029                     l1898:
   825                           
   826                           ;MainL4Master.c: 86:   TRISB = 0b00000000;
   827  0029  120A  118A  2487  120A  118A  	fcall	_Lcd_Clear
   828  002E                     l1900:
   829                           
   830                           ;MainL4Master.c: 87:   TRISC = 0b00000000;
   831  002E  01F6               	clrf	Lcd_Set_Cursor@b
   832  002F  0AF6               	incf	Lcd_Set_Cursor@b,f
   833  0030  3001               	movlw	1
   834  0031  120A  118A  22BE  120A  118A  	fcall	_Lcd_Set_Cursor
   835  0036                     l1902:
   836                           
   837                           ;MainL4Master.c: 88:   TRISD = 0b00000000;
   838  0036  3017               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   839  0037  120A  118A  2438  120A  118A  	fcall	_Lcd_Write_Char
   840                           
   841                           ;MainL4Master.c: 89:   TRISE = 0x00;
   842  003C  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   843  003D  120A  118A  23F5  120A  118A  	fcall	_Lcd_Write_String
   844  0042                     l1904:
   845                           
   846                           ;MainL4Master.c: 90: 
   847  0042  3003               	movlw	3
   848  0043  1283               	bcf	3,5	;RP0=0, select bank0
   849  0044  1303               	bcf	3,6	;RP1=0, select bank0
   850  0045  00B0               	movwf	??_main+2
   851  0046  3008               	movlw	8
   852  0047  00AF               	movwf	??_main+1
   853  0048  3076               	movlw	118
   854  0049  00AE               	movwf	??_main
   855  004A                     u917:
   856  004A  0BAE               	decfsz	??_main,f
   857  004B  284A               	goto	u917
   858  004C  0BAF               	decfsz	??_main+1,f
   859  004D  284A               	goto	u917
   860  004E  0BB0               	decfsz	??_main+2,f
   861  004F  284A               	goto	u917
   862  0050  0000               	nop
   863  0051                     l1906:
   864                           
   865                           ;MainL4Master.c: 92: 
   866  0051  120A  118A  24B4  120A  118A  	fcall	_I2C_Master_Start
   867  0056                     l1908:
   868                           
   869                           ;MainL4Master.c: 93:   OPTION_REG = 0b11000100;
   870  0056  3071               	movlw	113
   871  0057  00F2               	movwf	I2C_Master_Write@d
   872  0058  3000               	movlw	0
   873  0059  00F3               	movwf	I2C_Master_Write@d+1
   874  005A  120A  118A  24A1  120A  118A  	fcall	_I2C_Master_Write
   875  005F                     l1910:
   876                           
   877                           ;MainL4Master.c: 94: 
   878  005F  3000               	movlw	0
   879  0060  00F2               	movwf	I2C_Master_Read@a
   880  0061  00F3               	movwf	I2C_Master_Read@a+1
   881  0062  120A  118A  23C7  120A  118A  	fcall	_I2C_Master_Read
   882  0067  0872               	movf	?_I2C_Master_Read,w
   883  0068  1283               	bcf	3,5	;RP0=0, select bank0
   884  0069  1303               	bcf	3,6	;RP1=0, select bank0
   885  006A  00AE               	movwf	??_main
   886  006B  082E               	movf	??_main,w
   887  006C  00B3               	movwf	_cont
   888  006D                     l1912:
   889                           
   890                           ;MainL4Master.c: 95:   initOsc(8);
   891  006D  120A  118A  24AB  120A  118A  	fcall	_I2C_Master_Stop
   892  0072                     l1914:
   893                           
   894                           ;MainL4Master.c: 96:   I2C_Master_Init(100000);
   895  0072  3003               	movlw	3
   896  0073  1283               	bcf	3,5	;RP0=0, select bank0
   897  0074  1303               	bcf	3,6	;RP1=0, select bank0
   898  0075  00B0               	movwf	??_main+2
   899  0076  3008               	movlw	8
   900  0077  00AF               	movwf	??_main+1
   901  0078  3076               	movlw	118
   902  0079  00AE               	movwf	??_main
   903  007A                     u927:
   904  007A  0BAE               	decfsz	??_main,f
   905  007B  287A               	goto	u927
   906  007C  0BAF               	decfsz	??_main+1,f
   907  007D  287A               	goto	u927
   908  007E  0BB0               	decfsz	??_main+2,f
   909  007F  287A               	goto	u927
   910  0080  0000               	nop
   911  0081                     l1916:
   912                           
   913                           ;MainL4Master.c: 98:   PORTA = 0x00;
   914  0081  120A  118A  24B4  120A  118A  	fcall	_I2C_Master_Start
   915  0086                     l1918:
   916                           
   917                           ;MainL4Master.c: 99:   PORTB = 0x00;
   918  0086  3091               	movlw	145
   919  0087  00F2               	movwf	I2C_Master_Write@d
   920  0088  3000               	movlw	0
   921  0089  00F3               	movwf	I2C_Master_Write@d+1
   922  008A  120A  118A  24A1  120A  118A  	fcall	_I2C_Master_Write
   923  008F                     l1920:
   924                           
   925                           ;MainL4Master.c: 100:   PORTC = 0x00;
   926  008F  3000               	movlw	0
   927  0090  00F2               	movwf	I2C_Master_Read@a
   928  0091  00F3               	movwf	I2C_Master_Read@a+1
   929  0092  120A  118A  23C7  120A  118A  	fcall	_I2C_Master_Read
   930  0097  0872               	movf	?_I2C_Master_Read,w
   931  0098  1283               	bcf	3,5	;RP0=0, select bank0
   932  0099  1303               	bcf	3,6	;RP1=0, select bank0
   933  009A  00AE               	movwf	??_main
   934  009B  082E               	movf	??_main,w
   935  009C  00B4               	movwf	_varPot0
   936  009D                     l1922:
   937                           
   938                           ;MainL4Master.c: 101:   PORTD = 0x00;
   939  009D  120A  118A  24AB  120A  118A  	fcall	_I2C_Master_Stop
   940  00A2                     l1924:
   941                           
   942                           ;MainL4Master.c: 102:   PORTE = 0x00;
   943  00A2  3003               	movlw	3
   944  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   945  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   946  00A5  00B0               	movwf	??_main+2
   947  00A6  3008               	movlw	8
   948  00A7  00AF               	movwf	??_main+1
   949  00A8  3076               	movlw	118
   950  00A9  00AE               	movwf	??_main
   951  00AA                     u937:
   952  00AA  0BAE               	decfsz	??_main,f
   953  00AB  28AA               	goto	u937
   954  00AC  0BAF               	decfsz	??_main+1,f
   955  00AD  28AA               	goto	u937
   956  00AE  0BB0               	decfsz	??_main+2,f
   957  00AF  28AA               	goto	u937
   958  00B0  0000               	nop
   959  00B1                     l1926:
   960                           
   961                           ;MainL4Master.c: 105: 
   962  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   963  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   964  00B3  0833               	movf	_cont,w
   965  00B4  120A  118A  210B  120A  118A  	fcall	_voltASCII
   966  00B9                     l1928:
   967                           
   968                           ;MainL4Master.c: 106:   PIE1 = 0b00000000;
   969  00B9  01F6               	clrf	Lcd_Set_Cursor@b
   970  00BA  0AF6               	incf	Lcd_Set_Cursor@b,f
   971  00BB  3002               	movlw	2
   972  00BC  120A  118A  22BE  120A  118A  	fcall	_Lcd_Set_Cursor
   973  00C1                     l1930:
   974                           
   975                           ;MainL4Master.c: 107:   PIE2 = 0b00000000;
   976  00C1  1283               	bcf	3,5	;RP0=0, select bank0
   977  00C2  1303               	bcf	3,6	;RP1=0, select bank0
   978  00C3  0831               	movf	_centenas,w
   979  00C4  120A  118A  2438  120A  118A  	fcall	_Lcd_Write_Char
   980  00C9                     l1932:
   981                           
   982                           ;MainL4Master.c: 108:   PIR1 = 0x00;
   983  00C9  3015               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   984  00CA  120A  118A  23F5  120A  118A  	fcall	_Lcd_Write_String
   985  00CF                     l1934:
   986                           
   987                           ;MainL4Master.c: 109:   PIR2 = 0x00;
   988  00CF  087A               	movf	_decenas,w
   989  00D0  120A  118A  2438  120A  118A  	fcall	_Lcd_Write_Char
   990  00D5                     l1936:
   991                           
   992                           ;MainL4Master.c: 110:   INTCON = 0b00000000;
   993  00D5  1283               	bcf	3,5	;RP0=0, select bank0
   994  00D6  1303               	bcf	3,6	;RP1=0, select bank0
   995  00D7  0832               	movf	_unidades,w
   996  00D8  120A  118A  2438  120A  118A  	fcall	_Lcd_Write_Char
   997  00DD                     l1938:
   998                           
   999                           ;MainL4Master.c: 111: }
  1000  00DD  3012               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1001  00DE  120A  118A  23F5  120A  118A  	fcall	_Lcd_Write_String
  1002  00E3                     l1940:
  1003                           
  1004                           ;MainL4Master.c: 112: 
  1005  00E3  3003               	movlw	3
  1006  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1007  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1008  00E6  00B0               	movwf	??_main+2
  1009  00E7  3008               	movlw	8
  1010  00E8  00AF               	movwf	??_main+1
  1011  00E9  3076               	movlw	118
  1012  00EA  00AE               	movwf	??_main
  1013  00EB                     u947:
  1014  00EB  0BAE               	decfsz	??_main,f
  1015  00EC  28EB               	goto	u947
  1016  00ED  0BAF               	decfsz	??_main+1,f
  1017  00EE  28EB               	goto	u947
  1018  00EF  0BB0               	decfsz	??_main+2,f
  1019  00F0  28EB               	goto	u947
  1020  00F1  0000               	nop
  1021  00F2                     l1942:
  1022                           
  1023                           ;MainL4Master.c: 116: void voltASCII(uint8_t variable){
  1024  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1025  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1026  00F4  0834               	movf	_varPot0,w
  1027  00F5  0086               	movwf	6	;volatile
  1028  00F6                     l1944:
  1029                           
  1030                           ;MainL4Master.c: 117: 
  1031  00F6  0833               	movf	_cont,w
  1032  00F7  0085               	movwf	5	;volatile
  1033  00F8                     l1946:
  1034                           
  1035                           ;MainL4Master.c: 118:     valor = variable;
  1036  00F8  3003               	movlw	3
  1037  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1038  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  1039  00FB  00B0               	movwf	??_main+2
  1040  00FC  3008               	movlw	8
  1041  00FD  00AF               	movwf	??_main+1
  1042  00FE  3076               	movlw	118
  1043  00FF  00AE               	movwf	??_main
  1044  0100                     u957:
  1045  0100  0BAE               	decfsz	??_main,f
  1046  0101  2900               	goto	u957
  1047  0102  0BAF               	decfsz	??_main+1,f
  1048  0103  2900               	goto	u957
  1049  0104  0BB0               	decfsz	??_main+2,f
  1050  0105  2900               	goto	u957
  1051  0106  0000               	nop
  1052  0107  2829               	goto	l1898
  1053  0108  120A  118A  280C   	ljmp	start
  1054  010B                     __end_of_main:
  1055                           
  1056                           	psect	text1
  1057  010B                     __ptext1:	
  1058 ;; *************** function _voltASCII *****************
  1059 ;; Defined at:
  1060 ;;		line 162 in file "MainL4Master.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;  variable        1    wreg     unsigned char 
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;  variable        1    9[COMMON] unsigned char 
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      void 
  1067 ;; Registers used:
  1068 ;;		wreg, status,2, status,0, pclath, cstack
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1074 ;;      Params:         0       0       0       0       0
  1075 ;;      Locals:         1       0       0       0       0
  1076 ;;      Temps:          0       4       0       0       0
  1077 ;;      Totals:         1       4       0       0       0
  1078 ;;Total ram usage:        5 bytes
  1079 ;; Hardware stack levels used: 1
  1080 ;; Hardware stack levels required when called: 2
  1081 ;; This function calls:
  1082 ;;		___awdiv
  1083 ;;		___bmul
  1084 ;; This function is called by:
  1085 ;;		_main
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           
  1090                           ;psect for function _voltASCII
  1091  010B                     _voltASCII:
  1092                           
  1093                           ;incstack = 0
  1094                           ; Regs used in _voltASCII: [wreg+status,2+status,0+pclath+cstack]
  1095                           ;voltASCII@variable stored from wreg
  1096  010B  00F9               	movwf	voltASCII@variable
  1097  010C                     l1874:
  1098  010C  0879               	movf	voltASCII@variable,w
  1099  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1100  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1101  010F  00A6               	movwf	??_voltASCII
  1102  0110  0826               	movf	??_voltASCII,w
  1103  0111  00FB               	movwf	_valor
  1104  0112                     l1876:
  1105  0112  30F4               	movlw	244
  1106  0113  00A6               	movwf	??_voltASCII
  1107  0114  0826               	movf	??_voltASCII,w
  1108  0115  00F7               	movwf	___bmul@multiplicand
  1109  0116  087B               	movf	_valor,w
  1110  0117  00A7               	movwf	??_voltASCII+1
  1111  0118  01A8               	clrf	??_voltASCII+2
  1112  0119  0827               	movf	??_voltASCII+1,w
  1113  011A  00F4               	movwf	___awdiv@dividend
  1114  011B  0828               	movf	??_voltASCII+2,w
  1115  011C  00F5               	movwf	___awdiv@dividend+1
  1116  011D  30FF               	movlw	255
  1117  011E  00F2               	movwf	___awdiv@divisor
  1118  011F  3000               	movlw	0
  1119  0120  00F3               	movwf	___awdiv@divisor+1
  1120  0121  120A  118A  2191  120A  118A  	fcall	___awdiv
  1121  0126  0872               	movf	?___awdiv,w
  1122  0127  120A  118A  2470  120A  118A  	fcall	___bmul
  1123  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1124  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1125  012E  00A9               	movwf	??_voltASCII+3
  1126  012F  0829               	movf	??_voltASCII+3,w
  1127  0130  00FB               	movwf	_valor
  1128  0131                     l1878:
  1129  0131  3064               	movlw	100
  1130  0132  00F2               	movwf	___awdiv@divisor
  1131  0133  3000               	movlw	0
  1132  0134  00F3               	movwf	___awdiv@divisor+1
  1133  0135  087B               	movf	_valor,w
  1134  0136  00A6               	movwf	??_voltASCII
  1135  0137  01A7               	clrf	??_voltASCII+1
  1136  0138  0826               	movf	??_voltASCII,w
  1137  0139  00F4               	movwf	___awdiv@dividend
  1138  013A  0827               	movf	??_voltASCII+1,w
  1139  013B  00F5               	movwf	___awdiv@dividend+1
  1140  013C  120A  118A  2191  120A  118A  	fcall	___awdiv
  1141  0141  0872               	movf	?___awdiv,w
  1142  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1143  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1144  0144  00A8               	movwf	??_voltASCII+2
  1145  0145  0828               	movf	??_voltASCII+2,w
  1146  0146  00B1               	movwf	_centenas
  1147  0147                     l1880:
  1148  0147  309C               	movlw	156
  1149  0148  00A6               	movwf	??_voltASCII
  1150  0149  0826               	movf	??_voltASCII,w
  1151  014A  00F7               	movwf	___bmul@multiplicand
  1152  014B  0831               	movf	_centenas,w
  1153  014C  120A  118A  2470  120A  118A  	fcall	___bmul
  1154  0151  077B               	addwf	_valor,w
  1155  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1156  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1157  0154  00A7               	movwf	??_voltASCII+1
  1158  0155  0827               	movf	??_voltASCII+1,w
  1159  0156  00FB               	movwf	_valor
  1160  0157                     l1882:
  1161  0157  300A               	movlw	10
  1162  0158  00F2               	movwf	___awdiv@divisor
  1163  0159  3000               	movlw	0
  1164  015A  00F3               	movwf	___awdiv@divisor+1
  1165  015B  087B               	movf	_valor,w
  1166  015C  00A6               	movwf	??_voltASCII
  1167  015D  01A7               	clrf	??_voltASCII+1
  1168  015E  0826               	movf	??_voltASCII,w
  1169  015F  00F4               	movwf	___awdiv@dividend
  1170  0160  0827               	movf	??_voltASCII+1,w
  1171  0161  00F5               	movwf	___awdiv@dividend+1
  1172  0162  120A  118A  2191  120A  118A  	fcall	___awdiv
  1173  0167  0872               	movf	?___awdiv,w
  1174  0168  1283               	bcf	3,5	;RP0=0, select bank0
  1175  0169  1303               	bcf	3,6	;RP1=0, select bank0
  1176  016A  00A8               	movwf	??_voltASCII+2
  1177  016B  0828               	movf	??_voltASCII+2,w
  1178  016C  00FA               	movwf	_decenas
  1179  016D                     l1884:
  1180  016D  30F6               	movlw	246
  1181  016E  00A6               	movwf	??_voltASCII
  1182  016F  0826               	movf	??_voltASCII,w
  1183  0170  00F7               	movwf	___bmul@multiplicand
  1184  0171  087A               	movf	_decenas,w
  1185  0172  120A  118A  2470  120A  118A  	fcall	___bmul
  1186  0177  077B               	addwf	_valor,w
  1187  0178  1283               	bcf	3,5	;RP0=0, select bank0
  1188  0179  1303               	bcf	3,6	;RP1=0, select bank0
  1189  017A  00A7               	movwf	??_voltASCII+1
  1190  017B  0827               	movf	??_voltASCII+1,w
  1191  017C  00FB               	movwf	_valor
  1192  017D                     l1886:
  1193  017D  087B               	movf	_valor,w
  1194  017E  00A6               	movwf	??_voltASCII
  1195  017F  0826               	movf	??_voltASCII,w
  1196  0180  00B2               	movwf	_unidades
  1197  0181                     l1888:
  1198  0181  0831               	movf	_centenas,w
  1199  0182  3E30               	addlw	48
  1200  0183  00A6               	movwf	??_voltASCII
  1201  0184  0826               	movf	??_voltASCII,w
  1202  0185  00B1               	movwf	_centenas
  1203  0186                     l1890:
  1204  0186  087A               	movf	_decenas,w
  1205  0187  3E30               	addlw	48
  1206  0188  00A6               	movwf	??_voltASCII
  1207  0189  0826               	movf	??_voltASCII,w
  1208  018A  00FA               	movwf	_decenas
  1209  018B                     l1892:
  1210  018B  0832               	movf	_unidades,w
  1211  018C  3E30               	addlw	48
  1212  018D  00A6               	movwf	??_voltASCII
  1213  018E  0826               	movf	??_voltASCII,w
  1214  018F  00B2               	movwf	_unidades
  1215  0190                     l271:
  1216  0190  0008               	return
  1217  0191                     __end_of_voltASCII:
  1218                           
  1219                           	psect	text2
  1220  0470                     __ptext2:	
  1221 ;; *************** function ___bmul *****************
  1222 ;; Defined at:
  1223 ;;		line 4 in file "E:\Microchip\XC8\pic\sources\c90\common\Umul8.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;  multiplier      1    wreg     unsigned char 
  1226 ;;  multiplicand    1    7[COMMON] unsigned char 
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;  multiplier      1    5[BANK0 ] unsigned char 
  1229 ;;  product         1    4[BANK0 ] unsigned char 
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      unsigned char 
  1232 ;; Registers used:
  1233 ;;		wreg, status,2, status,0
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1239 ;;      Params:         1       0       0       0       0
  1240 ;;      Locals:         0       2       0       0       0
  1241 ;;      Temps:          1       0       0       0       0
  1242 ;;      Totals:         2       2       0       0       0
  1243 ;;Total ram usage:        4 bytes
  1244 ;; Hardware stack levels used: 1
  1245 ;; Hardware stack levels required when called: 1
  1246 ;; This function calls:
  1247 ;;		Nothing
  1248 ;; This function is called by:
  1249 ;;		_voltASCII
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           
  1254                           ;psect for function ___bmul
  1255  0470                     ___bmul:
  1256                           
  1257                           ;incstack = 0
  1258                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1259                           ;___bmul@multiplier stored from wreg
  1260  0470  1283               	bcf	3,5	;RP0=0, select bank0
  1261  0471  1303               	bcf	3,6	;RP1=0, select bank0
  1262  0472  00A5               	movwf	___bmul@multiplier
  1263  0473                     l1788:
  1264  0473  01A4               	clrf	___bmul@product
  1265  0474                     l1790:
  1266  0474  1C25               	btfss	___bmul@multiplier,0
  1267  0475  2C77               	goto	u791
  1268  0476  2C78               	goto	u790
  1269  0477                     u791:
  1270  0477  2C7C               	goto	l1794
  1271  0478                     u790:
  1272  0478                     l1792:
  1273  0478  0877               	movf	___bmul@multiplicand,w
  1274  0479  00F8               	movwf	??___bmul
  1275  047A  0878               	movf	??___bmul,w
  1276  047B  07A4               	addwf	___bmul@product,f
  1277  047C                     l1794:
  1278  047C  1003               	clrc
  1279  047D  0DF7               	rlf	___bmul@multiplicand,f
  1280  047E                     l1796:
  1281  047E  1003               	clrc
  1282  047F  0CA5               	rrf	___bmul@multiplier,f
  1283  0480  0825               	movf	___bmul@multiplier,w
  1284  0481  1D03               	btfss	3,2
  1285  0482  2C84               	goto	u801
  1286  0483  2C85               	goto	u800
  1287  0484                     u801:
  1288  0484  2C74               	goto	l1790
  1289  0485                     u800:
  1290  0485                     l1798:
  1291  0485  0824               	movf	___bmul@product,w
  1292  0486                     l424:
  1293  0486  0008               	return
  1294  0487                     __end_of___bmul:
  1295                           
  1296                           	psect	text3
  1297  0191                     __ptext3:	
  1298 ;; *************** function ___awdiv *****************
  1299 ;; Defined at:
  1300 ;;		line 5 in file "E:\Microchip\XC8\pic\sources\c90\common\awdiv.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;  divisor         2    2[COMMON] int 
  1303 ;;  dividend        2    4[COMMON] int 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  quotient        2    2[BANK0 ] int 
  1306 ;;  sign            1    1[BANK0 ] unsigned char 
  1307 ;;  counter         1    0[BANK0 ] unsigned char 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  2    2[COMMON] int 
  1310 ;; Registers used:
  1311 ;;		wreg, status,2, status,0
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1317 ;;      Params:         4       0       0       0       0
  1318 ;;      Locals:         0       4       0       0       0
  1319 ;;      Temps:          1       0       0       0       0
  1320 ;;      Totals:         5       4       0       0       0
  1321 ;;Total ram usage:        9 bytes
  1322 ;; Hardware stack levels used: 1
  1323 ;; Hardware stack levels required when called: 1
  1324 ;; This function calls:
  1325 ;;		Nothing
  1326 ;; This function is called by:
  1327 ;;		_voltASCII
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           
  1332                           ;psect for function ___awdiv
  1333  0191                     ___awdiv:
  1334  0191                     l1802:	
  1335                           ;incstack = 0
  1336                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1337                           
  1338  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1339  0192  1303               	bcf	3,6	;RP1=0, select bank0
  1340  0193  01A1               	clrf	___awdiv@sign
  1341  0194                     l1804:
  1342  0194  1FF3               	btfss	___awdiv@divisor+1,7
  1343  0195  2997               	goto	u811
  1344  0196  2998               	goto	u810
  1345  0197                     u811:
  1346  0197  299F               	goto	l1810
  1347  0198                     u810:
  1348  0198                     l1806:
  1349  0198  09F2               	comf	___awdiv@divisor,f
  1350  0199  09F3               	comf	___awdiv@divisor+1,f
  1351  019A  0AF2               	incf	___awdiv@divisor,f
  1352  019B  1903               	skipnz
  1353  019C  0AF3               	incf	___awdiv@divisor+1,f
  1354  019D                     l1808:
  1355  019D  01A1               	clrf	___awdiv@sign
  1356  019E  0AA1               	incf	___awdiv@sign,f
  1357  019F                     l1810:
  1358  019F  1FF5               	btfss	___awdiv@dividend+1,7
  1359  01A0  29A2               	goto	u821
  1360  01A1  29A3               	goto	u820
  1361  01A2                     u821:
  1362  01A2  29AC               	goto	l1816
  1363  01A3                     u820:
  1364  01A3                     l1812:
  1365  01A3  09F4               	comf	___awdiv@dividend,f
  1366  01A4  09F5               	comf	___awdiv@dividend+1,f
  1367  01A5  0AF4               	incf	___awdiv@dividend,f
  1368  01A6  1903               	skipnz
  1369  01A7  0AF5               	incf	___awdiv@dividend+1,f
  1370  01A8                     l1814:
  1371  01A8  3001               	movlw	1
  1372  01A9  00F6               	movwf	??___awdiv
  1373  01AA  0876               	movf	??___awdiv,w
  1374  01AB  06A1               	xorwf	___awdiv@sign,f
  1375  01AC                     l1816:
  1376  01AC  01A2               	clrf	___awdiv@quotient
  1377  01AD  01A3               	clrf	___awdiv@quotient+1
  1378  01AE                     l1818:
  1379  01AE  0872               	movf	___awdiv@divisor,w
  1380  01AF  0473               	iorwf	___awdiv@divisor+1,w
  1381  01B0  1903               	btfsc	3,2
  1382  01B1  29B3               	goto	u831
  1383  01B2  29B4               	goto	u830
  1384  01B3                     u831:
  1385  01B3  29EB               	goto	l1838
  1386  01B4                     u830:
  1387  01B4                     l1820:
  1388  01B4  01A0               	clrf	___awdiv@counter
  1389  01B5  0AA0               	incf	___awdiv@counter,f
  1390  01B6  29C2               	goto	l1826
  1391  01B7                     l1822:
  1392  01B7  3001               	movlw	1
  1393  01B8                     u845:
  1394  01B8  1003               	clrc
  1395  01B9  0DF2               	rlf	___awdiv@divisor,f
  1396  01BA  0DF3               	rlf	___awdiv@divisor+1,f
  1397  01BB  3EFF               	addlw	-1
  1398  01BC  1D03               	skipz
  1399  01BD  29B8               	goto	u845
  1400  01BE                     l1824:
  1401  01BE  3001               	movlw	1
  1402  01BF  00F6               	movwf	??___awdiv
  1403  01C0  0876               	movf	??___awdiv,w
  1404  01C1  07A0               	addwf	___awdiv@counter,f
  1405  01C2                     l1826:
  1406  01C2  1FF3               	btfss	___awdiv@divisor+1,7
  1407  01C3  29C5               	goto	u851
  1408  01C4  29C6               	goto	u850
  1409  01C5                     u851:
  1410  01C5  29B7               	goto	l1822
  1411  01C6                     u850:
  1412  01C6                     l1828:
  1413  01C6  3001               	movlw	1
  1414  01C7                     u865:
  1415  01C7  1003               	clrc
  1416  01C8  0DA2               	rlf	___awdiv@quotient,f
  1417  01C9  0DA3               	rlf	___awdiv@quotient+1,f
  1418  01CA  3EFF               	addlw	-1
  1419  01CB  1D03               	skipz
  1420  01CC  29C7               	goto	u865
  1421  01CD  0873               	movf	___awdiv@divisor+1,w
  1422  01CE  0275               	subwf	___awdiv@dividend+1,w
  1423  01CF  1D03               	skipz
  1424  01D0  29D3               	goto	u875
  1425  01D1  0872               	movf	___awdiv@divisor,w
  1426  01D2  0274               	subwf	___awdiv@dividend,w
  1427  01D3                     u875:
  1428  01D3  1C03               	skipc
  1429  01D4  29D6               	goto	u871
  1430  01D5  29D7               	goto	u870
  1431  01D6                     u871:
  1432  01D6  29DE               	goto	l1834
  1433  01D7                     u870:
  1434  01D7                     l1830:
  1435  01D7  0872               	movf	___awdiv@divisor,w
  1436  01D8  02F4               	subwf	___awdiv@dividend,f
  1437  01D9  0873               	movf	___awdiv@divisor+1,w
  1438  01DA  1C03               	skipc
  1439  01DB  03F5               	decf	___awdiv@dividend+1,f
  1440  01DC  02F5               	subwf	___awdiv@dividend+1,f
  1441  01DD                     l1832:
  1442  01DD  1422               	bsf	___awdiv@quotient,0
  1443  01DE                     l1834:
  1444  01DE  3001               	movlw	1
  1445  01DF                     u885:
  1446  01DF  1003               	clrc
  1447  01E0  0CF3               	rrf	___awdiv@divisor+1,f
  1448  01E1  0CF2               	rrf	___awdiv@divisor,f
  1449  01E2  3EFF               	addlw	-1
  1450  01E3  1D03               	skipz
  1451  01E4  29DF               	goto	u885
  1452  01E5                     l1836:
  1453  01E5  3001               	movlw	1
  1454  01E6  02A0               	subwf	___awdiv@counter,f
  1455  01E7  1D03               	btfss	3,2
  1456  01E8  29EA               	goto	u891
  1457  01E9  29EB               	goto	u890
  1458  01EA                     u891:
  1459  01EA  29C6               	goto	l1828
  1460  01EB                     u890:
  1461  01EB                     l1838:
  1462  01EB  0821               	movf	___awdiv@sign,w
  1463  01EC  1903               	btfsc	3,2
  1464  01ED  29EF               	goto	u901
  1465  01EE  29F0               	goto	u900
  1466  01EF                     u901:
  1467  01EF  29F5               	goto	l1842
  1468  01F0                     u900:
  1469  01F0                     l1840:
  1470  01F0  09A2               	comf	___awdiv@quotient,f
  1471  01F1  09A3               	comf	___awdiv@quotient+1,f
  1472  01F2  0AA2               	incf	___awdiv@quotient,f
  1473  01F3  1903               	skipnz
  1474  01F4  0AA3               	incf	___awdiv@quotient+1,f
  1475  01F5                     l1842:
  1476  01F5  0823               	movf	___awdiv@quotient+1,w
  1477  01F6  00F3               	movwf	?___awdiv+1
  1478  01F7  0822               	movf	___awdiv@quotient,w
  1479  01F8  00F2               	movwf	?___awdiv
  1480  01F9                     l551:
  1481  01F9  0008               	return
  1482  01FA                     __end_of___awdiv:
  1483                           
  1484                           	psect	text4
  1485  0395                     __ptext4:	
  1486 ;; *************** function _setup *****************
  1487 ;; Defined at:
  1488 ;;		line 126 in file "MainL4Master.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;		None
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1502 ;;      Params:         0       0       0       0       0
  1503 ;;      Locals:         0       0       0       0       0
  1504 ;;      Temps:          0       0       0       0       0
  1505 ;;      Totals:         0       0       0       0       0
  1506 ;;Total ram usage:        0 bytes
  1507 ;; Hardware stack levels used: 1
  1508 ;; Hardware stack levels required when called: 3
  1509 ;; This function calls:
  1510 ;;		_I2C_Master_Init
  1511 ;;		_initOsc
  1512 ;; This function is called by:
  1513 ;;		_main
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           
  1518                           ;psect for function _setup
  1519  0395                     _setup:
  1520  0395                     l1846:	
  1521                           ;incstack = 0
  1522                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1523                           
  1524                           
  1525                           ;MainL4Master.c: 129:     decenas = decenas + 48;
  1526  0395  1683               	bsf	3,5	;RP0=1, select bank3
  1527  0396  1703               	bsf	3,6	;RP1=1, select bank3
  1528  0397  0189               	clrf	9	;volatile
  1529                           
  1530                           ;MainL4Master.c: 131: }
  1531  0398  1683               	bsf	3,5	;RP0=1, select bank1
  1532  0399  1303               	bcf	3,6	;RP1=0, select bank1
  1533  039A  0185               	clrf	5	;volatile
  1534  039B  0186               	clrf	6	;volatile
  1535  039C  0187               	clrf	7	;volatile
  1536  039D  0188               	clrf	8	;volatile
  1537  039E  0189               	clrf	9	;volatile
  1538  039F                     l1848:
  1539  039F  30C4               	movlw	196
  1540  03A0  0081               	movwf	1	;volatile
  1541  03A1                     l1850:
  1542  03A1  3008               	movlw	8
  1543  03A2  120A  118A  2262  120A  118A  	fcall	_initOsc
  1544  03A7                     l1852:
  1545  03A7  3000               	movlw	0
  1546  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  1547  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  1548  03AA  00A9               	movwf	I2C_Master_Init@c+3
  1549  03AB  3001               	movlw	1
  1550  03AC  00A8               	movwf	I2C_Master_Init@c+2
  1551  03AD  3086               	movlw	134
  1552  03AE  00A7               	movwf	I2C_Master_Init@c+1
  1553  03AF  30A0               	movlw	160
  1554  03B0  00A6               	movwf	I2C_Master_Init@c
  1555  03B1  120A  118A  235D  120A  118A  	fcall	_I2C_Master_Init
  1556  03B6                     l1854:
  1557  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  1558  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  1559  03B8  0185               	clrf	5	;volatile
  1560  03B9                     l1856:
  1561  03B9  0186               	clrf	6	;volatile
  1562  03BA                     l1858:
  1563  03BA  0187               	clrf	7	;volatile
  1564  03BB                     l1860:
  1565  03BB  0188               	clrf	8	;volatile
  1566  03BC                     l1862:
  1567  03BC  0189               	clrf	9	;volatile
  1568  03BD                     l1864:
  1569  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  1570  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  1571  03BF  018C               	clrf	12	;volatile
  1572  03C0                     l1866:
  1573  03C0  018D               	clrf	13	;volatile
  1574  03C1                     l1868:
  1575  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  1576  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  1577  03C3  018C               	clrf	12	;volatile
  1578  03C4                     l1870:
  1579  03C4  018D               	clrf	13	;volatile
  1580  03C5                     l1872:
  1581  03C5  018B               	clrf	11	;volatile
  1582  03C6                     l268:
  1583  03C6  0008               	return
  1584  03C7                     __end_of_setup:
  1585                           
  1586                           	psect	text5
  1587  0262                     __ptext5:	
  1588 ;; *************** function _initOsc *****************
  1589 ;; Defined at:
  1590 ;;		line 14 in file "./my_lib.h"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;  frec            1    wreg     unsigned char 
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;  frec            1    4[COMMON] unsigned char 
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  1    wreg      void 
  1597 ;; Registers used:
  1598 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1604 ;;      Params:         0       0       0       0       0
  1605 ;;      Locals:         1       0       0       0       0
  1606 ;;      Temps:          2       0       0       0       0
  1607 ;;      Totals:         3       0       0       0       0
  1608 ;;Total ram usage:        3 bytes
  1609 ;; Hardware stack levels used: 1
  1610 ;; Hardware stack levels required when called: 1
  1611 ;; This function calls:
  1612 ;;		Nothing
  1613 ;; This function is called by:
  1614 ;;		_setup
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           
  1619                           ;psect for function _initOsc
  1620  0262                     _initOsc:
  1621                           
  1622                           ;incstack = 0
  1623                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1624                           ;initOsc@frec stored from wreg
  1625  0262  00F4               	movwf	initOsc@frec
  1626  0263                     l1464:
  1627                           
  1628                           ;./my_lib.h: 16:         switch(frec){
  1629  0263  2A9A               	goto	l1468
  1630  0264                     l145:	
  1631                           ;./my_lib.h: 17:             case 8:
  1632                           
  1633                           
  1634                           ;./my_lib.h: 18:                 OSCCONbits.IRCF0 = 1;
  1635  0264  1683               	bsf	3,5	;RP0=1, select bank1
  1636  0265  1303               	bcf	3,6	;RP1=0, select bank1
  1637  0266  160F               	bsf	15,4	;volatile
  1638                           
  1639                           ;./my_lib.h: 19:                 OSCCONbits.IRCF1 = 1;
  1640  0267  168F               	bsf	15,5	;volatile
  1641                           
  1642                           ;./my_lib.h: 20:                 OSCCONbits.IRCF2 = 1;
  1643  0268  170F               	bsf	15,6	;volatile
  1644                           
  1645                           ;./my_lib.h: 21:                 break;
  1646  0269  2ABC               	goto	l146
  1647  026A                     l147:	
  1648                           ;./my_lib.h: 23:             case 4:
  1649                           
  1650                           
  1651                           ;./my_lib.h: 24:                 OSCCONbits.IRCF0 = 0;
  1652  026A  1683               	bsf	3,5	;RP0=1, select bank1
  1653  026B  1303               	bcf	3,6	;RP1=0, select bank1
  1654  026C  120F               	bcf	15,4	;volatile
  1655                           
  1656                           ;./my_lib.h: 25:                 OSCCONbits.IRCF1 = 1;
  1657  026D  168F               	bsf	15,5	;volatile
  1658                           
  1659                           ;./my_lib.h: 26:                 OSCCONbits.IRCF2 = 1;
  1660  026E  170F               	bsf	15,6	;volatile
  1661                           
  1662                           ;./my_lib.h: 27:                 break;
  1663  026F  2ABC               	goto	l146
  1664  0270                     l148:	
  1665                           ;./my_lib.h: 28:             case 2:
  1666                           
  1667                           
  1668                           ;./my_lib.h: 29:                 OSCCONbits.IRCF0 = 1;
  1669  0270  1683               	bsf	3,5	;RP0=1, select bank1
  1670  0271  1303               	bcf	3,6	;RP1=0, select bank1
  1671  0272  160F               	bsf	15,4	;volatile
  1672                           
  1673                           ;./my_lib.h: 30:                 OSCCONbits.IRCF1 = 0;
  1674  0273  128F               	bcf	15,5	;volatile
  1675                           
  1676                           ;./my_lib.h: 31:                 OSCCONbits.IRCF2 = 1;
  1677  0274  170F               	bsf	15,6	;volatile
  1678                           
  1679                           ;./my_lib.h: 32:                 break;
  1680  0275  2ABC               	goto	l146
  1681  0276                     l149:	
  1682                           ;./my_lib.h: 33:              case 1:
  1683                           
  1684                           
  1685                           ;./my_lib.h: 34:                 OSCCONbits.IRCF0 = 0;
  1686  0276  1683               	bsf	3,5	;RP0=1, select bank1
  1687  0277  1303               	bcf	3,6	;RP1=0, select bank1
  1688  0278  120F               	bcf	15,4	;volatile
  1689                           
  1690                           ;./my_lib.h: 35:                 OSCCONbits.IRCF1 = 0;
  1691  0279  128F               	bcf	15,5	;volatile
  1692                           
  1693                           ;./my_lib.h: 36:                 OSCCONbits.IRCF2 = 1;
  1694  027A  170F               	bsf	15,6	;volatile
  1695                           
  1696                           ;./my_lib.h: 37:                 break;
  1697  027B  2ABC               	goto	l146
  1698  027C                     l150:	
  1699                           ;./my_lib.h: 38:              case 50:
  1700                           
  1701                           
  1702                           ;./my_lib.h: 39:                 OSCCONbits.IRCF0 = 0;
  1703  027C  1683               	bsf	3,5	;RP0=1, select bank1
  1704  027D  1303               	bcf	3,6	;RP1=0, select bank1
  1705  027E  120F               	bcf	15,4	;volatile
  1706                           
  1707                           ;./my_lib.h: 40:                 OSCCONbits.IRCF1 = 1;
  1708  027F  168F               	bsf	15,5	;volatile
  1709                           
  1710                           ;./my_lib.h: 41:                 OSCCONbits.IRCF2 = 1;
  1711  0280  170F               	bsf	15,6	;volatile
  1712                           
  1713                           ;./my_lib.h: 42:                 break;
  1714  0281  2ABC               	goto	l146
  1715  0282                     l151:	
  1716                           ;./my_lib.h: 43:              case 25:
  1717                           
  1718                           
  1719                           ;./my_lib.h: 44:                 OSCCONbits.IRCF0 = 0;
  1720  0282  1683               	bsf	3,5	;RP0=1, select bank1
  1721  0283  1303               	bcf	3,6	;RP1=0, select bank1
  1722  0284  120F               	bcf	15,4	;volatile
  1723                           
  1724                           ;./my_lib.h: 45:                 OSCCONbits.IRCF1 = 1;
  1725  0285  168F               	bsf	15,5	;volatile
  1726                           
  1727                           ;./my_lib.h: 46:                 OSCCONbits.IRCF2 = 0;
  1728  0286  130F               	bcf	15,6	;volatile
  1729                           
  1730                           ;./my_lib.h: 47:                 break;
  1731  0287  2ABC               	goto	l146
  1732  0288                     l152:	
  1733                           ;./my_lib.h: 48:               case 12:
  1734                           
  1735                           
  1736                           ;./my_lib.h: 49:                 OSCCONbits.IRCF0 = 1;
  1737  0288  1683               	bsf	3,5	;RP0=1, select bank1
  1738  0289  1303               	bcf	3,6	;RP1=0, select bank1
  1739  028A  160F               	bsf	15,4	;volatile
  1740                           
  1741                           ;./my_lib.h: 50:                 OSCCONbits.IRCF1 = 0;
  1742  028B  128F               	bcf	15,5	;volatile
  1743                           
  1744                           ;./my_lib.h: 51:                 OSCCONbits.IRCF2 = 0;
  1745  028C  130F               	bcf	15,6	;volatile
  1746                           
  1747                           ;./my_lib.h: 52:                 break;
  1748  028D  2ABC               	goto	l146
  1749  028E                     l153:	
  1750                           ;./my_lib.h: 53:               case 31:
  1751                           
  1752                           
  1753                           ;./my_lib.h: 54:                 OSCCONbits.IRCF0 = 0;
  1754  028E  1683               	bsf	3,5	;RP0=1, select bank1
  1755  028F  1303               	bcf	3,6	;RP1=0, select bank1
  1756  0290  120F               	bcf	15,4	;volatile
  1757                           
  1758                           ;./my_lib.h: 55:                 OSCCONbits.IRCF1 = 1;
  1759  0291  168F               	bsf	15,5	;volatile
  1760                           
  1761                           ;./my_lib.h: 56:                 OSCCONbits.IRCF2 = 1;
  1762  0292  170F               	bsf	15,6	;volatile
  1763                           
  1764                           ;./my_lib.h: 57:                 break;
  1765  0293  2ABC               	goto	l146
  1766  0294                     l154:	
  1767                           ;./my_lib.h: 58:               default:
  1768                           
  1769                           
  1770                           ;./my_lib.h: 59:                 OSCCONbits.IRCF0 = 0;
  1771  0294  1683               	bsf	3,5	;RP0=1, select bank1
  1772  0295  1303               	bcf	3,6	;RP1=0, select bank1
  1773  0296  120F               	bcf	15,4	;volatile
  1774                           
  1775                           ;./my_lib.h: 60:                 OSCCONbits.IRCF1 = 1;
  1776  0297  168F               	bsf	15,5	;volatile
  1777                           
  1778                           ;./my_lib.h: 61:                 OSCCONbits.IRCF2 = 1;
  1779  0298  170F               	bsf	15,6	;volatile
  1780                           
  1781                           ;./my_lib.h: 62:                 break;
  1782  0299  2ABC               	goto	l146
  1783  029A                     l1468:
  1784  029A  0874               	movf	initOsc@frec,w
  1785  029B  00F2               	movwf	??_initOsc
  1786  029C  01F3               	clrf	??_initOsc+1
  1787                           
  1788                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1789                           ; Switch size 1, requested type "simple"
  1790                           ; Number of cases is 1, Range of values is 0 to 0
  1791                           ; switch strategies available:
  1792                           ; Name         Instructions Cycles
  1793                           ; simple_byte            4     3 (average)
  1794                           ; direct_byte           11     8 (fixed)
  1795                           ; jumptable            260     6 (fixed)
  1796                           ;	Chosen strategy is simple_byte
  1797  029D  0873               	movf	??_initOsc+1,w
  1798  029E  3A00               	xorlw	0	; case 0
  1799  029F  1903               	skipnz
  1800  02A0  2AA2               	goto	l1968
  1801  02A1  2A94               	goto	l154
  1802  02A2                     l1968:
  1803                           
  1804                           ; Switch size 1, requested type "simple"
  1805                           ; Number of cases is 8, Range of values is 1 to 50
  1806                           ; switch strategies available:
  1807                           ; Name         Instructions Cycles
  1808                           ; simple_byte           25    13 (average)
  1809                           ; direct_byte          161    11 (fixed)
  1810                           ; jumptable            263     9 (fixed)
  1811                           ;	Chosen strategy is simple_byte
  1812  02A2  0872               	movf	??_initOsc,w
  1813  02A3  3A01               	xorlw	1	; case 1
  1814  02A4  1903               	skipnz
  1815  02A5  2A76               	goto	l149
  1816  02A6  3A03               	xorlw	3	; case 2
  1817  02A7  1903               	skipnz
  1818  02A8  2A70               	goto	l148
  1819  02A9  3A06               	xorlw	6	; case 4
  1820  02AA  1903               	skipnz
  1821  02AB  2A6A               	goto	l147
  1822  02AC  3A0C               	xorlw	12	; case 8
  1823  02AD  1903               	skipnz
  1824  02AE  2A64               	goto	l145
  1825  02AF  3A04               	xorlw	4	; case 12
  1826  02B0  1903               	skipnz
  1827  02B1  2A88               	goto	l152
  1828  02B2  3A15               	xorlw	21	; case 25
  1829  02B3  1903               	skipnz
  1830  02B4  2A82               	goto	l151
  1831  02B5  3A06               	xorlw	6	; case 31
  1832  02B6  1903               	skipnz
  1833  02B7  2A8E               	goto	l153
  1834  02B8  3A2D               	xorlw	45	; case 50
  1835  02B9  1903               	skipnz
  1836  02BA  2A7C               	goto	l150
  1837  02BB  2A94               	goto	l154
  1838  02BC                     l146:
  1839                           
  1840                           ;./my_lib.h: 64:     OSCCONbits.SCS = 1;
  1841  02BC  140F               	bsf	15,0	;volatile
  1842  02BD                     l155:
  1843  02BD  0008               	return
  1844  02BE                     __end_of_initOsc:
  1845                           
  1846                           	psect	text6
  1847  035D                     __ptext6:	
  1848 ;; *************** function _I2C_Master_Init *****************
  1849 ;; Defined at:
  1850 ;;		line 16 in file "I2C.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;  c               4    6[BANK0 ] const unsigned long 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;		None
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      void 
  1857 ;; Registers used:
  1858 ;;		wreg, status,2, status,0, pclath, cstack
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1864 ;;      Params:         0       4       0       0       0
  1865 ;;      Locals:         0       0       0       0       0
  1866 ;;      Temps:          0       4       0       0       0
  1867 ;;      Totals:         0       8       0       0       0
  1868 ;;Total ram usage:        8 bytes
  1869 ;; Hardware stack levels used: 1
  1870 ;; Hardware stack levels required when called: 2
  1871 ;; This function calls:
  1872 ;;		___lldiv
  1873 ;; This function is called by:
  1874 ;;		_setup
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           
  1879                           ;psect for function _I2C_Master_Init
  1880  035D                     _I2C_Master_Init:
  1881  035D                     l1776:	
  1882                           ;incstack = 0
  1883                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1884                           
  1885                           
  1886                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1887  035D  3028               	movlw	40
  1888  035E  1283               	bcf	3,5	;RP0=0, select bank0
  1889  035F  1303               	bcf	3,6	;RP1=0, select bank0
  1890  0360  0094               	movwf	20	;volatile
  1891  0361                     l1778:
  1892                           
  1893                           ;I2C.c: 19:     SSPCON2 = 0;
  1894  0361  1683               	bsf	3,5	;RP0=1, select bank1
  1895  0362  1303               	bcf	3,6	;RP1=0, select bank1
  1896  0363  0191               	clrf	17	;volatile
  1897  0364                     l1780:
  1898                           
  1899                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1900  0364  1283               	bcf	3,5	;RP0=0, select bank0
  1901  0365  1303               	bcf	3,6	;RP1=0, select bank0
  1902  0366  0826               	movf	I2C_Master_Init@c,w
  1903  0367  00AA               	movwf	??_I2C_Master_Init
  1904  0368  0827               	movf	I2C_Master_Init@c+1,w
  1905  0369  00AB               	movwf	??_I2C_Master_Init+1
  1906  036A  0828               	movf	I2C_Master_Init@c+2,w
  1907  036B  00AC               	movwf	??_I2C_Master_Init+2
  1908  036C  0829               	movf	I2C_Master_Init@c+3,w
  1909  036D  00AD               	movwf	??_I2C_Master_Init+3
  1910  036E  3002               	movlw	2
  1911  036F                     u785:
  1912  036F  1003               	clrc
  1913  0370  0DAA               	rlf	??_I2C_Master_Init,f
  1914  0371  0DAB               	rlf	??_I2C_Master_Init+1,f
  1915  0372  0DAC               	rlf	??_I2C_Master_Init+2,f
  1916  0373  0DAD               	rlf	??_I2C_Master_Init+3,f
  1917  0374                     u780:
  1918  0374  3EFF               	addlw	-1
  1919  0375  1D03               	skipz
  1920  0376  2B6F               	goto	u785
  1921  0377  082D               	movf	??_I2C_Master_Init+3,w
  1922  0378  00F5               	movwf	___lldiv@divisor+3
  1923  0379  082C               	movf	??_I2C_Master_Init+2,w
  1924  037A  00F4               	movwf	___lldiv@divisor+2
  1925  037B  082B               	movf	??_I2C_Master_Init+1,w
  1926  037C  00F3               	movwf	___lldiv@divisor+1
  1927  037D  082A               	movf	??_I2C_Master_Init,w
  1928  037E  00F2               	movwf	___lldiv@divisor
  1929  037F  3000               	movlw	0
  1930  0380  00F9               	movwf	___lldiv@dividend+3
  1931  0381  307A               	movlw	122
  1932  0382  00F8               	movwf	___lldiv@dividend+2
  1933  0383  3012               	movlw	18
  1934  0384  00F7               	movwf	___lldiv@dividend+1
  1935  0385  3000               	movlw	0
  1936  0386  00F6               	movwf	___lldiv@dividend
  1937  0387  120A  118A  21FA  120A  118A  	fcall	___lldiv
  1938  038C  0872               	movf	?___lldiv,w
  1939  038D  3EFF               	addlw	255
  1940  038E  1683               	bsf	3,5	;RP0=1, select bank1
  1941  038F  1303               	bcf	3,6	;RP1=0, select bank1
  1942  0390  0093               	movwf	19	;volatile
  1943  0391                     l1782:
  1944                           
  1945                           ;I2C.c: 21:     SSPSTAT = 0;
  1946  0391  0194               	clrf	20	;volatile
  1947  0392                     l1784:
  1948                           
  1949                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1950  0392  1587               	bsf	7,3	;volatile
  1951  0393                     l1786:
  1952                           
  1953                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1954  0393  1607               	bsf	7,4	;volatile
  1955  0394                     l29:
  1956  0394  0008               	return
  1957  0395                     __end_of_I2C_Master_Init:
  1958                           
  1959                           	psect	text7
  1960  01FA                     __ptext7:	
  1961 ;; *************** function ___lldiv *****************
  1962 ;; Defined at:
  1963 ;;		line 5 in file "E:\Microchip\XC8\pic\sources\c90\common\__lldiv.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;  divisor         4    2[COMMON] unsigned long 
  1966 ;;  dividend        4    6[COMMON] unsigned long 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  quotient        4    1[BANK0 ] unsigned long 
  1969 ;;  counter         1    5[BANK0 ] unsigned char 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  4    2[COMMON] unsigned long 
  1972 ;; Registers used:
  1973 ;;		wreg, status,2, status,0
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1979 ;;      Params:         8       0       0       0       0
  1980 ;;      Locals:         0       5       0       0       0
  1981 ;;      Temps:          0       1       0       0       0
  1982 ;;      Totals:         8       6       0       0       0
  1983 ;;Total ram usage:       14 bytes
  1984 ;; Hardware stack levels used: 1
  1985 ;; Hardware stack levels required when called: 1
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_I2C_Master_Init
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           
  1994                           ;psect for function ___lldiv
  1995  01FA                     ___lldiv:
  1996  01FA                     l1752:	
  1997                           ;incstack = 0
  1998                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1999                           
  2000  01FA  3000               	movlw	0
  2001  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  2002  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  2003  01FD  00A4               	movwf	___lldiv@quotient+3
  2004  01FE  3000               	movlw	0
  2005  01FF  00A3               	movwf	___lldiv@quotient+2
  2006  0200  3000               	movlw	0
  2007  0201  00A2               	movwf	___lldiv@quotient+1
  2008  0202  3000               	movlw	0
  2009  0203  00A1               	movwf	___lldiv@quotient
  2010  0204  0875               	movf	___lldiv@divisor+3,w
  2011  0205  0474               	iorwf	___lldiv@divisor+2,w
  2012  0206  0473               	iorwf	___lldiv@divisor+1,w
  2013  0207  0472               	iorwf	___lldiv@divisor,w
  2014  0208  1903               	skipnz
  2015  0209  2A0B               	goto	u711
  2016  020A  2A0C               	goto	u710
  2017  020B                     u711:
  2018  020B  2A59               	goto	l1772
  2019  020C                     u710:
  2020  020C                     l1754:
  2021  020C  01A5               	clrf	___lldiv@counter
  2022  020D  0AA5               	incf	___lldiv@counter,f
  2023  020E  2A1C               	goto	l1758
  2024  020F                     l1756:
  2025  020F  3001               	movlw	1
  2026  0210  00A0               	movwf	??___lldiv
  2027  0211                     u725:
  2028  0211  1003               	clrc
  2029  0212  0DF2               	rlf	___lldiv@divisor,f
  2030  0213  0DF3               	rlf	___lldiv@divisor+1,f
  2031  0214  0DF4               	rlf	___lldiv@divisor+2,f
  2032  0215  0DF5               	rlf	___lldiv@divisor+3,f
  2033  0216  0BA0               	decfsz	??___lldiv,f
  2034  0217  2A11               	goto	u725
  2035  0218  3001               	movlw	1
  2036  0219  00A0               	movwf	??___lldiv
  2037  021A  0820               	movf	??___lldiv,w
  2038  021B  07A5               	addwf	___lldiv@counter,f
  2039  021C                     l1758:
  2040  021C  1FF5               	btfss	___lldiv@divisor+3,7
  2041  021D  2A1F               	goto	u731
  2042  021E  2A20               	goto	u730
  2043  021F                     u731:
  2044  021F  2A0F               	goto	l1756
  2045  0220                     u730:
  2046  0220                     l1760:
  2047  0220  3001               	movlw	1
  2048  0221  00A0               	movwf	??___lldiv
  2049  0222                     u745:
  2050  0222  1003               	clrc
  2051  0223  0DA1               	rlf	___lldiv@quotient,f
  2052  0224  0DA2               	rlf	___lldiv@quotient+1,f
  2053  0225  0DA3               	rlf	___lldiv@quotient+2,f
  2054  0226  0DA4               	rlf	___lldiv@quotient+3,f
  2055  0227  0BA0               	decfsz	??___lldiv,f
  2056  0228  2A22               	goto	u745
  2057  0229                     l1762:
  2058  0229  0875               	movf	___lldiv@divisor+3,w
  2059  022A  0279               	subwf	___lldiv@dividend+3,w
  2060  022B  1D03               	skipz
  2061  022C  2A37               	goto	u755
  2062  022D  0874               	movf	___lldiv@divisor+2,w
  2063  022E  0278               	subwf	___lldiv@dividend+2,w
  2064  022F  1D03               	skipz
  2065  0230  2A37               	goto	u755
  2066  0231  0873               	movf	___lldiv@divisor+1,w
  2067  0232  0277               	subwf	___lldiv@dividend+1,w
  2068  0233  1D03               	skipz
  2069  0234  2A37               	goto	u755
  2070  0235  0872               	movf	___lldiv@divisor,w
  2071  0236  0276               	subwf	___lldiv@dividend,w
  2072  0237                     u755:
  2073  0237  1C03               	skipc
  2074  0238  2A3A               	goto	u751
  2075  0239  2A3B               	goto	u750
  2076  023A                     u751:
  2077  023A  2A4A               	goto	l1768
  2078  023B                     u750:
  2079  023B                     l1764:
  2080  023B  0872               	movf	___lldiv@divisor,w
  2081  023C  02F6               	subwf	___lldiv@dividend,f
  2082  023D  0873               	movf	___lldiv@divisor+1,w
  2083  023E  1C03               	skipc
  2084  023F  0F73               	incfsz	___lldiv@divisor+1,w
  2085  0240  02F7               	subwf	___lldiv@dividend+1,f
  2086  0241  0874               	movf	___lldiv@divisor+2,w
  2087  0242  1C03               	skipc
  2088  0243  0F74               	incfsz	___lldiv@divisor+2,w
  2089  0244  02F8               	subwf	___lldiv@dividend+2,f
  2090  0245  0875               	movf	___lldiv@divisor+3,w
  2091  0246  1C03               	skipc
  2092  0247  0F75               	incfsz	___lldiv@divisor+3,w
  2093  0248  02F9               	subwf	___lldiv@dividend+3,f
  2094  0249                     l1766:
  2095  0249  1421               	bsf	___lldiv@quotient,0
  2096  024A                     l1768:
  2097  024A  3001               	movlw	1
  2098  024B                     u765:
  2099  024B  1003               	clrc
  2100  024C  0CF5               	rrf	___lldiv@divisor+3,f
  2101  024D  0CF4               	rrf	___lldiv@divisor+2,f
  2102  024E  0CF3               	rrf	___lldiv@divisor+1,f
  2103  024F  0CF2               	rrf	___lldiv@divisor,f
  2104  0250  3EFF               	addlw	-1
  2105  0251  1D03               	skipz
  2106  0252  2A4B               	goto	u765
  2107  0253                     l1770:
  2108  0253  3001               	movlw	1
  2109  0254  02A5               	subwf	___lldiv@counter,f
  2110  0255  1D03               	btfss	3,2
  2111  0256  2A58               	goto	u771
  2112  0257  2A59               	goto	u770
  2113  0258                     u771:
  2114  0258  2A20               	goto	l1760
  2115  0259                     u770:
  2116  0259                     l1772:
  2117  0259  0824               	movf	___lldiv@quotient+3,w
  2118  025A  00F5               	movwf	?___lldiv+3
  2119  025B  0823               	movf	___lldiv@quotient+2,w
  2120  025C  00F4               	movwf	?___lldiv+2
  2121  025D  0822               	movf	___lldiv@quotient+1,w
  2122  025E  00F3               	movwf	?___lldiv+1
  2123  025F  0821               	movf	___lldiv@quotient,w
  2124  0260  00F2               	movwf	?___lldiv
  2125  0261                     l434:
  2126  0261  0008               	return
  2127  0262                     __end_of___lldiv:
  2128                           
  2129                           	psect	text8
  2130  03F5                     __ptext8:	
  2131 ;; *************** function _Lcd_Write_String *****************
  2132 ;; Defined at:
  2133 ;;		line 77 in file "LCD8bits.c"
  2134 ;; Parameters:    Size  Location     Type
  2135 ;;  a               1    wreg     PTR unsigned char 
  2136 ;;		 -> STR_4(3), STR_3(2), STR_2(17), 
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;  a               1    9[COMMON] PTR unsigned char 
  2139 ;;		 -> STR_4(3), STR_3(2), STR_2(17), 
  2140 ;;  i               2    7[COMMON] int 
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  1    wreg      void 
  2143 ;; Registers used:
  2144 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2150 ;;      Params:         0       0       0       0       0
  2151 ;;      Locals:         3       0       0       0       0
  2152 ;;      Temps:          0       0       0       0       0
  2153 ;;      Totals:         3       0       0       0       0
  2154 ;;Total ram usage:        3 bytes
  2155 ;; Hardware stack levels used: 1
  2156 ;; Hardware stack levels required when called: 3
  2157 ;; This function calls:
  2158 ;;		_Lcd_Write_Char
  2159 ;; This function is called by:
  2160 ;;		_main
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           
  2165                           ;psect for function _Lcd_Write_String
  2166  03F5                     _Lcd_Write_String:
  2167                           
  2168                           ;incstack = 0
  2169                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2170                           ;Lcd_Write_String@a stored from wreg
  2171  03F5  00F9               	movwf	Lcd_Write_String@a
  2172  03F6                     l1642:
  2173                           
  2174                           ;LCD8bits.c: 78:     int i;;LCD8bits.c: 79:     for (i = 0; a[i] != '\0'; i++)
  2175  03F6  01F7               	clrf	Lcd_Write_String@i
  2176  03F7  01F8               	clrf	Lcd_Write_String@i+1
  2177  03F8  2C0C               	goto	l1648
  2178  03F9                     l1644:
  2179                           
  2180                           ;LCD8bits.c: 80:         Lcd_Write_Char(a[i]);
  2181  03F9  0877               	movf	Lcd_Write_String@i,w
  2182  03FA  0779               	addwf	Lcd_Write_String@a,w
  2183  03FB  0084               	movwf	4
  2184  03FC  120A  118A  241A  120A  118A  	fcall	stringdir
  2185  0401  120A  118A  2438  120A  118A  	fcall	_Lcd_Write_Char
  2186  0406                     l1646:
  2187  0406  3001               	movlw	1
  2188  0407  07F7               	addwf	Lcd_Write_String@i,f
  2189  0408  1803               	skipnc
  2190  0409  0AF8               	incf	Lcd_Write_String@i+1,f
  2191  040A  3000               	movlw	0
  2192  040B  07F8               	addwf	Lcd_Write_String@i+1,f
  2193  040C                     l1648:
  2194  040C  0877               	movf	Lcd_Write_String@i,w
  2195  040D  0779               	addwf	Lcd_Write_String@a,w
  2196  040E  0084               	movwf	4
  2197  040F  120A  118A  241A  120A  118A  	fcall	stringdir
  2198  0414  3A00               	xorlw	0
  2199  0415  1D03               	skipz
  2200  0416  2C18               	goto	u701
  2201  0417  2C19               	goto	u700
  2202  0418                     u701:
  2203  0418  2BF9               	goto	l1644
  2204  0419                     u700:
  2205  0419                     l306:
  2206  0419  0008               	return
  2207  041A                     __end_of_Lcd_Write_String:
  2208                           
  2209                           	psect	text9
  2210  0438                     __ptext9:	
  2211 ;; *************** function _Lcd_Write_Char *****************
  2212 ;; Defined at:
  2213 ;;		line 65 in file "LCD8bits.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  a               1    wreg     unsigned char 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  a               1    4[COMMON] unsigned char 
  2218 ;;  y               1    6[COMMON] unsigned char 
  2219 ;;  temp            1    5[COMMON] unsigned char 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      void 
  2222 ;; Registers used:
  2223 ;;		wreg, status,2, status,0, pclath, cstack
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2229 ;;      Params:         0       0       0       0       0
  2230 ;;      Locals:         3       0       0       0       0
  2231 ;;      Temps:          1       0       0       0       0
  2232 ;;      Totals:         4       0       0       0       0
  2233 ;;Total ram usage:        4 bytes
  2234 ;; Hardware stack levels used: 1
  2235 ;; Hardware stack levels required when called: 2
  2236 ;; This function calls:
  2237 ;;		_Lcd_Port
  2238 ;; This function is called by:
  2239 ;;		_main
  2240 ;;		_Lcd_Write_String
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           
  2245                           ;psect for function _Lcd_Write_Char
  2246  0438                     _Lcd_Write_Char:
  2247                           
  2248                           ;incstack = 0
  2249                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2250                           ;Lcd_Write_Char@a stored from wreg
  2251  0438  00F4               	movwf	Lcd_Write_Char@a
  2252  0439                     l1474:
  2253                           
  2254                           ;LCD8bits.c: 66:     char temp, y;;LCD8bits.c: 67:     temp = a;
  2255  0439  0874               	movf	Lcd_Write_Char@a,w
  2256  043A  00F3               	movwf	??_Lcd_Write_Char
  2257  043B  0873               	movf	??_Lcd_Write_Char,w
  2258  043C  00F5               	movwf	Lcd_Write_Char@temp
  2259                           
  2260                           ;LCD8bits.c: 68:     y = temp;
  2261  043D  0875               	movf	Lcd_Write_Char@temp,w
  2262  043E  00F3               	movwf	??_Lcd_Write_Char
  2263  043F  0873               	movf	??_Lcd_Write_Char,w
  2264  0440  00F6               	movwf	Lcd_Write_Char@y
  2265  0441                     l1476:
  2266                           
  2267                           ;LCD8bits.c: 69:     RE0 = 1;
  2268  0441  1283               	bcf	3,5	;RP0=0, select bank0
  2269  0442  1303               	bcf	3,6	;RP1=0, select bank0
  2270  0443  1409               	bsf	9,0	;volatile
  2271  0444                     l1478:
  2272                           
  2273                           ;LCD8bits.c: 70:     Lcd_Port(y);
  2274  0444  0876               	movf	Lcd_Write_Char@y,w
  2275  0445  120A  118A  24C4  120A  118A  	fcall	_Lcd_Port
  2276  044A                     l1480:
  2277                           
  2278                           ;LCD8bits.c: 71:     RE1 = 1;
  2279  044A  1283               	bcf	3,5	;RP0=0, select bank0
  2280  044B  1303               	bcf	3,6	;RP1=0, select bank0
  2281  044C  1489               	bsf	9,1	;volatile
  2282  044D                     l1482:
  2283                           
  2284                           ;LCD8bits.c: 72:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2285  044D  301A               	movlw	26
  2286  044E  00F3               	movwf	??_Lcd_Write_Char
  2287  044F                     u967:
  2288  044F  0BF3               	decfsz	??_Lcd_Write_Char,f
  2289  0450  2C4F               	goto	u967
  2290  0451  0000               	nop
  2291  0452                     l1484:
  2292                           
  2293                           ;LCD8bits.c: 73:     RE1 = 0;
  2294  0452  1283               	bcf	3,5	;RP0=0, select bank0
  2295  0453  1303               	bcf	3,6	;RP1=0, select bank0
  2296  0454  1089               	bcf	9,1	;volatile
  2297  0455                     l300:
  2298  0455  0008               	return
  2299  0456                     __end_of_Lcd_Write_Char:
  2300                           
  2301                           	psect	text10
  2302  02BE                     __ptext10:	
  2303 ;; *************** function _Lcd_Set_Cursor *****************
  2304 ;; Defined at:
  2305 ;;		line 30 in file "LCD8bits.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;  a               1    wreg     unsigned char 
  2308 ;;  b               1    6[COMMON] unsigned char 
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;  a               1    0[BANK0 ] unsigned char 
  2311 ;;  temp            1    3[BANK0 ] unsigned char 
  2312 ;;  y               1    2[BANK0 ] unsigned char 
  2313 ;;  z               1    1[BANK0 ] unsigned char 
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  1    wreg      void 
  2316 ;; Registers used:
  2317 ;;		wreg, status,2, status,0, pclath, cstack
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2323 ;;      Params:         1       0       0       0       0
  2324 ;;      Locals:         0       4       0       0       0
  2325 ;;      Temps:          2       0       0       0       0
  2326 ;;      Totals:         3       4       0       0       0
  2327 ;;Total ram usage:        7 bytes
  2328 ;; Hardware stack levels used: 1
  2329 ;; Hardware stack levels required when called: 3
  2330 ;; This function calls:
  2331 ;;		_Lcd_Cmd
  2332 ;; This function is called by:
  2333 ;;		_main
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           
  2338                           ;psect for function _Lcd_Set_Cursor
  2339  02BE                     _Lcd_Set_Cursor:
  2340                           
  2341                           ;incstack = 0
  2342                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2343                           ;Lcd_Set_Cursor@a stored from wreg
  2344  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2345  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  2346  02C0  00A0               	movwf	Lcd_Set_Cursor@a
  2347  02C1                     l1622:
  2348                           
  2349                           ;LCD8bits.c: 31:     char temp, z, y;;LCD8bits.c: 32:     if (a == 1) {
  2350  02C1  0320               	decf	Lcd_Set_Cursor@a,w
  2351  02C2  1D03               	btfss	3,2
  2352  02C3  2AC5               	goto	u661
  2353  02C4  2AC6               	goto	u660
  2354  02C5                     u661:
  2355  02C5  2AEB               	goto	l1632
  2356  02C6                     u660:
  2357  02C6                     l1624:
  2358                           
  2359                           ;LCD8bits.c: 33:         temp = 0x80 + b - 1;
  2360  02C6  0876               	movf	Lcd_Set_Cursor@b,w
  2361  02C7  3E7F               	addlw	127
  2362  02C8  00F7               	movwf	??_Lcd_Set_Cursor
  2363  02C9  0877               	movf	??_Lcd_Set_Cursor,w
  2364  02CA  00A3               	movwf	Lcd_Set_Cursor@temp
  2365                           
  2366                           ;LCD8bits.c: 34:         z = temp >> 4;
  2367  02CB  0823               	movf	Lcd_Set_Cursor@temp,w
  2368  02CC  00F7               	movwf	??_Lcd_Set_Cursor
  2369  02CD  3004               	movlw	4
  2370  02CE                     u675:
  2371  02CE  1003               	clrc
  2372  02CF  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2373  02D0  3EFF               	addlw	-1
  2374  02D1  1D03               	skipz
  2375  02D2  2ACE               	goto	u675
  2376  02D3  0877               	movf	??_Lcd_Set_Cursor,w
  2377  02D4  00F8               	movwf	??_Lcd_Set_Cursor+1
  2378  02D5  0878               	movf	??_Lcd_Set_Cursor+1,w
  2379  02D6  00A1               	movwf	Lcd_Set_Cursor@z
  2380  02D7                     l1626:
  2381                           
  2382                           ;LCD8bits.c: 35:         y = temp & 0x0F;
  2383  02D7  0823               	movf	Lcd_Set_Cursor@temp,w
  2384  02D8  390F               	andlw	15
  2385  02D9  00F7               	movwf	??_Lcd_Set_Cursor
  2386  02DA  0877               	movf	??_Lcd_Set_Cursor,w
  2387  02DB  00A2               	movwf	Lcd_Set_Cursor@y
  2388  02DC                     l1628:
  2389                           
  2390                           ;LCD8bits.c: 36:         Lcd_Cmd(z);
  2391  02DC  0821               	movf	Lcd_Set_Cursor@z,w
  2392  02DD  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  2393  02E2                     l1630:
  2394                           
  2395                           ;LCD8bits.c: 37:         Lcd_Cmd(y);
  2396  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  2397  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  2398  02E4  0822               	movf	Lcd_Set_Cursor@y,w
  2399  02E5  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  2400                           
  2401                           ;LCD8bits.c: 38:     } else if (a == 2) {
  2402  02EA  2B15               	goto	l294
  2403  02EB                     l1632:
  2404  02EB  3002               	movlw	2
  2405  02EC  0620               	xorwf	Lcd_Set_Cursor@a,w
  2406  02ED  1D03               	btfss	3,2
  2407  02EE  2AF0               	goto	u681
  2408  02EF  2AF1               	goto	u680
  2409  02F0                     u681:
  2410  02F0  2B15               	goto	l294
  2411  02F1                     u680:
  2412  02F1                     l1634:
  2413                           
  2414                           ;LCD8bits.c: 39:         temp = 0xC0 + b - 1;
  2415  02F1  0876               	movf	Lcd_Set_Cursor@b,w
  2416  02F2  3EBF               	addlw	191
  2417  02F3  00F7               	movwf	??_Lcd_Set_Cursor
  2418  02F4  0877               	movf	??_Lcd_Set_Cursor,w
  2419  02F5  00A3               	movwf	Lcd_Set_Cursor@temp
  2420                           
  2421                           ;LCD8bits.c: 40:         z = temp >> 4;
  2422  02F6  0823               	movf	Lcd_Set_Cursor@temp,w
  2423  02F7  00F7               	movwf	??_Lcd_Set_Cursor
  2424  02F8  3004               	movlw	4
  2425  02F9                     u695:
  2426  02F9  1003               	clrc
  2427  02FA  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2428  02FB  3EFF               	addlw	-1
  2429  02FC  1D03               	skipz
  2430  02FD  2AF9               	goto	u695
  2431  02FE  0877               	movf	??_Lcd_Set_Cursor,w
  2432  02FF  00F8               	movwf	??_Lcd_Set_Cursor+1
  2433  0300  0878               	movf	??_Lcd_Set_Cursor+1,w
  2434  0301  00A1               	movwf	Lcd_Set_Cursor@z
  2435  0302                     l1636:
  2436                           
  2437                           ;LCD8bits.c: 41:         y = temp & 0xF0;
  2438  0302  0823               	movf	Lcd_Set_Cursor@temp,w
  2439  0303  39F0               	andlw	240
  2440  0304  00F7               	movwf	??_Lcd_Set_Cursor
  2441  0305  0877               	movf	??_Lcd_Set_Cursor,w
  2442  0306  00A2               	movwf	Lcd_Set_Cursor@y
  2443  0307                     l1638:
  2444                           
  2445                           ;LCD8bits.c: 42:         Lcd_Cmd(z);
  2446  0307  0821               	movf	Lcd_Set_Cursor@z,w
  2447  0308  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  2448  030D                     l1640:
  2449                           
  2450                           ;LCD8bits.c: 43:         Lcd_Cmd(y);
  2451  030D  1283               	bcf	3,5	;RP0=0, select bank0
  2452  030E  1303               	bcf	3,6	;RP1=0, select bank0
  2453  030F  0822               	movf	Lcd_Set_Cursor@y,w
  2454  0310  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  2455  0315                     l294:
  2456  0315  0008               	return
  2457  0316                     __end_of_Lcd_Set_Cursor:
  2458                           
  2459                           	psect	text11
  2460  0316                     __ptext11:	
  2461 ;; *************** function _Lcd_Init *****************
  2462 ;; Defined at:
  2463 ;;		line 47 in file "LCD8bits.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;		None
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;		None
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		wreg, status,2, status,0, pclath, cstack
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2477 ;;      Params:         0       0       0       0       0
  2478 ;;      Locals:         0       0       0       0       0
  2479 ;;      Temps:          2       0       0       0       0
  2480 ;;      Totals:         2       0       0       0       0
  2481 ;;Total ram usage:        2 bytes
  2482 ;; Hardware stack levels used: 1
  2483 ;; Hardware stack levels required when called: 3
  2484 ;; This function calls:
  2485 ;;		_Lcd_Cmd
  2486 ;;		_Lcd_Port
  2487 ;; This function is called by:
  2488 ;;		_main
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492                           
  2493                           ;psect for function _Lcd_Init
  2494  0316                     _Lcd_Init:
  2495  0316                     l1610:	
  2496                           ;incstack = 0
  2497                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2498                           
  2499                           
  2500                           ;LCD8bits.c: 48:     Lcd_Port(0x00);
  2501  0316  3000               	movlw	0
  2502  0317  120A  118A  24C4  120A  118A  	fcall	_Lcd_Port
  2503  031C                     l1612:
  2504                           
  2505                           ;LCD8bits.c: 49:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2506  031C  3034               	movlw	52
  2507  031D  00F7               	movwf	??_Lcd_Init+1
  2508  031E  30F1               	movlw	241
  2509  031F  00F6               	movwf	??_Lcd_Init
  2510  0320                     u977:
  2511  0320  0BF6               	decfsz	??_Lcd_Init,f
  2512  0321  2B20               	goto	u977
  2513  0322  0BF7               	decfsz	??_Lcd_Init+1,f
  2514  0323  2B20               	goto	u977
  2515  0324  2B25               	nop2
  2516  0325                     l1614:
  2517                           
  2518                           ;LCD8bits.c: 50:     Lcd_Cmd(0x30);
  2519  0325  3030               	movlw	48
  2520  0326  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  2521                           
  2522                           ;LCD8bits.c: 51:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2523  032B  300D               	movlw	13
  2524  032C  00F7               	movwf	??_Lcd_Init+1
  2525  032D  30FB               	movlw	251
  2526  032E  00F6               	movwf	??_Lcd_Init
  2527  032F                     u987:
  2528  032F  0BF6               	decfsz	??_Lcd_Init,f
  2529  0330  2B2F               	goto	u987
  2530  0331  0BF7               	decfsz	??_Lcd_Init+1,f
  2531  0332  2B2F               	goto	u987
  2532  0333  2B34               	nop2
  2533  0334                     l1616:
  2534                           
  2535                           ;LCD8bits.c: 52:     Lcd_Cmd(0x30);
  2536  0334  3030               	movlw	48
  2537  0335  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  2538  033A                     l1618:
  2539                           
  2540                           ;LCD8bits.c: 53:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  2541  033A  3085               	movlw	133
  2542  033B  00F6               	movwf	??_Lcd_Init
  2543  033C                     u997:
  2544  033C  0BF6               	decfsz	??_Lcd_Init,f
  2545  033D  2B3C               	goto	u997
  2546                           
  2547                           ;LCD8bits.c: 54:     Lcd_Cmd(0x30);
  2548  033E  3030               	movlw	48
  2549  033F  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  2550                           
  2551                           ;LCD8bits.c: 56:     Lcd_Cmd(0x3C);
  2552  0344  303C               	movlw	60
  2553  0345  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  2554                           
  2555                           ;LCD8bits.c: 58:     Lcd_Cmd(0x08);
  2556  034A  3008               	movlw	8
  2557  034B  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  2558                           
  2559                           ;LCD8bits.c: 60:     Lcd_Cmd(0x01);
  2560  0350  3001               	movlw	1
  2561  0351  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  2562                           
  2563                           ;LCD8bits.c: 62:     Lcd_Cmd(0x06);
  2564  0356  3006               	movlw	6
  2565  0357  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  2566  035C                     l297:
  2567  035C  0008               	return
  2568  035D                     __end_of_Lcd_Init:
  2569                           
  2570                           	psect	text12
  2571  0487                     __ptext12:	
  2572 ;; *************** function _Lcd_Clear *****************
  2573 ;; Defined at:
  2574 ;;		line 25 in file "LCD8bits.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;		None
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;		None
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		wreg, status,2, status,0, pclath, cstack
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2588 ;;      Params:         0       0       0       0       0
  2589 ;;      Locals:         0       0       0       0       0
  2590 ;;      Temps:          0       0       0       0       0
  2591 ;;      Totals:         0       0       0       0       0
  2592 ;;Total ram usage:        0 bytes
  2593 ;; Hardware stack levels used: 1
  2594 ;; Hardware stack levels required when called: 3
  2595 ;; This function calls:
  2596 ;;		_Lcd_Cmd
  2597 ;; This function is called by:
  2598 ;;		_main
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           
  2603                           ;psect for function _Lcd_Clear
  2604  0487                     _Lcd_Clear:
  2605  0487                     l1620:	
  2606                           ;incstack = 0
  2607                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2608                           
  2609                           
  2610                           ;LCD8bits.c: 26:     Lcd_Cmd(0);
  2611  0487  3000               	movlw	0
  2612  0488  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  2613                           
  2614                           ;LCD8bits.c: 27:     Lcd_Cmd(1);
  2615  048D  3001               	movlw	1
  2616  048E  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  2617  0493                     l288:
  2618  0493  0008               	return
  2619  0494                     __end_of_Lcd_Clear:
  2620                           
  2621                           	psect	text13
  2622  0456                     __ptext13:	
  2623 ;; *************** function _Lcd_Cmd *****************
  2624 ;; Defined at:
  2625 ;;		line 17 in file "LCD8bits.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  a               1    wreg     unsigned char 
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;  a               1    5[COMMON] unsigned char 
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  1    wreg      void 
  2632 ;; Registers used:
  2633 ;;		wreg, status,2, status,0, pclath, cstack
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2639 ;;      Params:         0       0       0       0       0
  2640 ;;      Locals:         1       0       0       0       0
  2641 ;;      Temps:          2       0       0       0       0
  2642 ;;      Totals:         3       0       0       0       0
  2643 ;;Total ram usage:        3 bytes
  2644 ;; Hardware stack levels used: 1
  2645 ;; Hardware stack levels required when called: 2
  2646 ;; This function calls:
  2647 ;;		_Lcd_Port
  2648 ;; This function is called by:
  2649 ;;		_Lcd_Clear
  2650 ;;		_Lcd_Set_Cursor
  2651 ;;		_Lcd_Init
  2652 ;;		_Lcd_Shift_Right
  2653 ;;		_Lcd_Shift_Left
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           
  2658                           ;psect for function _Lcd_Cmd
  2659  0456                     _Lcd_Cmd:
  2660                           
  2661                           ;incstack = 0
  2662                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2663                           ;Lcd_Cmd@a stored from wreg
  2664  0456  00F5               	movwf	Lcd_Cmd@a
  2665  0457                     l1486:
  2666                           
  2667                           ;LCD8bits.c: 18:     RE0 = 0;
  2668  0457  1283               	bcf	3,5	;RP0=0, select bank0
  2669  0458  1303               	bcf	3,6	;RP1=0, select bank0
  2670  0459  1009               	bcf	9,0	;volatile
  2671  045A                     l1488:
  2672                           
  2673                           ;LCD8bits.c: 19:     Lcd_Port(a);
  2674  045A  0875               	movf	Lcd_Cmd@a,w
  2675  045B  120A  118A  24C4  120A  118A  	fcall	_Lcd_Port
  2676  0460                     l1490:
  2677                           
  2678                           ;LCD8bits.c: 20:     RE1 = 1;
  2679  0460  1283               	bcf	3,5	;RP0=0, select bank0
  2680  0461  1303               	bcf	3,6	;RP1=0, select bank0
  2681  0462  1489               	bsf	9,1	;volatile
  2682  0463                     l1492:
  2683                           
  2684                           ;LCD8bits.c: 21:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2685  0463  300B               	movlw	11
  2686  0464  00F4               	movwf	??_Lcd_Cmd+1
  2687  0465  3062               	movlw	98
  2688  0466  00F3               	movwf	??_Lcd_Cmd
  2689  0467                     u1007:
  2690  0467  0BF3               	decfsz	??_Lcd_Cmd,f
  2691  0468  2C67               	goto	u1007
  2692  0469  0BF4               	decfsz	??_Lcd_Cmd+1,f
  2693  046A  2C67               	goto	u1007
  2694  046B  0000               	nop
  2695  046C                     l1494:
  2696                           
  2697                           ;LCD8bits.c: 22:     RE1 = 0;
  2698  046C  1283               	bcf	3,5	;RP0=0, select bank0
  2699  046D  1303               	bcf	3,6	;RP1=0, select bank0
  2700  046E  1089               	bcf	9,1	;volatile
  2701  046F                     l285:
  2702  046F  0008               	return
  2703  0470                     __end_of_Lcd_Cmd:
  2704                           
  2705                           	psect	text14
  2706  04C4                     __ptext14:	
  2707 ;; *************** function _Lcd_Port *****************
  2708 ;; Defined at:
  2709 ;;		line 12 in file "LCD8bits.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;  a               1    wreg     unsigned char 
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;  a               1    2[COMMON] unsigned char 
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  1    wreg      void 
  2716 ;; Registers used:
  2717 ;;		wreg
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2723 ;;      Params:         0       0       0       0       0
  2724 ;;      Locals:         1       0       0       0       0
  2725 ;;      Temps:          0       0       0       0       0
  2726 ;;      Totals:         1       0       0       0       0
  2727 ;;Total ram usage:        1 bytes
  2728 ;; Hardware stack levels used: 1
  2729 ;; Hardware stack levels required when called: 1
  2730 ;; This function calls:
  2731 ;;		Nothing
  2732 ;; This function is called by:
  2733 ;;		_Lcd_Cmd
  2734 ;;		_Lcd_Init
  2735 ;;		_Lcd_Write_Char
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           
  2740                           ;psect for function _Lcd_Port
  2741  04C4                     _Lcd_Port:
  2742                           
  2743                           ;incstack = 0
  2744                           ; Regs used in _Lcd_Port: [wreg]
  2745                           ;Lcd_Port@a stored from wreg
  2746  04C4  00F2               	movwf	Lcd_Port@a
  2747  04C5                     l1422:
  2748                           
  2749                           ;LCD8bits.c: 13:     PORTD = a;
  2750  04C5  0872               	movf	Lcd_Port@a,w
  2751  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2752  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2753  04C8  0088               	movwf	8	;volatile
  2754  04C9                     l282:
  2755  04C9  0008               	return
  2756  04CA                     __end_of_Lcd_Port:
  2757                           
  2758                           	psect	text15
  2759  04A1                     __ptext15:	
  2760 ;; *************** function _I2C_Master_Write *****************
  2761 ;; Defined at:
  2762 ;;		line 65 in file "I2C.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  d               2    2[COMMON] unsigned int 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;		None
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      void 
  2769 ;; Registers used:
  2770 ;;		wreg, status,2, status,0, pclath, cstack
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2776 ;;      Params:         2       0       0       0       0
  2777 ;;      Locals:         0       0       0       0       0
  2778 ;;      Temps:          0       0       0       0       0
  2779 ;;      Totals:         2       0       0       0       0
  2780 ;;Total ram usage:        2 bytes
  2781 ;; Hardware stack levels used: 1
  2782 ;; Hardware stack levels required when called: 2
  2783 ;; This function calls:
  2784 ;;		_I2C_Master_Wait
  2785 ;; This function is called by:
  2786 ;;		_main
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           
  2791                           ;psect for function _I2C_Master_Write
  2792  04A1                     _I2C_Master_Write:
  2793  04A1                     l1562:	
  2794                           ;incstack = 0
  2795                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2796                           
  2797                           
  2798                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2799  04A1  120A  118A  2494  120A  118A  	fcall	_I2C_Master_Wait
  2800  04A6                     l1564:
  2801                           
  2802                           ;I2C.c: 68:     SSPBUF = d;
  2803  04A6  0872               	movf	I2C_Master_Write@d,w
  2804  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  2805  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  2806  04A9  0093               	movwf	19	;volatile
  2807  04AA                     l47:
  2808  04AA  0008               	return
  2809  04AB                     __end_of_I2C_Master_Write:
  2810                           
  2811                           	psect	text16
  2812  04AB                     __ptext16:	
  2813 ;; *************** function _I2C_Master_Stop *****************
  2814 ;; Defined at:
  2815 ;;		line 55 in file "I2C.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;		None
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;		None
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  1    wreg      void 
  2822 ;; Registers used:
  2823 ;;		wreg, status,2, status,0, pclath, cstack
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2829 ;;      Params:         0       0       0       0       0
  2830 ;;      Locals:         0       0       0       0       0
  2831 ;;      Temps:          0       0       0       0       0
  2832 ;;      Totals:         0       0       0       0       0
  2833 ;;Total ram usage:        0 bytes
  2834 ;; Hardware stack levels used: 1
  2835 ;; Hardware stack levels required when called: 2
  2836 ;; This function calls:
  2837 ;;		_I2C_Master_Wait
  2838 ;; This function is called by:
  2839 ;;		_main
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           
  2844                           ;psect for function _I2C_Master_Stop
  2845  04AB                     _I2C_Master_Stop:
  2846  04AB                     l1558:	
  2847                           ;incstack = 0
  2848                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2849                           
  2850                           
  2851                           ;I2C.c: 57:     I2C_Master_Wait();
  2852  04AB  120A  118A  2494  120A  118A  	fcall	_I2C_Master_Wait
  2853  04B0                     l1560:
  2854                           
  2855                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2856  04B0  1683               	bsf	3,5	;RP0=1, select bank1
  2857  04B1  1303               	bcf	3,6	;RP1=0, select bank1
  2858  04B2  1511               	bsf	17,2	;volatile
  2859  04B3                     l44:
  2860  04B3  0008               	return
  2861  04B4                     __end_of_I2C_Master_Stop:
  2862                           
  2863                           	psect	text17
  2864  04B4                     __ptext17:	
  2865 ;; *************** function _I2C_Master_Start *****************
  2866 ;; Defined at:
  2867 ;;		line 39 in file "I2C.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;		None
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;		None
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  1    wreg      void 
  2874 ;; Registers used:
  2875 ;;		wreg, status,2, status,0, pclath, cstack
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2881 ;;      Params:         0       0       0       0       0
  2882 ;;      Locals:         0       0       0       0       0
  2883 ;;      Temps:          0       0       0       0       0
  2884 ;;      Totals:         0       0       0       0       0
  2885 ;;Total ram usage:        0 bytes
  2886 ;; Hardware stack levels used: 1
  2887 ;; Hardware stack levels required when called: 2
  2888 ;; This function calls:
  2889 ;;		_I2C_Master_Wait
  2890 ;; This function is called by:
  2891 ;;		_main
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           
  2896                           ;psect for function _I2C_Master_Start
  2897  04B4                     _I2C_Master_Start:
  2898  04B4                     l1554:	
  2899                           ;incstack = 0
  2900                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2901                           
  2902                           
  2903                           ;I2C.c: 41:     I2C_Master_Wait();
  2904  04B4  120A  118A  2494  120A  118A  	fcall	_I2C_Master_Wait
  2905  04B9                     l1556:
  2906                           
  2907                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2908  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  2909  04BA  1303               	bcf	3,6	;RP1=0, select bank1
  2910  04BB  1411               	bsf	17,0	;volatile
  2911  04BC                     l38:
  2912  04BC  0008               	return
  2913  04BD                     __end_of_I2C_Master_Start:
  2914                           
  2915                           	psect	text18
  2916  03C7                     __ptext18:	
  2917 ;; *************** function _I2C_Master_Read *****************
  2918 ;; Defined at:
  2919 ;;		line 74 in file "I2C.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  a               2    2[COMMON] unsigned short 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  temp            2    6[COMMON] unsigned short 
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  2    2[COMMON] unsigned short 
  2926 ;; Registers used:
  2927 ;;		wreg, status,2, status,0, pclath, cstack
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2933 ;;      Params:         2       0       0       0       0
  2934 ;;      Locals:         2       0       0       0       0
  2935 ;;      Temps:          2       0       0       0       0
  2936 ;;      Totals:         6       0       0       0       0
  2937 ;;Total ram usage:        6 bytes
  2938 ;; Hardware stack levels used: 1
  2939 ;; Hardware stack levels required when called: 2
  2940 ;; This function calls:
  2941 ;;		_I2C_Master_Wait
  2942 ;; This function is called by:
  2943 ;;		_main
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           
  2948                           ;psect for function _I2C_Master_Read
  2949  03C7                     _I2C_Master_Read:
  2950  03C7                     l1566:	
  2951                           ;incstack = 0
  2952                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2953                           
  2954                           
  2955                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2956  03C7  120A  118A  2494  120A  118A  	fcall	_I2C_Master_Wait
  2957  03CC                     l1568:
  2958                           
  2959                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2960  03CC  1683               	bsf	3,5	;RP0=1, select bank1
  2961  03CD  1303               	bcf	3,6	;RP1=0, select bank1
  2962  03CE  1591               	bsf	17,3	;volatile
  2963                           
  2964                           ;I2C.c: 79:     I2C_Master_Wait();
  2965  03CF  120A  118A  2494  120A  118A  	fcall	_I2C_Master_Wait
  2966  03D4                     l1570:
  2967                           
  2968                           ;I2C.c: 80:     temp = SSPBUF;
  2969  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  2970  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  2971  03D6  0813               	movf	19,w	;volatile
  2972  03D7  00F4               	movwf	??_I2C_Master_Read
  2973  03D8  01F5               	clrf	??_I2C_Master_Read+1
  2974  03D9  0874               	movf	??_I2C_Master_Read,w
  2975  03DA  00F6               	movwf	I2C_Master_Read@temp
  2976  03DB  0875               	movf	??_I2C_Master_Read+1,w
  2977  03DC  00F7               	movwf	I2C_Master_Read@temp+1
  2978  03DD                     l1572:
  2979                           
  2980                           ;I2C.c: 81:     I2C_Master_Wait();
  2981  03DD  120A  118A  2494  120A  118A  	fcall	_I2C_Master_Wait
  2982  03E2                     l1574:
  2983                           
  2984                           ;I2C.c: 82:     if(a == 1){
  2985  03E2  0372               	decf	I2C_Master_Read@a,w
  2986  03E3  0473               	iorwf	I2C_Master_Read@a+1,w
  2987  03E4  1D03               	btfss	3,2
  2988  03E5  2BE7               	goto	u651
  2989  03E6  2BE8               	goto	u650
  2990  03E7                     u651:
  2991  03E7  2BEC               	goto	l50
  2992  03E8                     u650:
  2993  03E8                     l1576:
  2994                           
  2995                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2996  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  2997  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  2998  03EA  1291               	bcf	17,5	;volatile
  2999                           
  3000                           ;I2C.c: 84:     }else{
  3001  03EB  2BEF               	goto	l51
  3002  03EC                     l50:
  3003                           
  3004                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3005  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  3006  03ED  1303               	bcf	3,6	;RP1=0, select bank1
  3007  03EE  1691               	bsf	17,5	;volatile
  3008  03EF                     l51:	
  3009                           ;I2C.c: 86:     }
  3010                           
  3011                           
  3012                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3013  03EF  1611               	bsf	17,4	;volatile
  3014  03F0                     l1578:
  3015                           
  3016                           ;I2C.c: 88:     return temp;
  3017  03F0  0877               	movf	I2C_Master_Read@temp+1,w
  3018  03F1  00F3               	movwf	?_I2C_Master_Read+1
  3019  03F2  0876               	movf	I2C_Master_Read@temp,w
  3020  03F3  00F2               	movwf	?_I2C_Master_Read
  3021  03F4                     l52:
  3022  03F4  0008               	return
  3023  03F5                     __end_of_I2C_Master_Read:
  3024                           
  3025                           	psect	text19
  3026  0494                     __ptext19:	
  3027 ;; *************** function _I2C_Master_Wait *****************
  3028 ;; Defined at:
  3029 ;;		line 32 in file "I2C.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;		None
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;		None
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3043 ;;      Params:         0       0       0       0       0
  3044 ;;      Locals:         0       0       0       0       0
  3045 ;;      Temps:          0       0       0       0       0
  3046 ;;      Totals:         0       0       0       0       0
  3047 ;;Total ram usage:        0 bytes
  3048 ;; Hardware stack levels used: 1
  3049 ;; Hardware stack levels required when called: 1
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_I2C_Master_Start
  3054 ;;		_I2C_Master_Stop
  3055 ;;		_I2C_Master_Write
  3056 ;;		_I2C_Master_Read
  3057 ;;		_I2C_Master_RepeatedStart
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           
  3062                           ;psect for function _I2C_Master_Wait
  3063  0494                     _I2C_Master_Wait:
  3064  0494                     l1460:	
  3065                           ;incstack = 0
  3066                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3067                           
  3068  0494                     l32:	
  3069                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3070                           
  3071  0494  1683               	bsf	3,5	;RP0=1, select bank1
  3072  0495  1303               	bcf	3,6	;RP1=0, select bank1
  3073  0496  1914               	btfsc	20,2	;volatile
  3074  0497  2C99               	goto	u511
  3075  0498  2C9A               	goto	u510
  3076  0499                     u511:
  3077  0499  2C94               	goto	l32
  3078  049A                     u510:
  3079  049A                     l1462:
  3080  049A  0811               	movf	17,w	;volatile
  3081  049B  391F               	andlw	31
  3082  049C  1D03               	btfss	3,2
  3083  049D  2C9F               	goto	u521
  3084  049E  2CA0               	goto	u520
  3085  049F                     u521:
  3086  049F  2C94               	goto	l32
  3087  04A0                     u520:
  3088  04A0                     l35:
  3089  04A0  0008               	return
  3090  04A1                     __end_of_I2C_Master_Wait:
  3091                           
  3092                           	psect	text20
  3093  04BD                     __ptext20:	
  3094 ;; *************** function _isr *****************
  3095 ;; Defined at:
  3096 ;;		line 70 in file "MainL4Master.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;		None
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;		None
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      void 
  3103 ;; Registers used:
  3104 ;;		None
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3110 ;;      Params:         0       0       0       0       0
  3111 ;;      Locals:         0       0       0       0       0
  3112 ;;      Temps:          2       0       0       0       0
  3113 ;;      Totals:         2       0       0       0       0
  3114 ;;Total ram usage:        2 bytes
  3115 ;; Hardware stack levels used: 1
  3116 ;; This function calls:
  3117 ;;		Nothing
  3118 ;; This function is called by:
  3119 ;;		Interrupt level 1
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           
  3124                           ;psect for function _isr
  3125  04BD                     _isr:
  3126  04BD                     i1l257:
  3127  04BD  0871               	movf	??_isr+1,w
  3128  04BE  008A               	movwf	10
  3129  04BF  0E70               	swapf	??_isr,w
  3130  04C0  0083               	movwf	3
  3131  04C1  0EFE               	swapf	btemp,f
  3132  04C2  0E7E               	swapf	btemp,w
  3133  04C3  0009               	retfie
  3134  04C4                     __end_of_isr:
  3135  007E                     btemp	set	126	;btemp
  3136  007E                     wtemp0	set	126
  3137                           
  3138                           	psect	intentry
  3139  0004                     __pintentry:	
  3140                           ;incstack = 0
  3141                           ; Regs used in _isr: []
  3142                           
  3143  0004                     interrupt_function:
  3144  007E                     saved_w	set	btemp
  3145  0004  00FE               	movwf	btemp
  3146  0005  0E03               	swapf	3,w
  3147  0006  00F0               	movwf	??_isr
  3148  0007  080A               	movf	10,w
  3149  0008  00F1               	movwf	??_isr+1
  3150  0009  120A  118A  2CBD   	ljmp	_isr
  3151                           
  3152                           	psect	config
  3153                           
  3154                           ;Config register CONFIG1 @ 0x2007
  3155                           ;	Oscillator Selection bits
  3156                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3157                           ;	Watchdog Timer Enable bit
  3158                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3159                           ;	Power-up Timer Enable bit
  3160                           ;	PWRTE = OFF, PWRT disabled
  3161                           ;	RE3/MCLR pin function select bit
  3162                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3163                           ;	Code Protection bit
  3164                           ;	CP = OFF, Program memory code protection is disabled
  3165                           ;	Data Code Protection bit
  3166                           ;	CPD = OFF, Data memory code protection is disabled
  3167                           ;	Brown Out Reset Selection bits
  3168                           ;	BOREN = OFF, BOR disabled
  3169                           ;	Internal External Switchover bit
  3170                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3171                           ;	Fail-Safe Clock Monitor Enabled bit
  3172                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3173                           ;	Low Voltage Programming Enable bit
  3174                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3175                           ;	In-Circuit Debugger Mode bit
  3176                           ;	DEBUG = 0x1, unprogrammed default
  3177  2007                     	org	8199
  3178  2007  20D4               	dw	8404
  3179                           
  3180                           ;Config register CONFIG2 @ 0x2008
  3181                           ;	Brown-out Reset Selection bit
  3182                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3183                           ;	Flash Program Memory Self Write Enable bits
  3184                           ;	WRT = OFF, Write protection off
  3185  2008                     	org	8200
  3186  2008  3FFF               	dw	16383

Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     17      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[3]), STR_3(CODE[2]), STR_2(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _main->_voltASCII
    _voltASCII->___bmul
    ___bmul->___awdiv
    _I2C_Master_Init->___lldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _voltASCII->___bmul
    ___bmul->___awdiv
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3302
                                             14 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                              _setup
                          _voltASCII
 ---------------------------------------------------------------------------------
 (1) _voltASCII                                            5     5      0    1422
                                              9 COMMON     1     1      0
                                              6 BANK0      4     4      0
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     406
                                              7 COMMON     2     1      1
                                              4 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     985
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     564
                    _I2C_Master_Init
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     279
                                              7 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0      90
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     466
                                              6 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     174
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   _setup
     _I2C_Master_Init
       ___lldiv
     _initOsc
   _voltASCII
     ___awdiv
     ___bmul
       ___awdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      25       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      19       5       31.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      25      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Aug 09 15:58:49 2021

                        pc 0002             ___bmul@product 0024                         l32 0494  
                       l50 03EC                         l35 04A0                         l51 03EF  
                       l52 03F4                         l44 04B3                         l29 0394  
                       l38 04BC                         l47 04AA               ___awdiv@sign 0021  
                       fsr 0004                        l300 0455                        l150 027C  
                      l151 0282                        l152 0288                        l153 028E  
                      l145 0264                        l306 0419                        l154 0294  
                      l146 02BC                        l155 02BD                        l147 026A  
                      l148 0270                        l149 0276                        l271 0190  
                      l424 0486                        l282 04C9                        l434 0261  
                      l268 03C6                        l285 046F                        l294 0315  
                      l551 01F9                        l288 0493                        l297 035C  
                      _GIE 005F                        _RE0 0048                        _RE1 0049  
                      u510 049A                        u511 0499                        u520 04A0  
                      u521 049F                        u700 0419                        u701 0418  
                      u710 020C                        u711 020B                        u800 0485  
                      u801 0484                        u650 03E8                        u730 0220  
                      u810 0198                        u651 03E7                        u731 021F  
                      u811 0197                        u660 02C6                        u900 01F0  
                      u820 01A3                        u661 02C5                        u725 0211  
                      u901 01EF                        u821 01A2                        u750 023B  
                      u830 01B4                        u751 023A                        u831 01B3  
                      u680 02F1                        u681 02F0                        u745 0222  
                      u770 0259                        u850 01C6                        u675 02CE  
                      u771 0258                        u755 0237                        u851 01C5  
                      u780 0374                        u765 024B                        u845 01B8  
                      u917 004A                        u870 01D7                        u790 0478  
                      u695 02F9                        u871 01D6                        u791 0477  
                      u927 007A                        u785 036F                        u865 01C7  
                      u937 00AA                        u890 01EB                        u891 01EA  
                      u875 01D3                        u947 00EB                        u885 01DF  
                      u957 0100                        u967 044F                        u977 0320  
                      u987 032F                        u997 033C                        _isr 04BD  
                      fsr0 0004                       l1422 04C5                       l1610 0316  
                     l1460 0494                       l1620 0487                       l1612 031C  
                     l1462 049A                       l1614 0325                       l1630 02E2  
                     l1622 02C1                       l1560 04B0                       l1616 0334  
                     l1640 030D                       l1624 02C6                       l1632 02EB  
                     l1480 044A                       l1464 0263                       l1570 03D4  
                     l1554 04B4                       l1562 04A1                       l1490 0460  
                     l1618 033A                       l1634 02F1                       l1626 02D7  
                     l1482 044D                       l1474 0439                       l1642 03F6  
                     l1810 019F                       l1802 0191                       l1572 03DD  
                     l1556 04B9                       l1564 04A6                       l1492 0463  
                     l1636 0302                       l1628 02DC                       l1484 0452  
                     l1476 0441                       l1644 03F9                       l1468 029A  
                     l1820 01B4                       l1812 01A3                       l1804 0194  
                     l1900 002E                       l1574 03E2                       l1566 03C7  
                     l1558 04AB                       l1494 046C                       l1486 0457  
                     l1638 0307                       l1478 0444                       l1646 0406  
                     l1830 01D7                       l1822 01B7                       l1814 01A8  
                     l1806 0198                       l1910 005F                       l1902 0036  
                     l1576 03E8                       l1568 03CC                       l1488 045A  
                     l1648 040C                       l1760 0220                       l1752 01FA  
                     l1840 01F0                       l1832 01DD                       l1824 01BE  
                     l1816 01AC                       l1808 019D                       l1920 008F  
                     l1912 006D                       l1904 0042                       l1578 03F0  
                     l1770 0253                       l1762 0229                       l1754 020C  
                     l1850 03A1                       l1842 01F5                       l1834 01DE  
                     l1826 01C2                       l1818 01AE                       l1930 00C1  
                     l1922 009D                       l1914 0072                       l1906 0051  
                     l1764 023B                       l1756 020F                       l1772 0259  
                     l1780 0364                       l1860 03BB                       l1852 03A7  
                     l1836 01E5                       l1828 01C6                       l1940 00E3  
                     l1932 00C9                       l1924 00A2                       l1916 0081  
                     l1908 0056                       l1766 0249                       l1758 021C  
                     l1782 0391                       l1870 03C4                       l1862 03BC  
                     l1854 03B6                       l1846 0395                       l1838 01EB  
                     l1790 0474                       l1942 00F2                       l1934 00CF  
                     l1926 00B1                       l1918 0086                       l1768 024A  
                     l1784 0392                       l1776 035D                       l1872 03C5  
                     l1864 03BD                       l1856 03B9                       l1848 039F  
                     l1792 0478                       l1880 0147                       l1944 00F6  
                     l1936 00D5                       l1928 00B9                       l1786 0393  
                     l1778 0361                       l1866 03C0                       l1858 03BA  
                     l1794 047C                       l1890 0186                       l1882 0157  
                     l1874 010C                       l1946 00F8                       l1938 00DD  
                     l1868 03C1                       l1796 047E                       l1788 0473  
                     l1892 018B                       l1884 016D                       l1876 0112  
                     l1798 0485                       l1886 017D                       l1878 0131  
                     l1894 001F                       l1968 02A2                       l1888 0181  
                     l1896 0024                       l1898 0029                       ?_isr 0070  
                     STR_1 0436                       STR_2 0420                       STR_3 0434  
                     STR_4 0431                       u1007 0467                       _IOCB 0096  
                     _PIE1 008C                       _PIE2 008D                       _PEIE 005E  
                     _PIR1 000C                       _PIR2 000D                       _WPUB 0095  
        ?_Lcd_Write_String 0070                       _cont 0033                       _main 001F  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0077  
          __end_of_Lcd_Cmd 0470          ___bmul@multiplier 0025                      ??_isr 0070  
         ?_I2C_Master_Init 0026           ?_I2C_Master_Read 0072           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070                      ?_main 0070            __end_of___awdiv 01FA  
                    _ANSEL 0188            __end_of___lldiv 0262            ___awdiv@divisor 0072  
                    i1l257 04BD            ___awdiv@counter 0020                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0058  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063                      _RXREC 0035            __end_of_initOsc 02BE  
                    _valor 007B                      _setup 0395                      _start 0036  
                    pclath 000A                      status 0003                      wtemp0 007E  
        voltASCII@variable 0079           __end_of_Lcd_Init 035D           __end_of_Lcd_Port 04CA  
          __initialization 000F               __end_of_main 010B                     ??_main 002E  
       __size_of_Lcd_Clear 000D          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0072  
       ??_I2C_Master_Start 0072         ??_I2C_Master_Write 0074           ___awdiv@dividend 0074  
                   ?_setup 0070                     _ANSELH 0189                     _INTCON 000B  
              initOsc@frec 0074                  ??_Lcd_Cmd 0073                     _SPBRGH 009A  
  __size_of_Lcd_Write_Char 001E                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
                   ___bmul 0470                  ??___awdiv 0076                  ??___lldiv 0020  
         ___awdiv@quotient 0022                  ??_initOsc 0072                     saved_w 007E  
          Lcd_Set_Cursor@a 0020            Lcd_Set_Cursor@b 0076            Lcd_Set_Cursor@y 0022  
          Lcd_Set_Cursor@z 0021    __end_of__initialization 001B          __end_of_Lcd_Clear 0494  
      ___bmul@multiplicand 0077             __pcstackCOMMON 0070              __end_of_setup 03C7  
           _Lcd_Set_Cursor 02BE                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 007A                 __pbssBANK0 0031                 __pmaintext 001F  
                  ?___bmul 0077                 __pintentry 0004  __size_of_Lcd_Write_String 0025  
   __end_of_Lcd_Set_Cursor 0316                 ??_Lcd_Init 0076                 ??_Lcd_Port 0072  
       __size_of_voltASCII 0086                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 041A             _Lcd_Write_Char 0438                    _Lcd_Cmd 0456  
          __size_of___bmul 0017                    ___awdiv 0191                    ___lldiv 01FA  
                  _decenas 007A            ?_Lcd_Set_Cursor 0076                    __ptext1 010B  
                  __ptext2 0470                    __ptext3 0191                    __ptext4 0395  
                  __ptext5 0262                    __ptext6 035D                    __ptext7 01FA  
                  __ptext8 03F5                    __ptext9 0438                    _flagint 0038  
                  _initOsc 0262               __size_of_isr 0007                    _varPot0 0034  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009     __end_of_Lcd_Write_Char 0456       end_of_initialization 001B  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0072  
          ___lldiv@counter 0025                  _RCSTAbits 0018           I2C_Master_Init@c 0026  
         I2C_Master_Read@a 0072          __end_of_voltASCII 0191                  Lcd_Port@a 0072  
                _TRISCbits 0087            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0079  
        Lcd_Write_String@i 0077                 _startfinal 0037                  _TXSTAbits 0098  
                _Lcd_Clear 0487             __end_of___bmul 0487           _Lcd_Write_String 03F5  
              _BAUDCTLbits 0187        start_initialization 000F                __end_of_isr 04C4  
        __size_of_Lcd_Init 0047          __size_of_Lcd_Port 0006          ??_I2C_Master_Init 002A  
        ??_I2C_Master_Read 0074          ??_I2C_Master_Wait 0072          ??_I2C_Master_Stop 0072  
               ?_Lcd_Clear 0070                   ??___bmul 0078            Lcd_Write_Char@a 0074  
          Lcd_Write_Char@y 0076                __pbssCOMMON 007A                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Lcd_Cmd 0070           _I2C_Master_Start 04B4  
         _I2C_Master_Write 04A1           ??_Lcd_Set_Cursor 0077                   ?___awdiv 0072  
                 ?___lldiv 0072                  __pstrings 041A                   ?_initOsc 0070  
           __size_of_setup 0032          interrupt_function 0004                   _PIE1bits 008C  
                 Lcd_Cmd@a 0075                ??_Lcd_Clear 0076                  _voltASCII 010B  
               _ADCON0bits 001F                __stringbase 041F                 _ADCON1bits 009F  
         ??_Lcd_Write_Char 0073                   _Lcd_Init 0316                   _Lcd_Port 04C4  
      I2C_Master_Read@temp 0076   __end_of_Lcd_Write_String 041A           __size_of_Lcd_Cmd 001A  
         __size_of___awdiv 0069           __size_of___lldiv 0068                 ?_voltASCII 0070  
       __end_of__stringtab 0420            _I2C_Master_Init 035D            _I2C_Master_Read 03C7  
          _I2C_Master_Wait 0494            _I2C_Master_Stop 04AB           __size_of_initOsc 005C  
                 _centenas 0031                   __ptext10 02BE                   __ptext11 0316  
                 __ptext20 04BD                   __ptext12 0487                   __ptext13 0456  
                 __ptext14 04C4                   __ptext15 04A1                   __ptext16 04AB  
                 __ptext17 04B4                   __ptext18 03C7                   __ptext19 0494  
            __size_of_main 00EC                   _unidades 0032   __end_of_I2C_Master_Start 04BD  
 __end_of_I2C_Master_Write 04AB                 _INTCONbits 000B         Lcd_Write_Char@temp 0075  
                 intlevel1 0000           ___lldiv@dividend 0076                  stringcode 041A  
               _OSCCONbits 008F    __end_of_I2C_Master_Init 0395    __end_of_I2C_Master_Read 03F5  
  __end_of_I2C_Master_Wait 04A1    __end_of_I2C_Master_Stop 04B4         Lcd_Set_Cursor@temp 0023  
              ??_voltASCII 0026                 _OPTION_REG 0081           ___lldiv@quotient 0021  
        I2C_Master_Write@d 0072                   stringdir 041A                   stringtab 041A  
              _SSPCON2bits 0091  
