

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jul 26 17:23:08 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.20
    35                           ; Generated 12/02/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F887 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001D                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  0081                     	;# 
   104  0085                     	;# 
   105  0086                     	;# 
   106  0087                     	;# 
   107  0088                     	;# 
   108  0089                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  0105                     	;# 
   132  0107                     	;# 
   133  0108                     	;# 
   134  0109                     	;# 
   135  010C                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  0185                     	;# 
   141  0187                     	;# 
   142  0188                     	;# 
   143  0189                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0088                     	;# 
   186  0089                     	;# 
   187  008C                     	;# 
   188  008D                     	;# 
   189  008E                     	;# 
   190  008F                     	;# 
   191  0090                     	;# 
   192  0091                     	;# 
   193  0092                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0094                     	;# 
   198  0095                     	;# 
   199  0096                     	;# 
   200  0097                     	;# 
   201  0098                     	;# 
   202  0099                     	;# 
   203  009A                     	;# 
   204  009B                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009E                     	;# 
   208  009F                     	;# 
   209  0105                     	;# 
   210  0107                     	;# 
   211  0108                     	;# 
   212  0109                     	;# 
   213  010C                     	;# 
   214  010C                     	;# 
   215  010D                     	;# 
   216  010E                     	;# 
   217  010F                     	;# 
   218  0185                     	;# 
   219  0187                     	;# 
   220  0188                     	;# 
   221  0189                     	;# 
   222  018C                     	;# 
   223  018D                     	;# 
   224  0000                     	;# 
   225  0001                     	;# 
   226  0002                     	;# 
   227  0003                     	;# 
   228  0004                     	;# 
   229  0005                     	;# 
   230  0006                     	;# 
   231  0007                     	;# 
   232  0008                     	;# 
   233  0009                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  000E                     	;# 
   239  000E                     	;# 
   240  000F                     	;# 
   241  0010                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0014                     	;# 
   246  0015                     	;# 
   247  0015                     	;# 
   248  0016                     	;# 
   249  0017                     	;# 
   250  0018                     	;# 
   251  0019                     	;# 
   252  001A                     	;# 
   253  001B                     	;# 
   254  001B                     	;# 
   255  001C                     	;# 
   256  001D                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  0081                     	;# 
   260  0085                     	;# 
   261  0086                     	;# 
   262  0087                     	;# 
   263  0088                     	;# 
   264  0089                     	;# 
   265  008C                     	;# 
   266  008D                     	;# 
   267  008E                     	;# 
   268  008F                     	;# 
   269  0090                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0094                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  0105                     	;# 
   288  0107                     	;# 
   289  0108                     	;# 
   290  0109                     	;# 
   291  010C                     	;# 
   292  010C                     	;# 
   293  010D                     	;# 
   294  010E                     	;# 
   295  010F                     	;# 
   296  0185                     	;# 
   297  0187                     	;# 
   298  0188                     	;# 
   299  0189                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302                           
   303                           	psect	idataBANK0
   304  0429                     __pidataBANK0:
   305                           
   306                           ;initializer for _str
   307  0429  3420               	retlw	32
   308  042A  344C               	retlw	76
   309  042B  346F               	retlw	111
   310  042C  3473               	retlw	115
   311  042D  3420               	retlw	32
   312  042E  3476               	retlw	118
   313  042F  3461               	retlw	97
   314  0430  346C               	retlw	108
   315  0431  346F               	retlw	111
   316  0432  3472               	retlw	114
   317  0433  3465               	retlw	101
   318  0434  3473               	retlw	115
   319  0435  3420               	retlw	32
   320  0436  3464               	retlw	100
   321  0437  3465               	retlw	101
   322  0438  3420               	retlw	32
   323  0439  346C               	retlw	108
   324  043A  346F               	retlw	111
   325  043B  3473               	retlw	115
   326  043C  3420               	retlw	32
   327  043D  3470               	retlw	112
   328  043E  346F               	retlw	111
   329  043F  3474               	retlw	116
   330  0440  3465               	retlw	101
   331  0441  346E               	retlw	110
   332  0442  3463               	retlw	99
   333  0443  3469               	retlw	105
   334  0444  346F               	retlw	111
   335  0445  346D               	retlw	109
   336  0446  3465               	retlw	101
   337  0447  3474               	retlw	116
   338  0448  3472               	retlw	114
   339  0449  346F               	retlw	111
   340  044A  3473               	retlw	115
   341  044B  3420               	retlw	32
   342  044C  3473               	retlw	115
   343  044D  346F               	retlw	111
   344  044E  346E               	retlw	110
   345  044F  343A               	retlw	58
   346  0450  340A               	retlw	10
   347  0451  3420               	retlw	32
   348  0452  3453               	retlw	83
   349  0453  3431               	retlw	49
   350  0454  343A               	retlw	58
   351  0455  3420               	retlw	32
   352  0456  3400               	retlw	0
   353  000B                     _INTCON	set	11
   354  000D                     _PIR2	set	13
   355  000C                     _PIR1	set	12
   356  0009                     _PORTE	set	9
   357  0008                     _PORTD	set	8
   358  0007                     _PORTC	set	7
   359  0006                     _PORTB	set	6
   360  0005                     _PORTA	set	5
   361  000E                     _TMR1L	set	14
   362  000F                     _TMR1H	set	15
   363  0010                     _T1CON	set	16
   364  0019                     _TXREG	set	25
   365  001E                     _ADRESH	set	30
   366  000C                     _PIR1bits	set	12
   367  000B                     _INTCONbits	set	11
   368  0018                     _RCSTAbits	set	24
   369  001F                     _ADCON0bits	set	31
   370  0049                     _RE1	set	73
   371  0048                     _RE0	set	72
   372  0064                     _TXIF	set	100
   373  0058                     _RBIF	set	88
   374  0060                     _TMR1IF	set	96
   375  005A                     _T0IF	set	90
   376  008D                     _PIE2	set	141
   377  008C                     _PIE1	set	140
   378  0081                     _OPTION_REG	set	129
   379  0096                     _IOCB	set	150
   380  0095                     _WPUB	set	149
   381  0089                     _TRISE	set	137
   382  0088                     _TRISD	set	136
   383  0087                     _TRISC	set	135
   384  0086                     _TRISB	set	134
   385  009A                     _SPBRGH	set	154
   386  0099                     _SPBRG	set	153
   387  0098                     _TXSTAbits	set	152
   388  008C                     _PIE1bits	set	140
   389  009F                     _ADCON1bits	set	159
   390  0085                     _TRISA	set	133
   391  008F                     _OSCCONbits	set	143
   392  0187                     _BAUDCTLbits	set	391
   393  0189                     _ANSELH	set	393
   394  0188                     _ANSEL	set	392
   395                           
   396                           	psect	strings
   397  04E1                     __pstrings:
   398  04E1                     stringtab:
   399  04E1                     __stringtab:
   400  04E1                     stringcode:	
   401                           ;	String table - string pointers are 1 byte each
   402                           
   403  04E1                     stringdir:
   404  04E1  3004               	movlw	high stringdir
   405  04E2  008A               	movwf	10
   406  04E3  0804               	movf	4,w
   407  04E4  0A84               	incf	4,f
   408  04E5  0782               	addwf	2,f
   409  04E6                     __stringbase:
   410  04E6  3400               	retlw	0
   411  04E7                     __end_of__stringtab:
   412  04E7                     STR_1:
   413  04E7  3453               	retlw	83	;'S'
   414  04E8  3431               	retlw	49	;'1'
   415  04E9  343A               	retlw	58	;':'
   416  04EA  3420               	retlw	32	;' '
   417  04EB  3420               	retlw	32	;' '
   418  04EC  3420               	retlw	32	;' '
   419  04ED  3453               	retlw	83	;'S'
   420  04EE  3432               	retlw	50	;'2'
   421  04EF  343A               	retlw	58	;':'
   422  04F0  3420               	retlw	32	;' '
   423  04F1  3420               	retlw	32	;' '
   424  04F2  3443               	retlw	67	;'C'
   425  04F3  344F               	retlw	79	;'O'
   426  04F4  344E               	retlw	78	;'N'
   427  04F5  3454               	retlw	84	;'T'
   428  04F6  343A               	retlw	58	;':'
   429  04F7  3400               	retlw	0
   430  04F8                     STR_2:
   431  04F8  3420               	retlw	32	;' '
   432  04F9  3420               	retlw	32	;' '
   433  04FA  3420               	retlw	32	;' '
   434  04FB  3400               	retlw	0
   435                           
   436                           	psect	cinit
   437  000F                     start_initialization:	
   438                           ; #config settings
   439                           
   440  000F                     __initialization:
   441                           
   442                           ; Initialize objects allocated to BANK0
   443  000F  1383               	bcf	3,7	;select IRP bank0
   444  0010  304E               	movlw	low (__pdataBANK0+46)
   445  0011  00FD               	movwf	btemp+-1
   446  0012  3004               	movlw	high __pidataBANK0
   447  0013  00FE               	movwf	btemp
   448  0014  3029               	movlw	low __pidataBANK0
   449  0015  00FF               	movwf	btemp+1
   450  0016  3020               	movlw	low __pdataBANK0
   451  0017  0084               	movwf	4
   452  0018  120A  118A  252F  120A  118A  	fcall	init_ram0
   453                           
   454                           ; Clear objects allocated to BANK0
   455  001D  01D9               	clrf	__pbssBANK0& (0+127)
   456  001E  01DA               	clrf	(__pbssBANK0+1)& (0+127)
   457  001F  01DB               	clrf	(__pbssBANK0+2)& (0+127)
   458  0020  01DC               	clrf	(__pbssBANK0+3)& (0+127)
   459  0021  01DD               	clrf	(__pbssBANK0+4)& (0+127)
   460  0022  01DE               	clrf	(__pbssBANK0+5)& (0+127)
   461  0023  01DF               	clrf	(__pbssBANK0+6)& (0+127)
   462  0024  01E0               	clrf	(__pbssBANK0+7)& (0+127)
   463  0025  01E1               	clrf	(__pbssBANK0+8)& (0+127)
   464  0026  01E2               	clrf	(__pbssBANK0+9)& (0+127)
   465                           
   466                           ; Clear objects allocated to COMMON
   467  0027  01F8               	clrf	__pbssCOMMON& (0+127)
   468  0028  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   469  0029  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   470  002A                     end_of_initialization:	
   471                           ;End of C runtime variable initialization code
   472                           
   473  002A                     __end_of__initialization:
   474  002A  0183               	clrf	3
   475  002B  120A  118A  292E   	ljmp	_main	;jump to C main() function
   476                           
   477                           	psect	bssCOMMON
   478  0078                     __pbssCOMMON:
   479  0078                     _centenas:
   480  0078                     	ds	1
   481  0079                     _decenas:
   482  0079                     	ds	1
   483  007A                     _unidades:
   484  007A                     	ds	1
   485                           
   486                           	psect	bssBANK0
   487  0059                     __pbssBANK0:
   488  0059                     _varUART:
   489  0059                     	ds	1
   490  005A                     _tempo1:
   491  005A                     	ds	1
   492  005B                     _tempo0:
   493  005B                     	ds	1
   494  005C                     _contador:
   495  005C                     	ds	1
   496  005D                     _var1:
   497  005D                     	ds	1
   498  005E                     _var0:
   499  005E                     	ds	1
   500  005F                     _multiplex:
   501  005F                     	ds	1
   502  0060                     _start:
   503  0060                     	ds	1
   504  0061                     _startfinal:
   505  0061                     	ds	1
   506  0062                     _flagint:
   507  0062                     	ds	1
   508                           
   509                           	psect	dataBANK0
   510  0020                     __pdataBANK0:
   511  0020                     _str:
   512  0020                     	ds	46
   513                           
   514                           	psect	inittext
   515  052B                     init_fetch0:	
   516                           ;	Called with low address in FSR and high address in W
   517                           
   518  052B  087E               	movf	btemp,w
   519  052C  008A               	movwf	10
   520  052D  087F               	movf	btemp+1,w
   521  052E  0082               	movwf	2
   522  052F                     init_ram0:	
   523                           ;Called with:
   524                           ;	high address of idata address in btemp 
   525                           ;	low address of idata address in btemp+1 
   526                           ;	low address of data in FSR
   527                           ;	high address + 1 of data in btemp-1
   528                           
   529  052F  120A  118A  252B  120A  118A  	fcall	init_fetch0
   530  0534  0080               	movwf	0
   531  0535  0A84               	incf	4,f
   532  0536  0804               	movf	4,w
   533  0537  067D               	xorwf	btemp+-1,w
   534  0538  1903               	btfsc	3,2
   535  0539  3400               	retlw	0
   536  053A  0AFF               	incf	btemp+1,f
   537  053B  1903               	btfsc	3,2
   538  053C  0AFE               	incf	btemp,f
   539  053D  2D2F               	goto	init_ram0
   540                           
   541                           	psect	cstackCOMMON
   542  0070                     __pcstackCOMMON:
   543  0070                     ?_setup:
   544  0070                     ?_Lcd_Init:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_Lcd_Clear:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_Lcd_Write_String:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_decimal:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_Lcd_Write_Char:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_initOsc:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_chselect:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_isr:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ??_isr:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_main:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_Lcd_Port:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_Lcd_Cmd:	
   578                           ; 1 bytes @ 0x0
   579                           
   580                           
   581                           ; 1 bytes @ 0x0
   582  0070                     	ds	3
   583  0073                     ??_initOsc:
   584  0073                     ?_initAN:	
   585                           ; 1 bytes @ 0x3
   586                           
   587  0073                     ??_chselect:	
   588                           ; 1 bytes @ 0x3
   589                           
   590  0073                     ?_initEUSART:	
   591                           ; 1 bytes @ 0x3
   592                           
   593  0073                     ??_Lcd_Port:	
   594                           ; 1 bytes @ 0x3
   595                           
   596  0073                     ?___bmul:	
   597                           ; 1 bytes @ 0x3
   598                           
   599  0073                     ?___awdiv:	
   600                           ; 1 bytes @ 0x3
   601                           
   602  0073                     initAN@just:	
   603                           ; 2 bytes @ 0x3
   604                           
   605  0073                     initEUSART@rx:	
   606                           ; 1 bytes @ 0x3
   607                           
   608  0073                     Lcd_Port@a:	
   609                           ; 1 bytes @ 0x3
   610                           
   611  0073                     ___bmul@multiplicand:	
   612                           ; 1 bytes @ 0x3
   613                           
   614  0073                     ___awdiv@divisor:	
   615                           ; 1 bytes @ 0x3
   616                           
   617                           
   618                           ; 2 bytes @ 0x3
   619  0073                     	ds	1
   620  0074                     ??_Lcd_Write_Char:
   621  0074                     ??_initAN:	
   622                           ; 1 bytes @ 0x4
   623                           
   624  0074                     ??_initEUSART:	
   625                           ; 1 bytes @ 0x4
   626                           
   627  0074                     ??_Lcd_Cmd:	
   628                           ; 1 bytes @ 0x4
   629                           
   630  0074                     ??___bmul:	
   631                           ; 1 bytes @ 0x4
   632                           
   633  0074                     initEUSART@tx:	
   634                           ; 1 bytes @ 0x4
   635                           
   636                           
   637                           ; 1 bytes @ 0x4
   638  0074                     	ds	1
   639  0075                     initOsc@frec:
   640  0075                     initAN@bin:	
   641                           ; 1 bytes @ 0x5
   642                           
   643  0075                     Lcd_Write_Char@a:	
   644                           ; 1 bytes @ 0x5
   645                           
   646  0075                     ___bmul@product:	
   647                           ; 1 bytes @ 0x5
   648                           
   649  0075                     ___awdiv@dividend:	
   650                           ; 1 bytes @ 0x5
   651                           
   652                           
   653                           ; 2 bytes @ 0x5
   654  0075                     	ds	1
   655  0076                     ??_setup:
   656  0076                     chselect@cant:	
   657                           ; 1 bytes @ 0x6
   658                           
   659  0076                     Lcd_Cmd@a:	
   660                           ; 1 bytes @ 0x6
   661                           
   662  0076                     Lcd_Write_Char@temp:	
   663                           ; 1 bytes @ 0x6
   664                           
   665  0076                     ___bmul@multiplier:	
   666                           ; 1 bytes @ 0x6
   667                           
   668                           
   669                           ; 1 bytes @ 0x6
   670  0076                     	ds	1
   671  0077                     ??_Lcd_Clear:
   672  0077                     ?_Lcd_Set_Cursor:	
   673                           ; 1 bytes @ 0x7
   674                           
   675  0077                     ??___awdiv:	
   676                           ; 1 bytes @ 0x7
   677                           
   678  0077                     Lcd_Set_Cursor@b:	
   679                           ; 1 bytes @ 0x7
   680                           
   681  0077                     Lcd_Write_Char@y:	
   682                           ; 1 bytes @ 0x7
   683                           
   684                           
   685                           ; 1 bytes @ 0x7
   686  0077                     	ds	1
   687  0078                     ??_Lcd_Write_String:
   688                           
   689                           	psect	cstackBANK0
   690  004E                     __pcstackBANK0:	
   691                           ; 1 bytes @ 0x8
   692                           
   693  004E                     ??_Lcd_Init:
   694  004E                     ??_Lcd_Set_Cursor:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  004E                     ___awdiv@counter:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  004E                     Lcd_Write_String@i:	
   701                           ; 1 bytes @ 0x0
   702                           
   703                           
   704                           ; 2 bytes @ 0x0
   705  004E                     	ds	1
   706  004F                     ___awdiv@sign:
   707                           
   708                           ; 1 bytes @ 0x1
   709  004F                     	ds	1
   710  0050                     Lcd_Set_Cursor@a:
   711  0050                     Lcd_Write_String@a:	
   712                           ; 1 bytes @ 0x2
   713                           
   714  0050                     ___awdiv@quotient:	
   715                           ; 1 bytes @ 0x2
   716                           
   717                           
   718                           ; 2 bytes @ 0x2
   719  0050                     	ds	1
   720  0051                     Lcd_Set_Cursor@z:
   721                           
   722                           ; 1 bytes @ 0x3
   723  0051                     	ds	1
   724  0052                     ??_decimal:
   725  0052                     Lcd_Set_Cursor@y:	
   726                           ; 1 bytes @ 0x4
   727                           
   728                           
   729                           ; 1 bytes @ 0x4
   730  0052                     	ds	1
   731  0053                     Lcd_Set_Cursor@temp:
   732                           
   733                           ; 1 bytes @ 0x5
   734  0053                     	ds	2
   735  0055                     decimal@variable:
   736                           
   737                           ; 1 bytes @ 0x7
   738  0055                     	ds	1
   739  0056                     decimal@valor:
   740                           
   741                           ; 1 bytes @ 0x8
   742  0056                     	ds	1
   743  0057                     ??_main:
   744                           
   745                           ; 1 bytes @ 0x9
   746  0057                     	ds	2
   747                           
   748                           	psect	maintext
   749  012E                     __pmaintext:	
   750 ;;
   751 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   752 ;;
   753 ;; *************** function _main *****************
   754 ;; Defined at:
   755 ;;		line 107 in file "MainL2.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;		None
   760 ;; Return value:  Size  Location     Type
   761 ;;                  1    wreg      void 
   762 ;; Registers used:
   763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   764 ;; Tracked objects:
   765 ;;		On entry : B00/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   769 ;;      Params:         0       0       0       0       0
   770 ;;      Locals:         0       0       0       0       0
   771 ;;      Temps:          0       2       0       0       0
   772 ;;      Totals:         0       2       0       0       0
   773 ;;Total ram usage:        2 bytes
   774 ;; Hardware stack levels required when called: 4
   775 ;; This function calls:
   776 ;;		_Lcd_Clear
   777 ;;		_Lcd_Init
   778 ;;		_Lcd_Set_Cursor
   779 ;;		_Lcd_Write_Char
   780 ;;		_Lcd_Write_String
   781 ;;		_chselect
   782 ;;		_decimal
   783 ;;		_setup
   784 ;; This function is called by:
   785 ;;		Startup code after reset
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           
   790                           ;psect for function _main
   791  012E                     _main:
   792  012E                     l1890:	
   793                           ;incstack = 0
   794                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   795                           
   796                           
   797                           ;MainL2.c: 108: 
   798  012E  120A  118A  23B9  120A  118A  	fcall	_setup
   799  0133                     l1892:
   800                           
   801                           ;MainL2.c: 109: 
   802  0133  120A  118A  231F  120A  118A  	fcall	_Lcd_Init
   803  0138                     l1894:
   804                           
   805                           ;MainL2.c: 114: 
   806  0138  3002               	movlw	2
   807  0139  120A  118A  202E  120A  118A  	fcall	_chselect
   808                           
   809                           ;MainL2.c: 115: 
   810  013E  120A  118A  253E  120A  118A  	fcall	_Lcd_Clear
   811                           
   812                           ;MainL2.c: 116: 
   813  0143  01F7               	clrf	Lcd_Set_Cursor@b
   814  0144  0AF7               	incf	Lcd_Set_Cursor@b,f
   815  0145  3001               	movlw	1
   816  0146  120A  118A  22C7  120A  118A  	fcall	_Lcd_Set_Cursor
   817  014B                     l1896:
   818                           
   819                           ;MainL2.c: 117: void setup(void){
   820  014B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   821  014C  120A  118A  2457  120A  118A  	fcall	_Lcd_Write_String
   822                           
   823                           ;MainL2.c: 119: 
   824  0151  296A               	goto	l1906
   825  0152                     l1898:
   826                           
   827                           ;MainL2.c: 120:   ANSELH = 0b00000000;
   828  0152  3001               	movlw	1
   829  0153  00D7               	movwf	??_main
   830  0154  0857               	movf	??_main,w
   831  0155  07D9               	addwf	_varUART,f
   832  0156                     l1900:
   833                           
   834                           ;MainL2.c: 122:   TRISA = 0b00000011;
   835  0156  1E0C               	btfss	12,4	;volatile
   836  0157  2959               	goto	u901
   837  0158  295A               	goto	u900
   838  0159                     u901:
   839  0159  2960               	goto	l1904
   840  015A                     u900:
   841  015A                     l1902:
   842                           
   843                           ;MainL2.c: 123:   TRISB = 0b00000000;
   844  015A  0859               	movf	_varUART,w
   845  015B  3E20               	addlw	(low (_str| 0))& (0+255)
   846  015C  0084               	movwf	4
   847  015D  1383               	bcf	3,7	;select IRP bank0
   848  015E  0800               	movf	0,w
   849  015F  0099               	movwf	25	;volatile
   850  0160                     l1904:
   851                           
   852                           ;MainL2.c: 125:   TRISD = 0x00;
   853  0160  3014               	movlw	20
   854  0161  1283               	bcf	3,5	;RP0=0, select bank0
   855  0162  1303               	bcf	3,6	;RP1=0, select bank0
   856  0163  00D8               	movwf	??_main+1
   857  0164  3079               	movlw	121
   858  0165  00D7               	movwf	??_main
   859  0166                     u967:
   860  0166  0BD7               	decfsz	??_main,f
   861  0167  2966               	goto	u967
   862  0168  0BD8               	decfsz	??_main+1,f
   863  0169  2966               	goto	u967
   864  016A                     l1906:
   865                           
   866                           ;MainL2.c: 119: 
   867  016A  3030               	movlw	48
   868  016B  1283               	bcf	3,5	;RP0=0, select bank0
   869  016C  1303               	bcf	3,6	;RP1=0, select bank0
   870  016D  0259               	subwf	_varUART,w
   871  016E  1C03               	skipc
   872  016F  2971               	goto	u911
   873  0170  2972               	goto	u910
   874  0171                     u911:
   875  0171  2952               	goto	l1898
   876  0172                     u910:
   877  0172                     l1908:
   878                           
   879                           ;MainL2.c: 127: 
   880  0172  085E               	movf	_var0,w
   881  0173  120A  118A  2260  120A  118A  	fcall	_decimal
   882                           
   883                           ;MainL2.c: 128:   initAN(0b00000011, 0);
   884  0178  01F7               	clrf	Lcd_Set_Cursor@b
   885  0179  0AF7               	incf	Lcd_Set_Cursor@b,f
   886  017A  3002               	movlw	2
   887  017B  120A  118A  22C7  120A  118A  	fcall	_Lcd_Set_Cursor
   888                           
   889                           ;MainL2.c: 129:   WPUB = 0b00000000;
   890  0180  0878               	movf	_centenas,w
   891  0181  120A  118A  24C4  120A  118A  	fcall	_Lcd_Write_Char
   892                           
   893                           ;MainL2.c: 130:   IOCB = 0b00000000;
   894  0186  0879               	movf	_decenas,w
   895  0187  120A  118A  24C4  120A  118A  	fcall	_Lcd_Write_Char
   896                           
   897                           ;MainL2.c: 131: 
   898  018C  087A               	movf	_unidades,w
   899  018D  120A  118A  24C4  120A  118A  	fcall	_Lcd_Write_Char
   900  0192                     l1910:
   901                           
   902                           ;MainL2.c: 132:   OPTION_REG = 0b11000100;
   903  0192  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   904  0193  120A  118A  2457  120A  118A  	fcall	_Lcd_Write_String
   905  0198                     l1912:
   906                           
   907                           ;MainL2.c: 133:   T1CON = 0x00;
   908  0198  1283               	bcf	3,5	;RP0=0, select bank0
   909  0199  1303               	bcf	3,6	;RP1=0, select bank0
   910  019A  085D               	movf	_var1,w
   911  019B  120A  118A  2260  120A  118A  	fcall	_decimal
   912  01A0                     l1914:
   913                           
   914                           ;MainL2.c: 134:   TMR1IF = 0;
   915  01A0  0878               	movf	_centenas,w
   916  01A1  120A  118A  24C4  120A  118A  	fcall	_Lcd_Write_Char
   917  01A6                     l1916:
   918                           
   919                           ;MainL2.c: 135:   TMR1H = 0x3C;
   920  01A6  0879               	movf	_decenas,w
   921  01A7  120A  118A  24C4  120A  118A  	fcall	_Lcd_Write_Char
   922  01AC                     l1918:
   923                           
   924                           ;MainL2.c: 136:   TMR1L = 0xB0;
   925  01AC  087A               	movf	_unidades,w
   926  01AD  120A  118A  24C4  120A  118A  	fcall	_Lcd_Write_Char
   927                           
   928                           ;MainL2.c: 138: 
   929  01B2  29E1               	goto	l233
   930  01B3                     l1920:
   931                           
   932                           ;MainL2.c: 139:   initOsc(4);
   933  01B3  085E               	movf	_var0,w
   934  01B4  00D7               	movwf	??_main
   935  01B5  0857               	movf	??_main,w
   936  01B6  00DB               	movwf	_tempo0
   937  01B7                     l1922:
   938                           
   939                           ;MainL2.c: 140:   initEUSART(0,0);
   940  01B7  1E0C               	btfss	12,4	;volatile
   941  01B8  29BA               	goto	u921
   942  01B9  29BB               	goto	u920
   943  01BA                     u921:
   944  01BA  29BD               	goto	l235
   945  01BB                     u920:
   946  01BB                     l1924:
   947                           
   948                           ;MainL2.c: 141:   PORTA = 0x00;
   949  01BB  0878               	movf	_centenas,w
   950  01BC  0099               	movwf	25	;volatile
   951  01BD                     l235:	
   952                           ;MainL2.c: 142:   PORTB = 0x00;
   953                           
   954                           
   955                           ;MainL2.c: 143:   PORTC = 0x00;
   956  01BD  3014               	movlw	20
   957  01BE  1283               	bcf	3,5	;RP0=0, select bank0
   958  01BF  1303               	bcf	3,6	;RP1=0, select bank0
   959  01C0  00D8               	movwf	??_main+1
   960  01C1  3079               	movlw	121
   961  01C2  00D7               	movwf	??_main
   962  01C3                     u977:
   963  01C3  0BD7               	decfsz	??_main,f
   964  01C4  29C3               	goto	u977
   965  01C5  0BD8               	decfsz	??_main+1,f
   966  01C6  29C3               	goto	u977
   967  01C7                     l1926:
   968                           
   969                           ;MainL2.c: 144:   PORTD = 0x00;
   970  01C7  1283               	bcf	3,5	;RP0=0, select bank0
   971  01C8  1303               	bcf	3,6	;RP1=0, select bank0
   972  01C9  1E0C               	btfss	12,4	;volatile
   973  01CA  29CC               	goto	u931
   974  01CB  29CD               	goto	u930
   975  01CC                     u931:
   976  01CC  29CF               	goto	l236
   977  01CD                     u930:
   978  01CD                     l1928:
   979                           
   980                           ;MainL2.c: 145:   PORTE = 0x00;
   981  01CD  0879               	movf	_decenas,w
   982  01CE  0099               	movwf	25	;volatile
   983  01CF                     l236:	
   984                           ;MainL2.c: 146: 
   985                           
   986                           
   987                           ;MainL2.c: 147: 
   988  01CF  3014               	movlw	20
   989  01D0  1283               	bcf	3,5	;RP0=0, select bank0
   990  01D1  1303               	bcf	3,6	;RP1=0, select bank0
   991  01D2  00D8               	movwf	??_main+1
   992  01D3  3079               	movlw	121
   993  01D4  00D7               	movwf	??_main
   994  01D5                     u987:
   995  01D5  0BD7               	decfsz	??_main,f
   996  01D6  29D5               	goto	u987
   997  01D7  0BD8               	decfsz	??_main+1,f
   998  01D8  29D5               	goto	u987
   999  01D9                     l1930:
  1000                           
  1001                           ;MainL2.c: 148: 
  1002  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1003  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1004  01DB  1E0C               	btfss	12,4	;volatile
  1005  01DC  29DE               	goto	u941
  1006  01DD  29DF               	goto	u940
  1007  01DE                     u941:
  1008  01DE  29E1               	goto	l233
  1009  01DF                     u940:
  1010  01DF                     l1932:
  1011                           
  1012                           ;MainL2.c: 149:   PIE1 = 0b01000000;
  1013  01DF  087A               	movf	_unidades,w
  1014  01E0  0099               	movwf	25	;volatile
  1015  01E1                     l233:	
  1016                           ;MainL2.c: 151:   PIR1 = 0x00;
  1017                           
  1018                           
  1019                           ;MainL2.c: 138: 
  1020  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  1021  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  1022  01E3  085B               	movf	_tempo0,w
  1023  01E4  065E               	xorwf	_var0,w
  1024  01E5  1D03               	skipz
  1025  01E6  29E8               	goto	u951
  1026  01E7  29E9               	goto	u950
  1027  01E8                     u951:
  1028  01E8  29B3               	goto	l1920
  1029  01E9                     u950:
  1030  01E9                     l1934:
  1031                           
  1032                           ;MainL2.c: 152:   PIR2 = 0x00;
  1033  01E9  3082               	movlw	130
  1034  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1035  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  1036  01EC  00D8               	movwf	??_main+1
  1037  01ED  30DD               	movlw	221
  1038  01EE  00D7               	movwf	??_main
  1039  01EF                     u997:
  1040  01EF  0BD7               	decfsz	??_main,f
  1041  01F0  29EF               	goto	u997
  1042  01F1  0BD8               	decfsz	??_main+1,f
  1043  01F2  29EF               	goto	u997
  1044  01F3  2938               	goto	l1894
  1045  01F4  120A  118A  280C   	ljmp	start
  1046  01F7                     __end_of_main:
  1047                           
  1048                           	psect	text1
  1049  03B9                     __ptext1:	
  1050 ;; *************** function _setup *****************
  1051 ;; Defined at:
  1052 ;;		line 162 in file "MainL2.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;		None
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;		None
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1066 ;;      Params:         0       0       0       0       0
  1067 ;;      Locals:         0       0       0       0       0
  1068 ;;      Temps:          0       0       0       0       0
  1069 ;;      Totals:         0       0       0       0       0
  1070 ;;Total ram usage:        0 bytes
  1071 ;; Hardware stack levels used: 1
  1072 ;; Hardware stack levels required when called: 2
  1073 ;; This function calls:
  1074 ;;		_initAN
  1075 ;;		_initEUSART
  1076 ;;		_initOsc
  1077 ;; This function is called by:
  1078 ;;		_main
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           
  1083                           ;psect for function _setup
  1084  03B9                     _setup:
  1085  03B9                     l1586:	
  1086                           ;incstack = 0
  1087                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1088                           
  1089                           
  1090                           ;MainL2.c: 165:     valor = (valor - (decenas*10));
  1091  03B9  1683               	bsf	3,5	;RP0=1, select bank3
  1092  03BA  1703               	bsf	3,6	;RP1=1, select bank3
  1093  03BB  0189               	clrf	9	;volatile
  1094  03BC                     l1588:
  1095                           
  1096                           ;MainL2.c: 167: 
  1097  03BC  3003               	movlw	3
  1098  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  1099  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  1100  03BF  0085               	movwf	5	;volatile
  1101  03C0                     l1590:
  1102                           
  1103                           ;MainL2.c: 168:     centenas = centenas + 48;
  1104  03C0  0186               	clrf	6	;volatile
  1105                           
  1106                           ;MainL2.c: 169:     decenas = decenas + 48;
  1107  03C1  3080               	movlw	128
  1108  03C2  0087               	movwf	7	;volatile
  1109  03C3                     l1592:
  1110                           
  1111                           ;MainL2.c: 170:     unidades = unidades + 48;
  1112  03C3  0188               	clrf	8	;volatile
  1113  03C4                     l1594:
  1114                           
  1115                           ;MainL2.c: 171: 
  1116  03C4  0189               	clrf	9	;volatile
  1117  03C5                     l1596:
  1118  03C5  01F3               	clrf	initAN@just
  1119  03C6  3003               	movlw	3
  1120  03C7  120A  118A  2480  120A  118A  	fcall	_initAN
  1121  03CC                     l1598:
  1122  03CC  1683               	bsf	3,5	;RP0=1, select bank1
  1123  03CD  1303               	bcf	3,6	;RP1=0, select bank1
  1124  03CE  0195               	clrf	21	;volatile
  1125  03CF                     l1600:
  1126  03CF  0196               	clrf	22	;volatile
  1127  03D0                     l1602:
  1128  03D0  30C4               	movlw	196
  1129  03D1  0081               	movwf	1	;volatile
  1130  03D2                     l1604:
  1131  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  1132  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  1133  03D4  0190               	clrf	16	;volatile
  1134  03D5                     l1606:
  1135  03D5  100C               	bcf	12,0	;volatile
  1136  03D6                     l1608:
  1137  03D6  303C               	movlw	60
  1138  03D7  008F               	movwf	15	;volatile
  1139  03D8                     l1610:
  1140  03D8  30B0               	movlw	176
  1141  03D9  008E               	movwf	14	;volatile
  1142  03DA                     l1612:
  1143  03DA  3004               	movlw	4
  1144  03DB  120A  118A  236D  120A  118A  	fcall	_initOsc
  1145  03E0                     l1614:
  1146  03E0  01F3               	clrf	initEUSART@rx
  1147  03E1  3000               	movlw	0
  1148  03E2  120A  118A  24A4  120A  118A  	fcall	_initEUSART
  1149  03E7                     l1616:
  1150  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  1151  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  1152  03E9  0185               	clrf	5	;volatile
  1153  03EA                     l1618:
  1154  03EA  0186               	clrf	6	;volatile
  1155  03EB                     l1620:
  1156  03EB  0187               	clrf	7	;volatile
  1157  03EC                     l1622:
  1158  03EC  0188               	clrf	8	;volatile
  1159  03ED                     l1624:
  1160  03ED  0189               	clrf	9	;volatile
  1161  03EE                     l1626:
  1162  03EE  3040               	movlw	64
  1163  03EF  1683               	bsf	3,5	;RP0=1, select bank1
  1164  03F0  1303               	bcf	3,6	;RP1=0, select bank1
  1165  03F1  008C               	movwf	12	;volatile
  1166  03F2                     l1628:
  1167  03F2  018D               	clrf	13	;volatile
  1168  03F3                     l1630:
  1169  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  1170  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  1171  03F5  018C               	clrf	12	;volatile
  1172  03F6                     l1632:
  1173  03F6  018D               	clrf	13	;volatile
  1174  03F7                     l1634:
  1175  03F7  30C0               	movlw	192
  1176  03F8  008B               	movwf	11	;volatile
  1177  03F9                     l244:
  1178  03F9  0008               	return
  1179  03FA                     __end_of_setup:
  1180                           
  1181                           	psect	text2
  1182  036D                     __ptext2:	
  1183 ;; *************** function _initOsc *****************
  1184 ;; Defined at:
  1185 ;;		line 14 in file "./my_lib.h"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  frec            1    wreg     unsigned char 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  frec            1    5[COMMON] unsigned char 
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  1    wreg      void 
  1192 ;; Registers used:
  1193 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1199 ;;      Params:         0       0       0       0       0
  1200 ;;      Locals:         1       0       0       0       0
  1201 ;;      Temps:          2       0       0       0       0
  1202 ;;      Totals:         3       0       0       0       0
  1203 ;;Total ram usage:        3 bytes
  1204 ;; Hardware stack levels used: 1
  1205 ;; Hardware stack levels required when called: 1
  1206 ;; This function calls:
  1207 ;;		Nothing
  1208 ;; This function is called by:
  1209 ;;		_setup
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           
  1214                           ;psect for function _initOsc
  1215  036D                     _initOsc:
  1216                           
  1217                           ;incstack = 0
  1218                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1219                           ;initOsc@frec stored from wreg
  1220  036D  00F5               	movwf	initOsc@frec
  1221  036E                     l1368:
  1222                           
  1223                           ;./my_lib.h: 15:     OSCCONbits.SCS = 1;
  1224  036E  1683               	bsf	3,5	;RP0=1, select bank1
  1225  036F  1303               	bcf	3,6	;RP1=0, select bank1
  1226  0370  140F               	bsf	15,0	;volatile
  1227                           
  1228                           ;./my_lib.h: 16:         switch(frec){
  1229  0371  2B96               	goto	l1372
  1230  0372                     l100:	
  1231                           ;./my_lib.h: 17:             case 8:
  1232                           
  1233                           
  1234                           ;./my_lib.h: 18:                 OSCCONbits.IRCF0 = 1;
  1235  0372  160F               	bsf	15,4	;volatile
  1236                           
  1237                           ;./my_lib.h: 19:                 OSCCONbits.IRCF1 = 1;
  1238  0373  168F               	bsf	15,5	;volatile
  1239                           
  1240                           ;./my_lib.h: 20:                 OSCCONbits.IRCF2 = 1;
  1241  0374  170F               	bsf	15,6	;volatile
  1242                           
  1243                           ;./my_lib.h: 21:                 break;
  1244  0375  2BB8               	goto	l110
  1245  0376                     l102:	
  1246                           ;./my_lib.h: 23:             case 4:
  1247                           
  1248                           
  1249                           ;./my_lib.h: 24:                 OSCCONbits.IRCF0 = 0;
  1250  0376  120F               	bcf	15,4	;volatile
  1251                           
  1252                           ;./my_lib.h: 25:                 OSCCONbits.IRCF1 = 1;
  1253  0377  168F               	bsf	15,5	;volatile
  1254                           
  1255                           ;./my_lib.h: 26:                 OSCCONbits.IRCF2 = 1;
  1256  0378  170F               	bsf	15,6	;volatile
  1257                           
  1258                           ;./my_lib.h: 27:                 break;
  1259  0379  2BB8               	goto	l110
  1260  037A                     l103:	
  1261                           ;./my_lib.h: 28:             case 2:
  1262                           
  1263                           
  1264                           ;./my_lib.h: 29:                 OSCCONbits.IRCF0 = 1;
  1265  037A  160F               	bsf	15,4	;volatile
  1266                           
  1267                           ;./my_lib.h: 30:                 OSCCONbits.IRCF1 = 0;
  1268  037B  128F               	bcf	15,5	;volatile
  1269                           
  1270                           ;./my_lib.h: 31:                 OSCCONbits.IRCF2 = 1;
  1271  037C  170F               	bsf	15,6	;volatile
  1272                           
  1273                           ;./my_lib.h: 32:                 break;
  1274  037D  2BB8               	goto	l110
  1275  037E                     l104:	
  1276                           ;./my_lib.h: 33:              case 1:
  1277                           
  1278                           
  1279                           ;./my_lib.h: 34:                 OSCCONbits.IRCF0 = 0;
  1280  037E  120F               	bcf	15,4	;volatile
  1281                           
  1282                           ;./my_lib.h: 35:                 OSCCONbits.IRCF1 = 0;
  1283  037F  128F               	bcf	15,5	;volatile
  1284                           
  1285                           ;./my_lib.h: 36:                 OSCCONbits.IRCF2 = 1;
  1286  0380  170F               	bsf	15,6	;volatile
  1287                           
  1288                           ;./my_lib.h: 37:                 break;
  1289  0381  2BB8               	goto	l110
  1290  0382                     l105:	
  1291                           ;./my_lib.h: 38:              case 50:
  1292                           
  1293                           
  1294                           ;./my_lib.h: 39:                 OSCCONbits.IRCF0 = 0;
  1295  0382  120F               	bcf	15,4	;volatile
  1296                           
  1297                           ;./my_lib.h: 40:                 OSCCONbits.IRCF1 = 1;
  1298  0383  168F               	bsf	15,5	;volatile
  1299                           
  1300                           ;./my_lib.h: 41:                 OSCCONbits.IRCF2 = 1;
  1301  0384  170F               	bsf	15,6	;volatile
  1302                           
  1303                           ;./my_lib.h: 42:                 break;
  1304  0385  2BB8               	goto	l110
  1305  0386                     l106:	
  1306                           ;./my_lib.h: 43:              case 25:
  1307                           
  1308                           
  1309                           ;./my_lib.h: 44:                 OSCCONbits.IRCF0 = 0;
  1310  0386  120F               	bcf	15,4	;volatile
  1311                           
  1312                           ;./my_lib.h: 45:                 OSCCONbits.IRCF1 = 1;
  1313  0387  168F               	bsf	15,5	;volatile
  1314                           
  1315                           ;./my_lib.h: 46:                 OSCCONbits.IRCF2 = 0;
  1316  0388  130F               	bcf	15,6	;volatile
  1317                           
  1318                           ;./my_lib.h: 47:                 break;
  1319  0389  2BB8               	goto	l110
  1320  038A                     l107:	
  1321                           ;./my_lib.h: 48:               case 12:
  1322                           
  1323                           
  1324                           ;./my_lib.h: 49:                 OSCCONbits.IRCF0 = 1;
  1325  038A  160F               	bsf	15,4	;volatile
  1326                           
  1327                           ;./my_lib.h: 50:                 OSCCONbits.IRCF1 = 0;
  1328  038B  128F               	bcf	15,5	;volatile
  1329                           
  1330                           ;./my_lib.h: 51:                 OSCCONbits.IRCF2 = 0;
  1331  038C  130F               	bcf	15,6	;volatile
  1332                           
  1333                           ;./my_lib.h: 52:                 break;
  1334  038D  2BB8               	goto	l110
  1335  038E                     l108:	
  1336                           ;./my_lib.h: 53:               case 31:
  1337                           
  1338                           
  1339                           ;./my_lib.h: 54:                 OSCCONbits.IRCF0 = 0;
  1340  038E  120F               	bcf	15,4	;volatile
  1341                           
  1342                           ;./my_lib.h: 55:                 OSCCONbits.IRCF1 = 1;
  1343  038F  168F               	bsf	15,5	;volatile
  1344                           
  1345                           ;./my_lib.h: 56:                 OSCCONbits.IRCF2 = 1;
  1346  0390  170F               	bsf	15,6	;volatile
  1347                           
  1348                           ;./my_lib.h: 57:                 break;
  1349  0391  2BB8               	goto	l110
  1350  0392                     l109:	
  1351                           ;./my_lib.h: 58:               default:
  1352                           
  1353                           
  1354                           ;./my_lib.h: 59:                 OSCCONbits.IRCF0 = 0;
  1355  0392  120F               	bcf	15,4	;volatile
  1356                           
  1357                           ;./my_lib.h: 60:                 OSCCONbits.IRCF1 = 1;
  1358  0393  168F               	bsf	15,5	;volatile
  1359                           
  1360                           ;./my_lib.h: 61:                 OSCCONbits.IRCF2 = 1;
  1361  0394  170F               	bsf	15,6	;volatile
  1362                           
  1363                           ;./my_lib.h: 62:                 break;
  1364  0395  2BB8               	goto	l110
  1365  0396                     l1372:
  1366  0396  0875               	movf	initOsc@frec,w
  1367  0397  00F3               	movwf	??_initOsc
  1368  0398  01F4               	clrf	??_initOsc+1
  1369                           
  1370                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1371                           ; Switch size 1, requested type "simple"
  1372                           ; Number of cases is 1, Range of values is 0 to 0
  1373                           ; switch strategies available:
  1374                           ; Name         Instructions Cycles
  1375                           ; simple_byte            4     3 (average)
  1376                           ; direct_byte           11     8 (fixed)
  1377                           ; jumptable            260     6 (fixed)
  1378                           ;	Chosen strategy is simple_byte
  1379  0399  0874               	movf	??_initOsc+1,w
  1380  039A  3A00               	xorlw	0	; case 0
  1381  039B  1903               	skipnz
  1382  039C  2B9E               	goto	l1990
  1383  039D  2B92               	goto	l109
  1384  039E                     l1990:
  1385                           
  1386                           ; Switch size 1, requested type "simple"
  1387                           ; Number of cases is 8, Range of values is 1 to 50
  1388                           ; switch strategies available:
  1389                           ; Name         Instructions Cycles
  1390                           ; simple_byte           25    13 (average)
  1391                           ; direct_byte          161    11 (fixed)
  1392                           ; jumptable            263     9 (fixed)
  1393                           ;	Chosen strategy is simple_byte
  1394  039E  0873               	movf	??_initOsc,w
  1395  039F  3A01               	xorlw	1	; case 1
  1396  03A0  1903               	skipnz
  1397  03A1  2B7E               	goto	l104
  1398  03A2  3A03               	xorlw	3	; case 2
  1399  03A3  1903               	skipnz
  1400  03A4  2B7A               	goto	l103
  1401  03A5  3A06               	xorlw	6	; case 4
  1402  03A6  1903               	skipnz
  1403  03A7  2B76               	goto	l102
  1404  03A8  3A0C               	xorlw	12	; case 8
  1405  03A9  1903               	skipnz
  1406  03AA  2B72               	goto	l100
  1407  03AB  3A04               	xorlw	4	; case 12
  1408  03AC  1903               	skipnz
  1409  03AD  2B8A               	goto	l107
  1410  03AE  3A15               	xorlw	21	; case 25
  1411  03AF  1903               	skipnz
  1412  03B0  2B86               	goto	l106
  1413  03B1  3A06               	xorlw	6	; case 31
  1414  03B2  1903               	skipnz
  1415  03B3  2B8E               	goto	l108
  1416  03B4  3A2D               	xorlw	45	; case 50
  1417  03B5  1903               	skipnz
  1418  03B6  2B82               	goto	l105
  1419  03B7  2B92               	goto	l109
  1420  03B8                     l110:
  1421  03B8  0008               	return
  1422  03B9                     __end_of_initOsc:
  1423                           
  1424                           	psect	text3
  1425  04A4                     __ptext3:	
  1426 ;; *************** function _initEUSART *****************
  1427 ;; Defined at:
  1428 ;;		line 318 in file "./my_lib.h"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;  tx              1    wreg     unsigned char 
  1431 ;;  rx              1    3[COMMON] unsigned char 
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;  tx              1    4[COMMON] unsigned char 
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      void 
  1436 ;; Registers used:
  1437 ;;		wreg, status,0
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1443 ;;      Params:         1       0       0       0       0
  1444 ;;      Locals:         1       0       0       0       0
  1445 ;;      Temps:          0       0       0       0       0
  1446 ;;      Totals:         2       0       0       0       0
  1447 ;;Total ram usage:        2 bytes
  1448 ;; Hardware stack levels used: 1
  1449 ;; Hardware stack levels required when called: 1
  1450 ;; This function calls:
  1451 ;;		Nothing
  1452 ;; This function is called by:
  1453 ;;		_setup
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           
  1458                           ;psect for function _initEUSART
  1459  04A4                     _initEUSART:
  1460                           
  1461                           ;incstack = 0
  1462                           ; Regs used in _initEUSART: [wreg+status,0]
  1463                           ;initEUSART@tx stored from wreg
  1464  04A4  00F4               	movwf	initEUSART@tx
  1465  04A5                     l1400:
  1466                           
  1467                           ;./my_lib.h: 322:   TXSTAbits.SYNC = 0;
  1468  04A5  1683               	bsf	3,5	;RP0=1, select bank1
  1469  04A6  1303               	bcf	3,6	;RP1=0, select bank1
  1470  04A7  1218               	bcf	24,4	;volatile
  1471                           
  1472                           ;./my_lib.h: 323:   TXSTAbits.BRGH = 1;
  1473  04A8  1518               	bsf	24,2	;volatile
  1474                           
  1475                           ;./my_lib.h: 324:   TXSTAbits.TX9 = 0;
  1476  04A9  1318               	bcf	24,6	;volatile
  1477                           
  1478                           ;./my_lib.h: 325:   TXSTAbits.TXEN= 1;
  1479  04AA  1698               	bsf	24,5	;volatile
  1480                           
  1481                           ;./my_lib.h: 326:   RCSTAbits.SPEN = 1;
  1482  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  1483  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  1484  04AD  1798               	bsf	24,7	;volatile
  1485                           
  1486                           ;./my_lib.h: 329:   RCSTAbits.RX9 = 0;
  1487  04AE  1318               	bcf	24,6	;volatile
  1488                           
  1489                           ;./my_lib.h: 330:   RCSTAbits.CREN = 1;
  1490  04AF  1618               	bsf	24,4	;volatile
  1491                           
  1492                           ;./my_lib.h: 333:     BAUDCTLbits.BRG16 = 0;
  1493  04B0  1683               	bsf	3,5	;RP0=1, select bank3
  1494  04B1  1703               	bsf	3,6	;RP1=1, select bank3
  1495  04B2  1187               	bcf	7,3	;volatile
  1496  04B3                     l1402:
  1497                           
  1498                           ;./my_lib.h: 334:     SPBRG =25;
  1499  04B3  3019               	movlw	25
  1500  04B4  1683               	bsf	3,5	;RP0=1, select bank1
  1501  04B5  1303               	bcf	3,6	;RP1=0, select bank1
  1502  04B6  0099               	movwf	25	;volatile
  1503                           
  1504                           ;./my_lib.h: 335:     SPBRGH = 1;
  1505  04B7  3001               	movlw	1
  1506  04B8  009A               	movwf	26	;volatile
  1507  04B9                     l1404:
  1508                           
  1509                           ;./my_lib.h: 337:     PIE1bits.TXIE =tx;
  1510  04B9  0C74               	rrf	initEUSART@tx,w
  1511  04BA  1C03               	skipc
  1512  04BB  120C               	bcf	12,4	;volatile
  1513  04BC  1803               	skipnc
  1514  04BD  160C               	bsf	12,4	;volatile
  1515  04BE                     l1406:
  1516                           
  1517                           ;./my_lib.h: 338:     PIE1bits.RCIE =rx;
  1518  04BE  0C73               	rrf	initEUSART@rx,w
  1519  04BF  1C03               	skipc
  1520  04C0  128C               	bcf	12,5	;volatile
  1521  04C1  1803               	skipnc
  1522  04C2  168C               	bsf	12,5	;volatile
  1523  04C3                     l184:
  1524  04C3  0008               	return
  1525  04C4                     __end_of_initEUSART:
  1526                           
  1527                           	psect	text4
  1528  0480                     __ptext4:	
  1529 ;; *************** function _initAN *****************
  1530 ;; Defined at:
  1531 ;;		line 67 in file "./my_lib.h"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;  bin             1    wreg     unsigned char 
  1534 ;;  just            1    3[COMMON] unsigned char 
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;  bin             1    5[COMMON] unsigned char 
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  1    wreg      void 
  1539 ;; Registers used:
  1540 ;;		wreg, status,2, status,0
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1546 ;;      Params:         1       0       0       0       0
  1547 ;;      Locals:         1       0       0       0       0
  1548 ;;      Temps:          1       0       0       0       0
  1549 ;;      Totals:         3       0       0       0       0
  1550 ;;Total ram usage:        3 bytes
  1551 ;; Hardware stack levels used: 1
  1552 ;; Hardware stack levels required when called: 1
  1553 ;; This function calls:
  1554 ;;		Nothing
  1555 ;; This function is called by:
  1556 ;;		_setup
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           
  1561                           ;psect for function _initAN
  1562  0480                     _initAN:
  1563                           
  1564                           ;incstack = 0
  1565                           ; Regs used in _initAN: [wreg+status,2+status,0]
  1566                           ;initAN@bin stored from wreg
  1567  0480  00F5               	movwf	initAN@bin
  1568  0481                     l1378:
  1569                           
  1570                           ;./my_lib.h: 69:      ANSEL = bin;
  1571  0481  0875               	movf	initAN@bin,w
  1572  0482  1683               	bsf	3,5	;RP0=1, select bank3
  1573  0483  1703               	bsf	3,6	;RP1=1, select bank3
  1574  0484  0088               	movwf	8	;volatile
  1575  0485                     l1380:
  1576                           
  1577                           ;./my_lib.h: 70:      ANSELH = 0b00000000;
  1578  0485  0189               	clrf	9	;volatile
  1579  0486                     l1382:
  1580                           
  1581                           ;./my_lib.h: 71:      TRISA = bin;
  1582  0486  0875               	movf	initAN@bin,w
  1583  0487  1683               	bsf	3,5	;RP0=1, select bank1
  1584  0488  1303               	bcf	3,6	;RP1=0, select bank1
  1585  0489  0085               	movwf	5	;volatile
  1586  048A                     l1384:
  1587                           
  1588                           ;./my_lib.h: 73:      ADCON0bits.CHS= 0;
  1589  048A  30C3               	movlw	-61
  1590  048B  1283               	bcf	3,5	;RP0=0, select bank0
  1591  048C  1303               	bcf	3,6	;RP1=0, select bank0
  1592  048D  059F               	andwf	31,f	;volatile
  1593  048E                     l1386:
  1594                           
  1595                           ;./my_lib.h: 74:      _delay((unsigned long)((100)*(4000000/4000000.0)));
  1596  048E  3021               	movlw	33
  1597  048F  00F4               	movwf	??_initAN
  1598  0490                     u1007:
  1599  0490  0BF4               	decfsz	??_initAN,f
  1600  0491  2C90               	goto	u1007
  1601  0492                     l1388:
  1602                           
  1603                           ;./my_lib.h: 76:      ADCON0bits.ADON = 1;
  1604  0492  1283               	bcf	3,5	;RP0=0, select bank0
  1605  0493  1303               	bcf	3,6	;RP1=0, select bank0
  1606  0494  141F               	bsf	31,0	;volatile
  1607  0495                     l1390:
  1608                           
  1609                           ;./my_lib.h: 77:      ADCON0bits.ADCS = 1;
  1610  0495  081F               	movf	31,w	;volatile
  1611  0496  393F               	andlw	-193
  1612  0497  3840               	iorlw	64
  1613  0498  009F               	movwf	31	;volatile
  1614  0499                     l1392:
  1615                           
  1616                           ;./my_lib.h: 81:      ADCON1bits.ADFM = just;
  1617  0499  0C73               	rrf	initAN@just,w
  1618  049A  1683               	bsf	3,5	;RP0=1, select bank1
  1619  049B  1303               	bcf	3,6	;RP1=0, select bank1
  1620  049C  1C03               	skipc
  1621  049D  139F               	bcf	31,7	;volatile
  1622  049E  1803               	skipnc
  1623  049F  179F               	bsf	31,7	;volatile
  1624  04A0                     l1394:
  1625                           
  1626                           ;./my_lib.h: 82:      ADCON1bits.VCFG0 = 0;
  1627  04A0  121F               	bcf	31,4	;volatile
  1628  04A1                     l1396:
  1629                           
  1630                           ;./my_lib.h: 83:      ADCON1bits.VCFG1 = 0;
  1631  04A1  129F               	bcf	31,5	;volatile
  1632  04A2                     l1398:
  1633                           
  1634                           ;./my_lib.h: 85:      PIE1bits.ADIE= 1;
  1635  04A2  170C               	bsf	12,6	;volatile
  1636  04A3                     l113:
  1637  04A3  0008               	return
  1638  04A4                     __end_of_initAN:
  1639                           
  1640                           	psect	text5
  1641  0260                     __ptext5:	
  1642 ;; *************** function _decimal *****************
  1643 ;; Defined at:
  1644 ;;		line 204 in file "MainL2.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;  variable        1    wreg     unsigned char 
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;  variable        1    7[BANK0 ] unsigned char 
  1649 ;;  valor           1    8[BANK0 ] unsigned char 
  1650 ;; Return value:  Size  Location     Type
  1651 ;;                  1    wreg      void 
  1652 ;; Registers used:
  1653 ;;		wreg, status,2, status,0, pclath, cstack
  1654 ;; Tracked objects:
  1655 ;;		On entry : 0/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1659 ;;      Params:         0       0       0       0       0
  1660 ;;      Locals:         0       2       0       0       0
  1661 ;;      Temps:          0       3       0       0       0
  1662 ;;      Totals:         0       5       0       0       0
  1663 ;;Total ram usage:        5 bytes
  1664 ;; Hardware stack levels used: 1
  1665 ;; Hardware stack levels required when called: 2
  1666 ;; This function calls:
  1667 ;;		___awdiv
  1668 ;;		___bmul
  1669 ;; This function is called by:
  1670 ;;		_main
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           
  1675                           ;psect for function _decimal
  1676  0260                     _decimal:
  1677                           
  1678                           ;incstack = 0
  1679                           ; Regs used in _decimal: [wreg+status,2+status,0+pclath+cstack]
  1680                           ;decimal@variable stored from wreg
  1681  0260  1283               	bcf	3,5	;RP0=0, select bank0
  1682  0261  1303               	bcf	3,6	;RP1=0, select bank0
  1683  0262  00D5               	movwf	decimal@variable
  1684  0263                     l1874:
  1685  0263  0855               	movf	decimal@variable,w
  1686  0264  00D2               	movwf	??_decimal
  1687  0265  0852               	movf	??_decimal,w
  1688  0266  00D6               	movwf	decimal@valor
  1689  0267                     l1876:
  1690  0267  3064               	movlw	100
  1691  0268  00F3               	movwf	___awdiv@divisor
  1692  0269  3000               	movlw	0
  1693  026A  00F4               	movwf	___awdiv@divisor+1
  1694  026B  0856               	movf	decimal@valor,w
  1695  026C  00D2               	movwf	??_decimal
  1696  026D  01D3               	clrf	??_decimal+1
  1697  026E  0852               	movf	??_decimal,w
  1698  026F  00F5               	movwf	___awdiv@dividend
  1699  0270  0853               	movf	??_decimal+1,w
  1700  0271  00F6               	movwf	___awdiv@dividend+1
  1701  0272  120A  118A  21F7  120A  118A  	fcall	___awdiv
  1702  0277  0873               	movf	?___awdiv,w
  1703  0278  1283               	bcf	3,5	;RP0=0, select bank0
  1704  0279  1303               	bcf	3,6	;RP1=0, select bank0
  1705  027A  00D4               	movwf	??_decimal+2
  1706  027B  0854               	movf	??_decimal+2,w
  1707  027C  00F8               	movwf	_centenas
  1708  027D                     l1878:
  1709  027D  309C               	movlw	156
  1710  027E  00D2               	movwf	??_decimal
  1711  027F  0852               	movf	??_decimal,w
  1712  0280  00F3               	movwf	___bmul@multiplicand
  1713  0281  0878               	movf	_centenas,w
  1714  0282  120A  118A  2516  120A  118A  	fcall	___bmul
  1715  0287  1283               	bcf	3,5	;RP0=0, select bank0
  1716  0288  1303               	bcf	3,6	;RP1=0, select bank0
  1717  0289  0756               	addwf	decimal@valor,w
  1718  028A  00D3               	movwf	??_decimal+1
  1719  028B  0853               	movf	??_decimal+1,w
  1720  028C  00D6               	movwf	decimal@valor
  1721  028D                     l1880:
  1722  028D  300A               	movlw	10
  1723  028E  00F3               	movwf	___awdiv@divisor
  1724  028F  3000               	movlw	0
  1725  0290  00F4               	movwf	___awdiv@divisor+1
  1726  0291  0856               	movf	decimal@valor,w
  1727  0292  00D2               	movwf	??_decimal
  1728  0293  01D3               	clrf	??_decimal+1
  1729  0294  0852               	movf	??_decimal,w
  1730  0295  00F5               	movwf	___awdiv@dividend
  1731  0296  0853               	movf	??_decimal+1,w
  1732  0297  00F6               	movwf	___awdiv@dividend+1
  1733  0298  120A  118A  21F7  120A  118A  	fcall	___awdiv
  1734  029D  0873               	movf	?___awdiv,w
  1735  029E  1283               	bcf	3,5	;RP0=0, select bank0
  1736  029F  1303               	bcf	3,6	;RP1=0, select bank0
  1737  02A0  00D4               	movwf	??_decimal+2
  1738  02A1  0854               	movf	??_decimal+2,w
  1739  02A2  00F9               	movwf	_decenas
  1740  02A3                     l1882:
  1741  02A3  30F6               	movlw	246
  1742  02A4  00D2               	movwf	??_decimal
  1743  02A5  0852               	movf	??_decimal,w
  1744  02A6  00F3               	movwf	___bmul@multiplicand
  1745  02A7  0879               	movf	_decenas,w
  1746  02A8  120A  118A  2516  120A  118A  	fcall	___bmul
  1747  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  1748  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  1749  02AF  0756               	addwf	decimal@valor,w
  1750  02B0  00D3               	movwf	??_decimal+1
  1751  02B1  0853               	movf	??_decimal+1,w
  1752  02B2  00D6               	movwf	decimal@valor
  1753  02B3  0856               	movf	decimal@valor,w
  1754  02B4  00D2               	movwf	??_decimal
  1755  02B5  0852               	movf	??_decimal,w
  1756  02B6  00FA               	movwf	_unidades
  1757  02B7                     l1884:
  1758  02B7  0878               	movf	_centenas,w
  1759  02B8  3E30               	addlw	48
  1760  02B9  00D2               	movwf	??_decimal
  1761  02BA  0852               	movf	??_decimal,w
  1762  02BB  00F8               	movwf	_centenas
  1763  02BC                     l1886:
  1764  02BC  0879               	movf	_decenas,w
  1765  02BD  3E30               	addlw	48
  1766  02BE  00D2               	movwf	??_decimal
  1767  02BF  0852               	movf	??_decimal,w
  1768  02C0  00F9               	movwf	_decenas
  1769  02C1                     l1888:
  1770  02C1  087A               	movf	_unidades,w
  1771  02C2  3E30               	addlw	48
  1772  02C3  00D2               	movwf	??_decimal
  1773  02C4  0852               	movf	??_decimal,w
  1774  02C5  00FA               	movwf	_unidades
  1775  02C6                     l247:
  1776  02C6  0008               	return
  1777  02C7                     __end_of_decimal:
  1778                           
  1779                           	psect	text6
  1780  0516                     __ptext6:	
  1781 ;; *************** function ___bmul *****************
  1782 ;; Defined at:
  1783 ;;		line 4 in file "E:\Microchip\XC8\pic\sources\c90\common\Umul8.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;  multiplier      1    wreg     unsigned char 
  1786 ;;  multiplicand    1    3[COMMON] unsigned char 
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;  multiplier      1    6[COMMON] unsigned char 
  1789 ;;  product         1    5[COMMON] unsigned char 
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      unsigned char 
  1792 ;; Registers used:
  1793 ;;		wreg, status,2, status,0
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1799 ;;      Params:         1       0       0       0       0
  1800 ;;      Locals:         2       0       0       0       0
  1801 ;;      Temps:          1       0       0       0       0
  1802 ;;      Totals:         4       0       0       0       0
  1803 ;;Total ram usage:        4 bytes
  1804 ;; Hardware stack levels used: 1
  1805 ;; Hardware stack levels required when called: 1
  1806 ;; This function calls:
  1807 ;;		Nothing
  1808 ;; This function is called by:
  1809 ;;		_decimal
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           
  1814                           ;psect for function ___bmul
  1815  0516                     ___bmul:
  1816                           
  1817                           ;incstack = 0
  1818                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1819                           ;___bmul@multiplier stored from wreg
  1820  0516  00F6               	movwf	___bmul@multiplier
  1821  0517                     l1430:
  1822  0517  01F5               	clrf	___bmul@product
  1823  0518                     l1432:
  1824  0518  1C76               	btfss	___bmul@multiplier,0
  1825  0519  2D1B               	goto	u431
  1826  051A  2D1C               	goto	u430
  1827  051B                     u431:
  1828  051B  2D20               	goto	l1436
  1829  051C                     u430:
  1830  051C                     l1434:
  1831  051C  0873               	movf	___bmul@multiplicand,w
  1832  051D  00F4               	movwf	??___bmul
  1833  051E  0874               	movf	??___bmul,w
  1834  051F  07F5               	addwf	___bmul@product,f
  1835  0520                     l1436:
  1836  0520  1003               	clrc
  1837  0521  0DF3               	rlf	___bmul@multiplicand,f
  1838  0522                     l1438:
  1839  0522  1003               	clrc
  1840  0523  0CF6               	rrf	___bmul@multiplier,f
  1841  0524  0876               	movf	___bmul@multiplier,w
  1842  0525  1D03               	btfss	3,2
  1843  0526  2D28               	goto	u441
  1844  0527  2D29               	goto	u440
  1845  0528                     u441:
  1846  0528  2D18               	goto	l1432
  1847  0529                     u440:
  1848  0529                     l1440:
  1849  0529  0875               	movf	___bmul@product,w
  1850  052A                     l400:
  1851  052A  0008               	return
  1852  052B                     __end_of___bmul:
  1853                           
  1854                           	psect	text7
  1855  01F7                     __ptext7:	
  1856 ;; *************** function ___awdiv *****************
  1857 ;; Defined at:
  1858 ;;		line 5 in file "E:\Microchip\XC8\pic\sources\c90\common\awdiv.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  divisor         2    3[COMMON] int 
  1861 ;;  dividend        2    5[COMMON] int 
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;  quotient        2    2[BANK0 ] int 
  1864 ;;  sign            1    1[BANK0 ] unsigned char 
  1865 ;;  counter         1    0[BANK0 ] unsigned char 
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  2    3[COMMON] int 
  1868 ;; Registers used:
  1869 ;;		wreg, status,2, status,0
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1875 ;;      Params:         4       0       0       0       0
  1876 ;;      Locals:         0       4       0       0       0
  1877 ;;      Temps:          1       0       0       0       0
  1878 ;;      Totals:         5       4       0       0       0
  1879 ;;Total ram usage:        9 bytes
  1880 ;; Hardware stack levels used: 1
  1881 ;; Hardware stack levels required when called: 1
  1882 ;; This function calls:
  1883 ;;		Nothing
  1884 ;; This function is called by:
  1885 ;;		_decimal
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           
  1890                           ;psect for function ___awdiv
  1891  01F7                     ___awdiv:
  1892  01F7                     l1444:	
  1893                           ;incstack = 0
  1894                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1895                           
  1896  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  1897  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  1898  01F9  01CF               	clrf	___awdiv@sign
  1899  01FA                     l1446:
  1900  01FA  1FF4               	btfss	___awdiv@divisor+1,7
  1901  01FB  29FD               	goto	u451
  1902  01FC  29FE               	goto	u450
  1903  01FD                     u451:
  1904  01FD  2A05               	goto	l1452
  1905  01FE                     u450:
  1906  01FE                     l1448:
  1907  01FE  09F3               	comf	___awdiv@divisor,f
  1908  01FF  09F4               	comf	___awdiv@divisor+1,f
  1909  0200  0AF3               	incf	___awdiv@divisor,f
  1910  0201  1903               	skipnz
  1911  0202  0AF4               	incf	___awdiv@divisor+1,f
  1912  0203                     l1450:
  1913  0203  01CF               	clrf	___awdiv@sign
  1914  0204  0ACF               	incf	___awdiv@sign,f
  1915  0205                     l1452:
  1916  0205  1FF6               	btfss	___awdiv@dividend+1,7
  1917  0206  2A08               	goto	u461
  1918  0207  2A09               	goto	u460
  1919  0208                     u461:
  1920  0208  2A12               	goto	l1458
  1921  0209                     u460:
  1922  0209                     l1454:
  1923  0209  09F5               	comf	___awdiv@dividend,f
  1924  020A  09F6               	comf	___awdiv@dividend+1,f
  1925  020B  0AF5               	incf	___awdiv@dividend,f
  1926  020C  1903               	skipnz
  1927  020D  0AF6               	incf	___awdiv@dividend+1,f
  1928  020E                     l1456:
  1929  020E  3001               	movlw	1
  1930  020F  00F7               	movwf	??___awdiv
  1931  0210  0877               	movf	??___awdiv,w
  1932  0211  06CF               	xorwf	___awdiv@sign,f
  1933  0212                     l1458:
  1934  0212  01D0               	clrf	___awdiv@quotient
  1935  0213  01D1               	clrf	___awdiv@quotient+1
  1936  0214                     l1460:
  1937  0214  0873               	movf	___awdiv@divisor,w
  1938  0215  0474               	iorwf	___awdiv@divisor+1,w
  1939  0216  1903               	btfsc	3,2
  1940  0217  2A19               	goto	u471
  1941  0218  2A1A               	goto	u470
  1942  0219                     u471:
  1943  0219  2A51               	goto	l1480
  1944  021A                     u470:
  1945  021A                     l1462:
  1946  021A  01CE               	clrf	___awdiv@counter
  1947  021B  0ACE               	incf	___awdiv@counter,f
  1948  021C  2A28               	goto	l1468
  1949  021D                     l1464:
  1950  021D  3001               	movlw	1
  1951  021E                     u485:
  1952  021E  1003               	clrc
  1953  021F  0DF3               	rlf	___awdiv@divisor,f
  1954  0220  0DF4               	rlf	___awdiv@divisor+1,f
  1955  0221  3EFF               	addlw	-1
  1956  0222  1D03               	skipz
  1957  0223  2A1E               	goto	u485
  1958  0224                     l1466:
  1959  0224  3001               	movlw	1
  1960  0225  00F7               	movwf	??___awdiv
  1961  0226  0877               	movf	??___awdiv,w
  1962  0227  07CE               	addwf	___awdiv@counter,f
  1963  0228                     l1468:
  1964  0228  1FF4               	btfss	___awdiv@divisor+1,7
  1965  0229  2A2B               	goto	u491
  1966  022A  2A2C               	goto	u490
  1967  022B                     u491:
  1968  022B  2A1D               	goto	l1464
  1969  022C                     u490:
  1970  022C                     l1470:
  1971  022C  3001               	movlw	1
  1972  022D                     u505:
  1973  022D  1003               	clrc
  1974  022E  0DD0               	rlf	___awdiv@quotient,f
  1975  022F  0DD1               	rlf	___awdiv@quotient+1,f
  1976  0230  3EFF               	addlw	-1
  1977  0231  1D03               	skipz
  1978  0232  2A2D               	goto	u505
  1979  0233  0874               	movf	___awdiv@divisor+1,w
  1980  0234  0276               	subwf	___awdiv@dividend+1,w
  1981  0235  1D03               	skipz
  1982  0236  2A39               	goto	u515
  1983  0237  0873               	movf	___awdiv@divisor,w
  1984  0238  0275               	subwf	___awdiv@dividend,w
  1985  0239                     u515:
  1986  0239  1C03               	skipc
  1987  023A  2A3C               	goto	u511
  1988  023B  2A3D               	goto	u510
  1989  023C                     u511:
  1990  023C  2A44               	goto	l1476
  1991  023D                     u510:
  1992  023D                     l1472:
  1993  023D  0873               	movf	___awdiv@divisor,w
  1994  023E  02F5               	subwf	___awdiv@dividend,f
  1995  023F  0874               	movf	___awdiv@divisor+1,w
  1996  0240  1C03               	skipc
  1997  0241  03F6               	decf	___awdiv@dividend+1,f
  1998  0242  02F6               	subwf	___awdiv@dividend+1,f
  1999  0243                     l1474:
  2000  0243  1450               	bsf	___awdiv@quotient,0
  2001  0244                     l1476:
  2002  0244  3001               	movlw	1
  2003  0245                     u525:
  2004  0245  1003               	clrc
  2005  0246  0CF4               	rrf	___awdiv@divisor+1,f
  2006  0247  0CF3               	rrf	___awdiv@divisor,f
  2007  0248  3EFF               	addlw	-1
  2008  0249  1D03               	skipz
  2009  024A  2A45               	goto	u525
  2010  024B                     l1478:
  2011  024B  3001               	movlw	1
  2012  024C  02CE               	subwf	___awdiv@counter,f
  2013  024D  1D03               	btfss	3,2
  2014  024E  2A50               	goto	u531
  2015  024F  2A51               	goto	u530
  2016  0250                     u531:
  2017  0250  2A2C               	goto	l1470
  2018  0251                     u530:
  2019  0251                     l1480:
  2020  0251  084F               	movf	___awdiv@sign,w
  2021  0252  1903               	btfsc	3,2
  2022  0253  2A55               	goto	u541
  2023  0254  2A56               	goto	u540
  2024  0255                     u541:
  2025  0255  2A5B               	goto	l1484
  2026  0256                     u540:
  2027  0256                     l1482:
  2028  0256  09D0               	comf	___awdiv@quotient,f
  2029  0257  09D1               	comf	___awdiv@quotient+1,f
  2030  0258  0AD0               	incf	___awdiv@quotient,f
  2031  0259  1903               	skipnz
  2032  025A  0AD1               	incf	___awdiv@quotient+1,f
  2033  025B                     l1484:
  2034  025B  0851               	movf	___awdiv@quotient+1,w
  2035  025C  00F4               	movwf	?___awdiv+1
  2036  025D  0850               	movf	___awdiv@quotient,w
  2037  025E  00F3               	movwf	?___awdiv
  2038  025F                     l527:
  2039  025F  0008               	return
  2040  0260                     __end_of___awdiv:
  2041                           
  2042                           	psect	text8
  2043  002E                     __ptext8:	
  2044 ;; *************** function _chselect *****************
  2045 ;; Defined at:
  2046 ;;		line 138 in file "./my_lib.h"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  cant            1    wreg     unsigned char 
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;  cant            1    6[COMMON] unsigned char 
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      void 
  2053 ;; Registers used:
  2054 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2060 ;;      Params:         0       0       0       0       0
  2061 ;;      Locals:         1       0       0       0       0
  2062 ;;      Temps:          3       0       0       0       0
  2063 ;;      Totals:         4       0       0       0       0
  2064 ;;Total ram usage:        4 bytes
  2065 ;; Hardware stack levels used: 1
  2066 ;; Hardware stack levels required when called: 1
  2067 ;; This function calls:
  2068 ;;		Nothing
  2069 ;; This function is called by:
  2070 ;;		_main
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           
  2075                           ;psect for function _chselect
  2076  002E                     _chselect:
  2077                           
  2078                           ;incstack = 0
  2079                           ; Regs used in _chselect: [wreg-fsr0h+status,2+status,0]
  2080                           ;chselect@cant stored from wreg
  2081  002E  00F6               	movwf	chselect@cant
  2082  002F                     l1488:
  2083                           
  2084                           ;./my_lib.h: 139:     if(ADCON0bits.GO == 0){
  2085  002F  1283               	bcf	3,5	;RP0=0, select bank0
  2086  0030  1303               	bcf	3,6	;RP1=0, select bank0
  2087  0031  189F               	btfsc	31,1	;volatile
  2088  0032  2834               	goto	u551
  2089  0033  2835               	goto	u550
  2090  0034                     u551:
  2091  0034  2925               	goto	l1576
  2092  0035                     u550:
  2093  0035  28EE               	goto	l1574
  2094  0036                     l1492:
  2095                           
  2096                           ;./my_lib.h: 143:             if (cant == 1){
  2097  0036  0376               	decf	chselect@cant,w
  2098  0037  1D03               	btfss	3,2
  2099  0038  283A               	goto	u561
  2100  0039  283B               	goto	u560
  2101  003A                     u561:
  2102  003A  283E               	goto	l1496
  2103  003B                     u560:
  2104  003B                     l1494:
  2105                           
  2106                           ;./my_lib.h: 144:                 ADCON0bits.CHS = 0;
  2107  003B  30C3               	movlw	-61
  2108  003C  059F               	andwf	31,f	;volatile
  2109                           
  2110                           ;./my_lib.h: 145:             }
  2111  003D  2925               	goto	l1576
  2112  003E                     l1496:
  2113                           
  2114                           ;./my_lib.h: 147:                 ADCON0bits.CHS = 1;
  2115  003E  081F               	movf	31,w	;volatile
  2116  003F  39C3               	andlw	-61
  2117  0040  3804               	iorlw	4
  2118  0041  009F               	movwf	31	;volatile
  2119  0042  2925               	goto	l1576
  2120  0043                     l1498:
  2121                           
  2122                           ;./my_lib.h: 151:             if (cant == 2){
  2123  0043  3002               	movlw	2
  2124  0044  0676               	xorwf	chselect@cant,w
  2125  0045  1D03               	btfss	3,2
  2126  0046  2848               	goto	u571
  2127  0047  2849               	goto	u570
  2128  0048                     u571:
  2129  0048  284C               	goto	l1502
  2130  0049                     u570:
  2131  0049                     l1500:
  2132                           
  2133                           ;./my_lib.h: 152:                 ADCON0bits.CHS = 0;
  2134  0049  30C3               	movlw	-61
  2135  004A  059F               	andwf	31,f	;volatile
  2136                           
  2137                           ;./my_lib.h: 153:             }
  2138  004B  2925               	goto	l1576
  2139  004C                     l1502:
  2140                           
  2141                           ;./my_lib.h: 155:                 ADCON0bits.CHS = 2;
  2142  004C  081F               	movf	31,w	;volatile
  2143  004D  39C3               	andlw	-61
  2144  004E  3808               	iorlw	8
  2145  004F  009F               	movwf	31	;volatile
  2146  0050  2925               	goto	l1576
  2147  0051                     l1504:
  2148                           
  2149                           ;./my_lib.h: 159:             if (cant == 3){
  2150  0051  3003               	movlw	3
  2151  0052  0676               	xorwf	chselect@cant,w
  2152  0053  1D03               	btfss	3,2
  2153  0054  2856               	goto	u581
  2154  0055  2857               	goto	u580
  2155  0056                     u581:
  2156  0056  285A               	goto	l1508
  2157  0057                     u580:
  2158  0057                     l1506:
  2159                           
  2160                           ;./my_lib.h: 160:                 ADCON0bits.CHS = 0;
  2161  0057  30C3               	movlw	-61
  2162  0058  059F               	andwf	31,f	;volatile
  2163                           
  2164                           ;./my_lib.h: 161:             }
  2165  0059  2925               	goto	l1576
  2166  005A                     l1508:
  2167                           
  2168                           ;./my_lib.h: 163:                 ADCON0bits.CHS = 3;
  2169  005A  081F               	movf	31,w	;volatile
  2170  005B  39C3               	andlw	-61
  2171  005C  380C               	iorlw	12
  2172  005D  009F               	movwf	31	;volatile
  2173  005E  2925               	goto	l1576
  2174  005F                     l1510:
  2175                           
  2176                           ;./my_lib.h: 167:             if (cant == 4){
  2177  005F  3004               	movlw	4
  2178  0060  0676               	xorwf	chselect@cant,w
  2179  0061  1D03               	btfss	3,2
  2180  0062  2864               	goto	u591
  2181  0063  2865               	goto	u590
  2182  0064                     u591:
  2183  0064  2868               	goto	l1514
  2184  0065                     u590:
  2185  0065                     l1512:
  2186                           
  2187                           ;./my_lib.h: 168:                 ADCON0bits.CHS = 0;
  2188  0065  30C3               	movlw	-61
  2189  0066  059F               	andwf	31,f	;volatile
  2190                           
  2191                           ;./my_lib.h: 169:             }
  2192  0067  2925               	goto	l1576
  2193  0068                     l1514:
  2194                           
  2195                           ;./my_lib.h: 171:                 ADCON0bits.CHS = 4;
  2196  0068  081F               	movf	31,w	;volatile
  2197  0069  39C3               	andlw	-61
  2198  006A  3810               	iorlw	16
  2199  006B  009F               	movwf	31	;volatile
  2200  006C  2925               	goto	l1576
  2201  006D                     l1516:
  2202                           
  2203                           ;./my_lib.h: 175:             if (cant == 5){
  2204  006D  3005               	movlw	5
  2205  006E  0676               	xorwf	chselect@cant,w
  2206  006F  1D03               	btfss	3,2
  2207  0070  2872               	goto	u601
  2208  0071  2873               	goto	u600
  2209  0072                     u601:
  2210  0072  2876               	goto	l1520
  2211  0073                     u600:
  2212  0073                     l1518:
  2213                           
  2214                           ;./my_lib.h: 176:                 ADCON0bits.CHS = 0;
  2215  0073  30C3               	movlw	-61
  2216  0074  059F               	andwf	31,f	;volatile
  2217                           
  2218                           ;./my_lib.h: 177:             }
  2219  0075  2925               	goto	l1576
  2220  0076                     l1520:
  2221                           
  2222                           ;./my_lib.h: 179:                 ADCON0bits.CHS = 5;
  2223  0076  081F               	movf	31,w	;volatile
  2224  0077  39C3               	andlw	-61
  2225  0078  3814               	iorlw	20
  2226  0079  009F               	movwf	31	;volatile
  2227  007A  2925               	goto	l1576
  2228  007B                     l1522:
  2229                           
  2230                           ;./my_lib.h: 183:             if (cant == 6){
  2231  007B  3006               	movlw	6
  2232  007C  0676               	xorwf	chselect@cant,w
  2233  007D  1D03               	btfss	3,2
  2234  007E  2880               	goto	u611
  2235  007F  2881               	goto	u610
  2236  0080                     u611:
  2237  0080  2884               	goto	l1526
  2238  0081                     u610:
  2239  0081                     l1524:
  2240                           
  2241                           ;./my_lib.h: 184:                 ADCON0bits.CHS = 0;
  2242  0081  30C3               	movlw	-61
  2243  0082  059F               	andwf	31,f	;volatile
  2244                           
  2245                           ;./my_lib.h: 185:             }
  2246  0083  2925               	goto	l1576
  2247  0084                     l1526:
  2248                           
  2249                           ;./my_lib.h: 187:                 ADCON0bits.CHS = 6;
  2250  0084  081F               	movf	31,w	;volatile
  2251  0085  39C3               	andlw	-61
  2252  0086  3818               	iorlw	24
  2253  0087  009F               	movwf	31	;volatile
  2254  0088  2925               	goto	l1576
  2255  0089                     l1528:
  2256                           
  2257                           ;./my_lib.h: 191:             if (cant == 7){
  2258  0089  3007               	movlw	7
  2259  008A  0676               	xorwf	chselect@cant,w
  2260  008B  1D03               	btfss	3,2
  2261  008C  288E               	goto	u621
  2262  008D  288F               	goto	u620
  2263  008E                     u621:
  2264  008E  2892               	goto	l1532
  2265  008F                     u620:
  2266  008F                     l1530:
  2267                           
  2268                           ;./my_lib.h: 192:                 ADCON0bits.CHS = 0;
  2269  008F  30C3               	movlw	-61
  2270  0090  059F               	andwf	31,f	;volatile
  2271                           
  2272                           ;./my_lib.h: 193:             }
  2273  0091  2925               	goto	l1576
  2274  0092                     l1532:
  2275                           
  2276                           ;./my_lib.h: 195:                 ADCON0bits.CHS = 7;
  2277  0092  081F               	movf	31,w	;volatile
  2278  0093  39C3               	andlw	-61
  2279  0094  381C               	iorlw	28
  2280  0095  009F               	movwf	31	;volatile
  2281  0096  2925               	goto	l1576
  2282  0097                     l1534:
  2283                           
  2284                           ;./my_lib.h: 199:             if (cant == 8){
  2285  0097  3008               	movlw	8
  2286  0098  0676               	xorwf	chselect@cant,w
  2287  0099  1D03               	btfss	3,2
  2288  009A  289C               	goto	u631
  2289  009B  289D               	goto	u630
  2290  009C                     u631:
  2291  009C  28A0               	goto	l1538
  2292  009D                     u630:
  2293  009D                     l1536:
  2294                           
  2295                           ;./my_lib.h: 200:                 ADCON0bits.CHS = 0;
  2296  009D  30C3               	movlw	-61
  2297  009E  059F               	andwf	31,f	;volatile
  2298                           
  2299                           ;./my_lib.h: 201:             }
  2300  009F  2925               	goto	l1576
  2301  00A0                     l1538:
  2302                           
  2303                           ;./my_lib.h: 203:                 ADCON0bits.CHS = 8;
  2304  00A0  081F               	movf	31,w	;volatile
  2305  00A1  39C3               	andlw	-61
  2306  00A2  3820               	iorlw	32
  2307  00A3  009F               	movwf	31	;volatile
  2308  00A4  2925               	goto	l1576
  2309  00A5                     l1540:
  2310                           
  2311                           ;./my_lib.h: 207:             if (cant == 9){
  2312  00A5  3009               	movlw	9
  2313  00A6  0676               	xorwf	chselect@cant,w
  2314  00A7  1D03               	btfss	3,2
  2315  00A8  28AA               	goto	u641
  2316  00A9  28AB               	goto	u640
  2317  00AA                     u641:
  2318  00AA  28AE               	goto	l1544
  2319  00AB                     u640:
  2320  00AB                     l1542:
  2321                           
  2322                           ;./my_lib.h: 208:                 ADCON0bits.CHS = 0;
  2323  00AB  30C3               	movlw	-61
  2324  00AC  059F               	andwf	31,f	;volatile
  2325                           
  2326                           ;./my_lib.h: 209:             }
  2327  00AD  2925               	goto	l1576
  2328  00AE                     l1544:
  2329                           
  2330                           ;./my_lib.h: 211:                 ADCON0bits.CHS = 9;
  2331  00AE  081F               	movf	31,w	;volatile
  2332  00AF  39C3               	andlw	-61
  2333  00B0  3824               	iorlw	36
  2334  00B1  009F               	movwf	31	;volatile
  2335  00B2  2925               	goto	l1576
  2336  00B3                     l1546:
  2337                           
  2338                           ;./my_lib.h: 215:             if (cant == 10){
  2339  00B3  300A               	movlw	10
  2340  00B4  0676               	xorwf	chselect@cant,w
  2341  00B5  1D03               	btfss	3,2
  2342  00B6  28B8               	goto	u651
  2343  00B7  28B9               	goto	u650
  2344  00B8                     u651:
  2345  00B8  28BC               	goto	l1550
  2346  00B9                     u650:
  2347  00B9                     l1548:
  2348                           
  2349                           ;./my_lib.h: 216:                 ADCON0bits.CHS = 0;
  2350  00B9  30C3               	movlw	-61
  2351  00BA  059F               	andwf	31,f	;volatile
  2352                           
  2353                           ;./my_lib.h: 217:             }
  2354  00BB  2925               	goto	l1576
  2355  00BC                     l1550:
  2356                           
  2357                           ;./my_lib.h: 219:                 ADCON0bits.CHS = 10;
  2358  00BC  081F               	movf	31,w	;volatile
  2359  00BD  39C3               	andlw	-61
  2360  00BE  3828               	iorlw	40
  2361  00BF  009F               	movwf	31	;volatile
  2362  00C0  2925               	goto	l1576
  2363  00C1                     l1552:
  2364                           
  2365                           ;./my_lib.h: 223:             if (cant == 11){
  2366  00C1  300B               	movlw	11
  2367  00C2  0676               	xorwf	chselect@cant,w
  2368  00C3  1D03               	btfss	3,2
  2369  00C4  28C6               	goto	u661
  2370  00C5  28C7               	goto	u660
  2371  00C6                     u661:
  2372  00C6  28CA               	goto	l1556
  2373  00C7                     u660:
  2374  00C7                     l1554:
  2375                           
  2376                           ;./my_lib.h: 224:                 ADCON0bits.CHS = 0;
  2377  00C7  30C3               	movlw	-61
  2378  00C8  059F               	andwf	31,f	;volatile
  2379                           
  2380                           ;./my_lib.h: 225:             }
  2381  00C9  2925               	goto	l1576
  2382  00CA                     l1556:
  2383                           
  2384                           ;./my_lib.h: 227:                 ADCON0bits.CHS = 11;
  2385  00CA  081F               	movf	31,w	;volatile
  2386  00CB  39C3               	andlw	-61
  2387  00CC  382C               	iorlw	44
  2388  00CD  009F               	movwf	31	;volatile
  2389  00CE  2925               	goto	l1576
  2390  00CF                     l1558:
  2391                           
  2392                           ;./my_lib.h: 231:             if (cant == 12){
  2393  00CF  300C               	movlw	12
  2394  00D0  0676               	xorwf	chselect@cant,w
  2395  00D1  1D03               	btfss	3,2
  2396  00D2  28D4               	goto	u671
  2397  00D3  28D5               	goto	u670
  2398  00D4                     u671:
  2399  00D4  28D8               	goto	l1562
  2400  00D5                     u670:
  2401  00D5                     l1560:
  2402                           
  2403                           ;./my_lib.h: 232:                 ADCON0bits.CHS = 0;
  2404  00D5  30C3               	movlw	-61
  2405  00D6  059F               	andwf	31,f	;volatile
  2406                           
  2407                           ;./my_lib.h: 233:             }
  2408  00D7  2925               	goto	l1576
  2409  00D8                     l1562:
  2410                           
  2411                           ;./my_lib.h: 235:                 ADCON0bits.CHS = 12;
  2412  00D8  081F               	movf	31,w	;volatile
  2413  00D9  39C3               	andlw	-61
  2414  00DA  3830               	iorlw	48
  2415  00DB  009F               	movwf	31	;volatile
  2416  00DC  2925               	goto	l1576
  2417  00DD                     l1564:
  2418                           
  2419                           ;./my_lib.h: 239:             if (cant == 13){
  2420  00DD  300D               	movlw	13
  2421  00DE  0676               	xorwf	chselect@cant,w
  2422  00DF  1D03               	btfss	3,2
  2423  00E0  28E2               	goto	u681
  2424  00E1  28E3               	goto	u680
  2425  00E2                     u681:
  2426  00E2  28E6               	goto	l1568
  2427  00E3                     u680:
  2428  00E3                     l1566:
  2429                           
  2430                           ;./my_lib.h: 240:                 ADCON0bits.CHS = 0;
  2431  00E3  30C3               	movlw	-61
  2432  00E4  059F               	andwf	31,f	;volatile
  2433                           
  2434                           ;./my_lib.h: 241:             }
  2435  00E5  2925               	goto	l1576
  2436  00E6                     l1568:
  2437                           
  2438                           ;./my_lib.h: 243:                 ADCON0bits.CHS = 13;
  2439  00E6  081F               	movf	31,w	;volatile
  2440  00E7  39C3               	andlw	-61
  2441  00E8  3834               	iorlw	52
  2442  00E9  009F               	movwf	31	;volatile
  2443  00EA  2925               	goto	l1576
  2444  00EB                     l1570:
  2445                           
  2446                           ;./my_lib.h: 247:                 ADCON0bits.CHS = 0;
  2447  00EB  30C3               	movlw	-61
  2448  00EC  059F               	andwf	31,f	;volatile
  2449                           
  2450                           ;./my_lib.h: 249:             break;
  2451  00ED  2925               	goto	l1576
  2452  00EE                     l1574:
  2453  00EE  0C1F               	rrf	31,w	;volatile
  2454  00EF  00F3               	movwf	??_chselect
  2455  00F0  0C73               	rrf	??_chselect,w
  2456  00F1  390F               	andlw	15
  2457  00F2  00F4               	movwf	??_chselect+1
  2458  00F3  01F5               	clrf	??_chselect+2
  2459                           
  2460                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2461                           ; Switch size 1, requested type "simple"
  2462                           ; Number of cases is 1, Range of values is 0 to 0
  2463                           ; switch strategies available:
  2464                           ; Name         Instructions Cycles
  2465                           ; simple_byte            4     3 (average)
  2466                           ; direct_byte           11     8 (fixed)
  2467                           ; jumptable            260     6 (fixed)
  2468                           ;	Chosen strategy is simple_byte
  2469  00F4  0875               	movf	??_chselect+2,w
  2470  00F5  3A00               	xorlw	0	; case 0
  2471  00F6  1903               	skipnz
  2472  00F7  28F9               	goto	l1992
  2473  00F8  2925               	goto	l1576
  2474  00F9                     l1992:
  2475                           
  2476                           ; Switch size 1, requested type "simple"
  2477                           ; Number of cases is 14, Range of values is 0 to 13
  2478                           ; switch strategies available:
  2479                           ; Name         Instructions Cycles
  2480                           ; simple_byte           43    22 (average)
  2481                           ; direct_byte           50     8 (fixed)
  2482                           ; jumptable            260     6 (fixed)
  2483                           ;	Chosen strategy is simple_byte
  2484  00F9  0874               	movf	??_chselect+1,w
  2485  00FA  3A00               	xorlw	0	; case 0
  2486  00FB  1903               	skipnz
  2487  00FC  2836               	goto	l1492
  2488  00FD  3A01               	xorlw	1	; case 1
  2489  00FE  1903               	skipnz
  2490  00FF  2843               	goto	l1498
  2491  0100  3A03               	xorlw	3	; case 2
  2492  0101  1903               	skipnz
  2493  0102  2851               	goto	l1504
  2494  0103  3A01               	xorlw	1	; case 3
  2495  0104  1903               	skipnz
  2496  0105  285F               	goto	l1510
  2497  0106  3A07               	xorlw	7	; case 4
  2498  0107  1903               	skipnz
  2499  0108  286D               	goto	l1516
  2500  0109  3A01               	xorlw	1	; case 5
  2501  010A  1903               	skipnz
  2502  010B  287B               	goto	l1522
  2503  010C  3A03               	xorlw	3	; case 6
  2504  010D  1903               	skipnz
  2505  010E  2889               	goto	l1528
  2506  010F  3A01               	xorlw	1	; case 7
  2507  0110  1903               	skipnz
  2508  0111  2897               	goto	l1534
  2509  0112  3A0F               	xorlw	15	; case 8
  2510  0113  1903               	skipnz
  2511  0114  28A5               	goto	l1540
  2512  0115  3A01               	xorlw	1	; case 9
  2513  0116  1903               	skipnz
  2514  0117  28B3               	goto	l1546
  2515  0118  3A03               	xorlw	3	; case 10
  2516  0119  1903               	skipnz
  2517  011A  28C1               	goto	l1552
  2518  011B  3A01               	xorlw	1	; case 11
  2519  011C  1903               	skipnz
  2520  011D  28CF               	goto	l1558
  2521  011E  3A07               	xorlw	7	; case 12
  2522  011F  1903               	skipnz
  2523  0120  28DD               	goto	l1564
  2524  0121  3A01               	xorlw	1	; case 13
  2525  0122  1903               	skipnz
  2526  0123  28EB               	goto	l1570
  2527  0124  2925               	goto	l1576
  2528  0125                     l1576:
  2529                           
  2530                           ;./my_lib.h: 253:     _delay((unsigned long)((150)*(4000000/4000000.0)));
  2531  0125  3031               	movlw	49
  2532  0126  00F3               	movwf	??_chselect
  2533  0127                     u1017:
  2534  0127  0BF3               	decfsz	??_chselect,f
  2535  0128  2927               	goto	u1017
  2536  0129  292A               	nop2
  2537  012A                     l1578:
  2538                           
  2539                           ;./my_lib.h: 254:     ADCON0bits.GO = 1;
  2540  012A  1283               	bcf	3,5	;RP0=0, select bank0
  2541  012B  1303               	bcf	3,6	;RP1=0, select bank0
  2542  012C  149F               	bsf	31,1	;volatile
  2543  012D                     l159:
  2544  012D  0008               	return
  2545  012E                     __end_of_chselect:
  2546                           
  2547                           	psect	text9
  2548  0457                     __ptext9:	
  2549 ;; *************** function _Lcd_Write_String *****************
  2550 ;; Defined at:
  2551 ;;		line 77 in file "LCD.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  a               1    wreg     PTR unsigned char 
  2554 ;;		 -> STR_2(4), STR_1(17), 
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2557 ;;		 -> STR_2(4), STR_1(17), 
  2558 ;;  i               2    0[BANK0 ] int 
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  1    wreg      void 
  2561 ;; Registers used:
  2562 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2568 ;;      Params:         0       0       0       0       0
  2569 ;;      Locals:         0       3       0       0       0
  2570 ;;      Temps:          0       0       0       0       0
  2571 ;;      Totals:         0       3       0       0       0
  2572 ;;Total ram usage:        3 bytes
  2573 ;; Hardware stack levels used: 1
  2574 ;; Hardware stack levels required when called: 3
  2575 ;; This function calls:
  2576 ;;		_Lcd_Write_Char
  2577 ;; This function is called by:
  2578 ;;		_main
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           
  2583                           ;psect for function _Lcd_Write_String
  2584  0457                     _Lcd_Write_String:
  2585                           
  2586                           ;incstack = 0
  2587                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2588                           ;Lcd_Write_String@a stored from wreg
  2589  0457  1283               	bcf	3,5	;RP0=0, select bank0
  2590  0458  1303               	bcf	3,6	;RP1=0, select bank0
  2591  0459  00D0               	movwf	Lcd_Write_String@a
  2592  045A                     l1866:
  2593                           
  2594                           ;LCD.c: 78:     int i;;LCD.c: 79:     for (i = 0; a[i] != '\0'; i++)
  2595  045A  01CE               	clrf	Lcd_Write_String@i
  2596  045B  01CF               	clrf	Lcd_Write_String@i+1
  2597  045C  2C72               	goto	l1872
  2598  045D                     l1868:
  2599                           
  2600                           ;LCD.c: 80:         Lcd_Write_Char(a[i]);
  2601  045D  084E               	movf	Lcd_Write_String@i,w
  2602  045E  0750               	addwf	Lcd_Write_String@a,w
  2603  045F  0084               	movwf	4
  2604  0460  120A  118A  24E1  120A  118A  	fcall	stringdir
  2605  0465  120A  118A  24C4  120A  118A  	fcall	_Lcd_Write_Char
  2606  046A                     l1870:
  2607  046A  3001               	movlw	1
  2608  046B  1283               	bcf	3,5	;RP0=0, select bank0
  2609  046C  1303               	bcf	3,6	;RP1=0, select bank0
  2610  046D  07CE               	addwf	Lcd_Write_String@i,f
  2611  046E  1803               	skipnc
  2612  046F  0ACF               	incf	Lcd_Write_String@i+1,f
  2613  0470  3000               	movlw	0
  2614  0471  07CF               	addwf	Lcd_Write_String@i+1,f
  2615  0472                     l1872:
  2616  0472  084E               	movf	Lcd_Write_String@i,w
  2617  0473  0750               	addwf	Lcd_Write_String@a,w
  2618  0474  0084               	movwf	4
  2619  0475  120A  118A  24E1  120A  118A  	fcall	stringdir
  2620  047A  3A00               	xorlw	0
  2621  047B  1D03               	skipz
  2622  047C  2C7E               	goto	u891
  2623  047D  2C7F               	goto	u890
  2624  047E                     u891:
  2625  047E  2C5D               	goto	l1868
  2626  047F                     u890:
  2627  047F                     l282:
  2628  047F  0008               	return
  2629  0480                     __end_of_Lcd_Write_String:
  2630                           
  2631                           	psect	text10
  2632  04C4                     __ptext10:	
  2633 ;; *************** function _Lcd_Write_Char *****************
  2634 ;; Defined at:
  2635 ;;		line 65 in file "LCD.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;  a               1    wreg     unsigned char 
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;  a               1    5[COMMON] unsigned char 
  2640 ;;  y               1    7[COMMON] unsigned char 
  2641 ;;  temp            1    6[COMMON] unsigned char 
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  1    wreg      void 
  2644 ;; Registers used:
  2645 ;;		wreg, status,2, status,0, pclath, cstack
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2651 ;;      Params:         0       0       0       0       0
  2652 ;;      Locals:         3       0       0       0       0
  2653 ;;      Temps:          1       0       0       0       0
  2654 ;;      Totals:         4       0       0       0       0
  2655 ;;Total ram usage:        4 bytes
  2656 ;; Hardware stack levels used: 1
  2657 ;; Hardware stack levels required when called: 2
  2658 ;; This function calls:
  2659 ;;		_Lcd_Port
  2660 ;; This function is called by:
  2661 ;;		_main
  2662 ;;		_Lcd_Write_String
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           
  2667                           ;psect for function _Lcd_Write_Char
  2668  04C4                     _Lcd_Write_Char:
  2669                           
  2670                           ;incstack = 0
  2671                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2672                           ;Lcd_Write_Char@a stored from wreg
  2673  04C4  00F5               	movwf	Lcd_Write_Char@a
  2674  04C5                     l1812:
  2675                           
  2676                           ;LCD.c: 66:     char temp, y;;LCD.c: 67:     temp = a;
  2677  04C5  0875               	movf	Lcd_Write_Char@a,w
  2678  04C6  00F4               	movwf	??_Lcd_Write_Char
  2679  04C7  0874               	movf	??_Lcd_Write_Char,w
  2680  04C8  00F6               	movwf	Lcd_Write_Char@temp
  2681                           
  2682                           ;LCD.c: 68:     y = temp;
  2683  04C9  0876               	movf	Lcd_Write_Char@temp,w
  2684  04CA  00F4               	movwf	??_Lcd_Write_Char
  2685  04CB  0874               	movf	??_Lcd_Write_Char,w
  2686  04CC  00F7               	movwf	Lcd_Write_Char@y
  2687  04CD                     l1814:
  2688                           
  2689                           ;LCD.c: 69:     RE0 = 1;
  2690  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  2691  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  2692  04CF  1409               	bsf	9,0	;volatile
  2693  04D0                     l1816:
  2694                           
  2695                           ;LCD.c: 70:     Lcd_Port(y);
  2696  04D0  0877               	movf	Lcd_Write_Char@y,w
  2697  04D1  120A  118A  254B  120A  118A  	fcall	_Lcd_Port
  2698  04D6                     l1818:
  2699                           
  2700                           ;LCD.c: 71:     RE1 = 1;
  2701  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  2702  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  2703  04D8  1489               	bsf	9,1	;volatile
  2704  04D9                     l1820:
  2705                           
  2706                           ;LCD.c: 72:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2707  04D9  300D               	movlw	13
  2708  04DA  00F4               	movwf	??_Lcd_Write_Char
  2709  04DB                     u1027:
  2710  04DB  0BF4               	decfsz	??_Lcd_Write_Char,f
  2711  04DC  2CDB               	goto	u1027
  2712  04DD                     l1822:
  2713                           
  2714                           ;LCD.c: 73:     RE1 = 0;
  2715  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2716  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2717  04DF  1089               	bcf	9,1	;volatile
  2718  04E0                     l276:
  2719  04E0  0008               	return
  2720  04E1                     __end_of_Lcd_Write_Char:
  2721                           
  2722                           	psect	text11
  2723  02C7                     __ptext11:	
  2724 ;; *************** function _Lcd_Set_Cursor *****************
  2725 ;; Defined at:
  2726 ;;		line 30 in file "LCD.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  a               1    wreg     unsigned char 
  2729 ;;  b               1    7[COMMON] unsigned char 
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;  a               1    2[BANK0 ] unsigned char 
  2732 ;;  temp            1    5[BANK0 ] unsigned char 
  2733 ;;  y               1    4[BANK0 ] unsigned char 
  2734 ;;  z               1    3[BANK0 ] unsigned char 
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  1    wreg      void 
  2737 ;; Registers used:
  2738 ;;		wreg, status,2, status,0, pclath, cstack
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2744 ;;      Params:         1       0       0       0       0
  2745 ;;      Locals:         0       4       0       0       0
  2746 ;;      Temps:          0       2       0       0       0
  2747 ;;      Totals:         1       6       0       0       0
  2748 ;;Total ram usage:        7 bytes
  2749 ;; Hardware stack levels used: 1
  2750 ;; Hardware stack levels required when called: 3
  2751 ;; This function calls:
  2752 ;;		_Lcd_Cmd
  2753 ;; This function is called by:
  2754 ;;		_main
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           
  2759                           ;psect for function _Lcd_Set_Cursor
  2760  02C7                     _Lcd_Set_Cursor:
  2761                           
  2762                           ;incstack = 0
  2763                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2764                           ;Lcd_Set_Cursor@a stored from wreg
  2765  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  2766  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  2767  02C9  00D0               	movwf	Lcd_Set_Cursor@a
  2768  02CA                     l1846:
  2769                           
  2770                           ;LCD.c: 31:     char temp, z, y;;LCD.c: 32:     if (a == 1) {
  2771  02CA  0350               	decf	Lcd_Set_Cursor@a,w
  2772  02CB  1D03               	btfss	3,2
  2773  02CC  2ACE               	goto	u851
  2774  02CD  2ACF               	goto	u850
  2775  02CE                     u851:
  2776  02CE  2AF4               	goto	l1856
  2777  02CF                     u850:
  2778  02CF                     l1848:
  2779                           
  2780                           ;LCD.c: 33:         temp = 0x80 + b - 1;
  2781  02CF  0877               	movf	Lcd_Set_Cursor@b,w
  2782  02D0  3E7F               	addlw	127
  2783  02D1  00CE               	movwf	??_Lcd_Set_Cursor
  2784  02D2  084E               	movf	??_Lcd_Set_Cursor,w
  2785  02D3  00D3               	movwf	Lcd_Set_Cursor@temp
  2786                           
  2787                           ;LCD.c: 34:         z = temp >> 4;
  2788  02D4  0853               	movf	Lcd_Set_Cursor@temp,w
  2789  02D5  00CE               	movwf	??_Lcd_Set_Cursor
  2790  02D6  3004               	movlw	4
  2791  02D7                     u865:
  2792  02D7  1003               	clrc
  2793  02D8  0CCE               	rrf	??_Lcd_Set_Cursor,f
  2794  02D9  3EFF               	addlw	-1
  2795  02DA  1D03               	skipz
  2796  02DB  2AD7               	goto	u865
  2797  02DC  084E               	movf	??_Lcd_Set_Cursor,w
  2798  02DD  00CF               	movwf	??_Lcd_Set_Cursor+1
  2799  02DE  084F               	movf	??_Lcd_Set_Cursor+1,w
  2800  02DF  00D1               	movwf	Lcd_Set_Cursor@z
  2801  02E0                     l1850:
  2802                           
  2803                           ;LCD.c: 35:         y = temp & 0x0F;
  2804  02E0  0853               	movf	Lcd_Set_Cursor@temp,w
  2805  02E1  390F               	andlw	15
  2806  02E2  00CE               	movwf	??_Lcd_Set_Cursor
  2807  02E3  084E               	movf	??_Lcd_Set_Cursor,w
  2808  02E4  00D2               	movwf	Lcd_Set_Cursor@y
  2809  02E5                     l1852:
  2810                           
  2811                           ;LCD.c: 36:         Lcd_Cmd(z);
  2812  02E5  0851               	movf	Lcd_Set_Cursor@z,w
  2813  02E6  120A  118A  24FC  120A  118A  	fcall	_Lcd_Cmd
  2814  02EB                     l1854:
  2815                           
  2816                           ;LCD.c: 37:         Lcd_Cmd(y);
  2817  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  2818  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  2819  02ED  0852               	movf	Lcd_Set_Cursor@y,w
  2820  02EE  120A  118A  24FC  120A  118A  	fcall	_Lcd_Cmd
  2821                           
  2822                           ;LCD.c: 38:     } else if (a == 2) {
  2823  02F3  2B1E               	goto	l270
  2824  02F4                     l1856:
  2825  02F4  3002               	movlw	2
  2826  02F5  0650               	xorwf	Lcd_Set_Cursor@a,w
  2827  02F6  1D03               	btfss	3,2
  2828  02F7  2AF9               	goto	u871
  2829  02F8  2AFA               	goto	u870
  2830  02F9                     u871:
  2831  02F9  2B1E               	goto	l270
  2832  02FA                     u870:
  2833  02FA                     l1858:
  2834                           
  2835                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  2836  02FA  0877               	movf	Lcd_Set_Cursor@b,w
  2837  02FB  3EBF               	addlw	191
  2838  02FC  00CE               	movwf	??_Lcd_Set_Cursor
  2839  02FD  084E               	movf	??_Lcd_Set_Cursor,w
  2840  02FE  00D3               	movwf	Lcd_Set_Cursor@temp
  2841                           
  2842                           ;LCD.c: 40:         z = temp >> 4;
  2843  02FF  0853               	movf	Lcd_Set_Cursor@temp,w
  2844  0300  00CE               	movwf	??_Lcd_Set_Cursor
  2845  0301  3004               	movlw	4
  2846  0302                     u885:
  2847  0302  1003               	clrc
  2848  0303  0CCE               	rrf	??_Lcd_Set_Cursor,f
  2849  0304  3EFF               	addlw	-1
  2850  0305  1D03               	skipz
  2851  0306  2B02               	goto	u885
  2852  0307  084E               	movf	??_Lcd_Set_Cursor,w
  2853  0308  00CF               	movwf	??_Lcd_Set_Cursor+1
  2854  0309  084F               	movf	??_Lcd_Set_Cursor+1,w
  2855  030A  00D1               	movwf	Lcd_Set_Cursor@z
  2856  030B                     l1860:
  2857                           
  2858                           ;LCD.c: 41:         y = temp & 0xF0;
  2859  030B  0853               	movf	Lcd_Set_Cursor@temp,w
  2860  030C  39F0               	andlw	240
  2861  030D  00CE               	movwf	??_Lcd_Set_Cursor
  2862  030E  084E               	movf	??_Lcd_Set_Cursor,w
  2863  030F  00D2               	movwf	Lcd_Set_Cursor@y
  2864  0310                     l1862:
  2865                           
  2866                           ;LCD.c: 42:         Lcd_Cmd(z);
  2867  0310  0851               	movf	Lcd_Set_Cursor@z,w
  2868  0311  120A  118A  24FC  120A  118A  	fcall	_Lcd_Cmd
  2869  0316                     l1864:
  2870                           
  2871                           ;LCD.c: 43:         Lcd_Cmd(y);
  2872  0316  1283               	bcf	3,5	;RP0=0, select bank0
  2873  0317  1303               	bcf	3,6	;RP1=0, select bank0
  2874  0318  0852               	movf	Lcd_Set_Cursor@y,w
  2875  0319  120A  118A  24FC  120A  118A  	fcall	_Lcd_Cmd
  2876  031E                     l270:
  2877  031E  0008               	return
  2878  031F                     __end_of_Lcd_Set_Cursor:
  2879                           
  2880                           	psect	text12
  2881  031F                     __ptext12:	
  2882 ;; *************** function _Lcd_Init *****************
  2883 ;; Defined at:
  2884 ;;		line 47 in file "LCD.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;		None
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;		None
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  1    wreg      void 
  2891 ;; Registers used:
  2892 ;;		wreg, status,2, status,0, pclath, cstack
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2898 ;;      Params:         0       0       0       0       0
  2899 ;;      Locals:         0       0       0       0       0
  2900 ;;      Temps:          0       2       0       0       0
  2901 ;;      Totals:         0       2       0       0       0
  2902 ;;Total ram usage:        2 bytes
  2903 ;; Hardware stack levels used: 1
  2904 ;; Hardware stack levels required when called: 3
  2905 ;; This function calls:
  2906 ;;		_Lcd_Cmd
  2907 ;;		_Lcd_Port
  2908 ;; This function is called by:
  2909 ;;		_main
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           
  2914                           ;psect for function _Lcd_Init
  2915  031F                     _Lcd_Init:
  2916  031F                     l1834:	
  2917                           ;incstack = 0
  2918                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2919                           
  2920                           
  2921                           ;LCD.c: 48:     Lcd_Port(0x00);
  2922  031F  3000               	movlw	0
  2923  0320  120A  118A  254B  120A  118A  	fcall	_Lcd_Port
  2924  0325                     l1836:
  2925                           
  2926                           ;LCD.c: 49:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2927  0325  301A               	movlw	26
  2928  0326  1283               	bcf	3,5	;RP0=0, select bank0
  2929  0327  1303               	bcf	3,6	;RP1=0, select bank0
  2930  0328  00CF               	movwf	??_Lcd_Init+1
  2931  0329  30F7               	movlw	247
  2932  032A  00CE               	movwf	??_Lcd_Init
  2933  032B                     u1037:
  2934  032B  0BCE               	decfsz	??_Lcd_Init,f
  2935  032C  2B2B               	goto	u1037
  2936  032D  0BCF               	decfsz	??_Lcd_Init+1,f
  2937  032E  2B2B               	goto	u1037
  2938  032F  2B30               	nop2
  2939  0330                     l1838:
  2940                           
  2941                           ;LCD.c: 50:     Lcd_Cmd(0x30);
  2942  0330  3030               	movlw	48
  2943  0331  120A  118A  24FC  120A  118A  	fcall	_Lcd_Cmd
  2944                           
  2945                           ;LCD.c: 51:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2946  0336  3007               	movlw	7
  2947  0337  1283               	bcf	3,5	;RP0=0, select bank0
  2948  0338  1303               	bcf	3,6	;RP1=0, select bank0
  2949  0339  00CF               	movwf	??_Lcd_Init+1
  2950  033A  307C               	movlw	124
  2951  033B  00CE               	movwf	??_Lcd_Init
  2952  033C                     u1047:
  2953  033C  0BCE               	decfsz	??_Lcd_Init,f
  2954  033D  2B3C               	goto	u1047
  2955  033E  0BCF               	decfsz	??_Lcd_Init+1,f
  2956  033F  2B3C               	goto	u1047
  2957  0340  0000               	nop
  2958  0341                     l1840:
  2959                           
  2960                           ;LCD.c: 52:     Lcd_Cmd(0x30);
  2961  0341  3030               	movlw	48
  2962  0342  120A  118A  24FC  120A  118A  	fcall	_Lcd_Cmd
  2963  0347                     l1842:
  2964                           
  2965                           ;LCD.c: 53:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  2966  0347  3041               	movlw	65
  2967  0348  1283               	bcf	3,5	;RP0=0, select bank0
  2968  0349  1303               	bcf	3,6	;RP1=0, select bank0
  2969  034A  00CE               	movwf	??_Lcd_Init
  2970  034B                     u1057:
  2971  034B  0BCE               	decfsz	??_Lcd_Init,f
  2972  034C  2B4B               	goto	u1057
  2973  034D  2B4E               	nop2
  2974                           
  2975                           ;LCD.c: 54:     Lcd_Cmd(0x30);
  2976  034E  3030               	movlw	48
  2977  034F  120A  118A  24FC  120A  118A  	fcall	_Lcd_Cmd
  2978                           
  2979                           ;LCD.c: 56:     Lcd_Cmd(0x3C);
  2980  0354  303C               	movlw	60
  2981  0355  120A  118A  24FC  120A  118A  	fcall	_Lcd_Cmd
  2982                           
  2983                           ;LCD.c: 58:     Lcd_Cmd(0x08);
  2984  035A  3008               	movlw	8
  2985  035B  120A  118A  24FC  120A  118A  	fcall	_Lcd_Cmd
  2986                           
  2987                           ;LCD.c: 60:     Lcd_Cmd(0x01);
  2988  0360  3001               	movlw	1
  2989  0361  120A  118A  24FC  120A  118A  	fcall	_Lcd_Cmd
  2990                           
  2991                           ;LCD.c: 62:     Lcd_Cmd(0x06);
  2992  0366  3006               	movlw	6
  2993  0367  120A  118A  24FC  120A  118A  	fcall	_Lcd_Cmd
  2994  036C                     l273:
  2995  036C  0008               	return
  2996  036D                     __end_of_Lcd_Init:
  2997                           
  2998                           	psect	text13
  2999  053E                     __ptext13:	
  3000 ;; *************** function _Lcd_Clear *****************
  3001 ;; Defined at:
  3002 ;;		line 25 in file "LCD.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;		None
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;		None
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  1    wreg      void 
  3009 ;; Registers used:
  3010 ;;		wreg, status,2, status,0, pclath, cstack
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3016 ;;      Params:         0       0       0       0       0
  3017 ;;      Locals:         0       0       0       0       0
  3018 ;;      Temps:          0       0       0       0       0
  3019 ;;      Totals:         0       0       0       0       0
  3020 ;;Total ram usage:        0 bytes
  3021 ;; Hardware stack levels used: 1
  3022 ;; Hardware stack levels required when called: 3
  3023 ;; This function calls:
  3024 ;;		_Lcd_Cmd
  3025 ;; This function is called by:
  3026 ;;		_main
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           
  3031                           ;psect for function _Lcd_Clear
  3032  053E                     _Lcd_Clear:
  3033  053E                     l1844:	
  3034                           ;incstack = 0
  3035                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3036                           
  3037                           
  3038                           ;LCD.c: 26:     Lcd_Cmd(0);
  3039  053E  3000               	movlw	0
  3040  053F  120A  118A  24FC  120A  118A  	fcall	_Lcd_Cmd
  3041                           
  3042                           ;LCD.c: 27:     Lcd_Cmd(1);
  3043  0544  3001               	movlw	1
  3044  0545  120A  118A  24FC  120A  118A  	fcall	_Lcd_Cmd
  3045  054A                     l264:
  3046  054A  0008               	return
  3047  054B                     __end_of_Lcd_Clear:
  3048                           
  3049                           	psect	text14
  3050  04FC                     __ptext14:	
  3051 ;; *************** function _Lcd_Cmd *****************
  3052 ;; Defined at:
  3053 ;;		line 17 in file "LCD.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;  a               1    wreg     unsigned char 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  a               1    6[COMMON] unsigned char 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      void 
  3060 ;; Registers used:
  3061 ;;		wreg, status,2, status,0, pclath, cstack
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3067 ;;      Params:         0       0       0       0       0
  3068 ;;      Locals:         1       0       0       0       0
  3069 ;;      Temps:          2       0       0       0       0
  3070 ;;      Totals:         3       0       0       0       0
  3071 ;;Total ram usage:        3 bytes
  3072 ;; Hardware stack levels used: 1
  3073 ;; Hardware stack levels required when called: 2
  3074 ;; This function calls:
  3075 ;;		_Lcd_Port
  3076 ;; This function is called by:
  3077 ;;		_Lcd_Clear
  3078 ;;		_Lcd_Set_Cursor
  3079 ;;		_Lcd_Init
  3080 ;;		_Lcd_Shift_Right
  3081 ;;		_Lcd_Shift_Left
  3082 ;; This function uses a non-reentrant model
  3083 ;;
  3084                           
  3085                           
  3086                           ;psect for function _Lcd_Cmd
  3087  04FC                     _Lcd_Cmd:
  3088                           
  3089                           ;incstack = 0
  3090                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3091                           ;Lcd_Cmd@a stored from wreg
  3092  04FC  00F6               	movwf	Lcd_Cmd@a
  3093  04FD                     l1824:
  3094                           
  3095                           ;LCD.c: 18:     RE0 = 0;
  3096  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  3097  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  3098  04FF  1009               	bcf	9,0	;volatile
  3099  0500                     l1826:
  3100                           
  3101                           ;LCD.c: 19:     Lcd_Port(a);
  3102  0500  0876               	movf	Lcd_Cmd@a,w
  3103  0501  120A  118A  254B  120A  118A  	fcall	_Lcd_Port
  3104  0506                     l1828:
  3105                           
  3106                           ;LCD.c: 20:     RE1 = 1;
  3107  0506  1283               	bcf	3,5	;RP0=0, select bank0
  3108  0507  1303               	bcf	3,6	;RP1=0, select bank0
  3109  0508  1489               	bsf	9,1	;volatile
  3110  0509                     l1830:
  3111                           
  3112                           ;LCD.c: 21:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3113  0509  3006               	movlw	6
  3114  050A  00F5               	movwf	??_Lcd_Cmd+1
  3115  050B  3030               	movlw	48
  3116  050C  00F4               	movwf	??_Lcd_Cmd
  3117  050D                     u1067:
  3118  050D  0BF4               	decfsz	??_Lcd_Cmd,f
  3119  050E  2D0D               	goto	u1067
  3120  050F  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3121  0510  2D0D               	goto	u1067
  3122  0511  0000               	nop
  3123  0512                     l1832:
  3124                           
  3125                           ;LCD.c: 22:     RE1 = 0;
  3126  0512  1283               	bcf	3,5	;RP0=0, select bank0
  3127  0513  1303               	bcf	3,6	;RP1=0, select bank0
  3128  0514  1089               	bcf	9,1	;volatile
  3129  0515                     l261:
  3130  0515  0008               	return
  3131  0516                     __end_of_Lcd_Cmd:
  3132                           
  3133                           	psect	text15
  3134  054B                     __ptext15:	
  3135 ;; *************** function _Lcd_Port *****************
  3136 ;; Defined at:
  3137 ;;		line 12 in file "LCD.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;  a               1    wreg     unsigned char 
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;  a               1    3[COMMON] unsigned char 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      void 
  3144 ;; Registers used:
  3145 ;;		wreg
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3151 ;;      Params:         0       0       0       0       0
  3152 ;;      Locals:         1       0       0       0       0
  3153 ;;      Temps:          0       0       0       0       0
  3154 ;;      Totals:         1       0       0       0       0
  3155 ;;Total ram usage:        1 bytes
  3156 ;; Hardware stack levels used: 1
  3157 ;; Hardware stack levels required when called: 1
  3158 ;; This function calls:
  3159 ;;		Nothing
  3160 ;; This function is called by:
  3161 ;;		_Lcd_Cmd
  3162 ;;		_Lcd_Init
  3163 ;;		_Lcd_Write_Char
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           
  3168                           ;psect for function _Lcd_Port
  3169  054B                     _Lcd_Port:
  3170                           
  3171                           ;incstack = 0
  3172                           ; Regs used in _Lcd_Port: [wreg]
  3173                           ;Lcd_Port@a stored from wreg
  3174  054B  00F3               	movwf	Lcd_Port@a
  3175  054C                     l1810:
  3176                           
  3177                           ;LCD.c: 13:     PORTD = a;
  3178  054C  0873               	movf	Lcd_Port@a,w
  3179  054D  1283               	bcf	3,5	;RP0=0, select bank0
  3180  054E  1303               	bcf	3,6	;RP1=0, select bank0
  3181  054F  0088               	movwf	8	;volatile
  3182  0550                     l258:
  3183  0550  0008               	return
  3184  0551                     __end_of_Lcd_Port:
  3185                           
  3186                           	psect	text16
  3187  03FA                     __ptext16:	
  3188 ;; *************** function _isr *****************
  3189 ;; Defined at:
  3190 ;;		line 76 in file "MainL2.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;		None
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;		None
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      void 
  3197 ;; Registers used:
  3198 ;;		wreg, status,2, status,0
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3204 ;;      Params:         0       0       0       0       0
  3205 ;;      Locals:         0       0       0       0       0
  3206 ;;      Temps:          3       0       0       0       0
  3207 ;;      Totals:         3       0       0       0       0
  3208 ;;Total ram usage:        3 bytes
  3209 ;; Hardware stack levels used: 1
  3210 ;; This function calls:
  3211 ;;		Nothing
  3212 ;; This function is called by:
  3213 ;;		Interrupt level 1
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           
  3218                           ;psect for function _isr
  3219  03FA                     _isr:
  3220  03FA                     i1l1692:
  3221                           
  3222                           ;MainL2.c: 79:        }
  3223  03FA  1D0B               	btfss	11,2	;volatile
  3224  03FB  2BFD               	goto	u74_21
  3225  03FC  2BFE               	goto	u74_20
  3226  03FD                     u74_21:
  3227  03FD  2BFF               	goto	i1l217
  3228  03FE                     u74_20:
  3229  03FE                     i1l1694:
  3230                           
  3231                           ;MainL2.c: 81:      }
  3232  03FE  110B               	bcf	11,2	;volatile
  3233  03FF                     i1l217:	
  3234                           ;MainL2.c: 82:     decimal(var0);
  3235                           
  3236                           
  3237                           ;MainL2.c: 84:     Lcd_Write_Char(centenas);
  3238  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  3239  0400  1303               	bcf	3,6	;RP1=0, select bank0
  3240  0401  1C0C               	btfss	12,0	;volatile
  3241  0402  2C04               	goto	u75_21
  3242  0403  2C05               	goto	u75_20
  3243  0404                     u75_21:
  3244  0404  2C06               	goto	i1l218
  3245  0405                     u75_20:
  3246  0405                     i1l1696:
  3247                           
  3248                           ;MainL2.c: 85:     Lcd_Write_Char(decenas);
  3249  0405  100C               	bcf	12,0	;volatile
  3250  0406                     i1l218:	
  3251                           ;MainL2.c: 86:     Lcd_Write_Char(unidades);
  3252                           
  3253                           
  3254                           ;MainL2.c: 88:     decimal(var1);
  3255  0406  1F0C               	btfss	12,6	;volatile
  3256  0407  2C09               	goto	u76_21
  3257  0408  2C0A               	goto	u76_20
  3258  0409                     u76_21:
  3259  0409  2C1D               	goto	i1l1706
  3260  040A                     u76_20:
  3261  040A                     i1l1698:
  3262                           
  3263                           ;MainL2.c: 89:     Lcd_Write_Char(centenas);
  3264  040A  0C1F               	rrf	31,w	;volatile
  3265  040B  00F0               	movwf	??_isr
  3266  040C  0C70               	rrf	??_isr,w
  3267  040D  390F               	andlw	15
  3268  040E  3A00               	xorlw	0
  3269  040F  1D03               	skipz
  3270  0410  2C12               	goto	u77_21
  3271  0411  2C13               	goto	u77_20
  3272  0412                     u77_21:
  3273  0412  2C18               	goto	i1l1702
  3274  0413                     u77_20:
  3275  0413                     i1l1700:
  3276                           
  3277                           ;MainL2.c: 90:     Lcd_Write_Char(decenas);
  3278  0413  081E               	movf	30,w	;volatile
  3279  0414  00F0               	movwf	??_isr
  3280  0415  0870               	movf	??_isr,w
  3281  0416  00DE               	movwf	_var0
  3282                           
  3283                           ;MainL2.c: 91:     Lcd_Write_Char(unidades);
  3284  0417  2C1C               	goto	i1l1704
  3285  0418                     i1l1702:
  3286                           
  3287                           ;MainL2.c: 93:     while (tempo0 != var0){
  3288  0418  081E               	movf	30,w	;volatile
  3289  0419  00F0               	movwf	??_isr
  3290  041A  0870               	movf	??_isr,w
  3291  041B  00DD               	movwf	_var1
  3292  041C                     i1l1704:
  3293                           
  3294                           ;MainL2.c: 95:         if(TXIF == 1){
  3295  041C  130C               	bcf	12,6	;volatile
  3296  041D                     i1l1706:
  3297                           
  3298                           ;MainL2.c: 101:            }
  3299  041D  1C0B               	btfss	11,0	;volatile
  3300  041E  2C20               	goto	u78_21
  3301  041F  2C21               	goto	u78_20
  3302  0420                     u78_21:
  3303  0420  2C22               	goto	i1l223
  3304  0421                     u78_20:
  3305  0421                     i1l1708:
  3306                           
  3307                           ;MainL2.c: 102:         _delay((unsigned long)((15)*(4000000/4000.0)));
  3308  0421  100B               	bcf	11,0	;volatile
  3309  0422                     i1l223:
  3310  0422  0872               	movf	??_isr+2,w
  3311  0423  008A               	movwf	10
  3312  0424  0E71               	swapf	??_isr+1,w
  3313  0425  0083               	movwf	3
  3314  0426  0EFE               	swapf	btemp,f
  3315  0427  0E7E               	swapf	btemp,w
  3316  0428  0009               	retfie
  3317  0429                     __end_of_isr:
  3318  007E                     btemp	set	126	;btemp
  3319  007E                     wtemp0	set	126
  3320                           
  3321                           	psect	intentry
  3322  0004                     __pintentry:	
  3323                           ;incstack = 0
  3324                           ; Regs used in _isr: [wreg+status,2+status,0]
  3325                           
  3326  0004                     interrupt_function:
  3327  007E                     saved_w	set	btemp
  3328  0004  00FE               	movwf	btemp
  3329  0005  0E03               	swapf	3,w
  3330  0006  00F1               	movwf	??_isr+1
  3331  0007  080A               	movf	10,w
  3332  0008  00F2               	movwf	??_isr+2
  3333  0009  120A  118A  2BFA   	ljmp	_isr
  3334                           
  3335                           	psect	config
  3336                           
  3337                           ;Config register CONFIG1 @ 0x2007
  3338                           ;	Oscillator Selection bits
  3339                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3340                           ;	Watchdog Timer Enable bit
  3341                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3342                           ;	Power-up Timer Enable bit
  3343                           ;	PWRTE = OFF, PWRT disabled
  3344                           ;	RE3/MCLR pin function select bit
  3345                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3346                           ;	Code Protection bit
  3347                           ;	CP = OFF, Program memory code protection is disabled
  3348                           ;	Data Code Protection bit
  3349                           ;	CPD = OFF, Data memory code protection is disabled
  3350                           ;	Brown Out Reset Selection bits
  3351                           ;	BOREN = OFF, BOR disabled
  3352                           ;	Internal External Switchover bit
  3353                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3354                           ;	Fail-Safe Clock Monitor Enabled bit
  3355                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3356                           ;	Low Voltage Programming Enable bit
  3357                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3358                           ;	In-Circuit Debugger Mode bit
  3359                           ;	DEBUG = 0x1, unprogrammed default
  3360  2007                     	org	8199
  3361  2007  20D4               	dw	8404
  3362                           
  3363                           ;Config register CONFIG2 @ 0x2008
  3364                           ;	Brown-out Reset Selection bit
  3365                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3366                           ;	Flash Program Memory Self Write Enable bits
  3367                           ;	WRT = OFF, Write protection off
  3368  2008                     	org	8200
  3369  2008  3FFF               	dw	16383

Data Sizes:
    Strings     21
    Constant    0
    Data        46
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     11      67
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[4]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_Char
    _setup->_initAN
    _setup->_initOsc
    _decimal->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_decimal
    _decimal->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2862
                                              9 BANK0      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                           _chselect
                            _decimal
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     284
                             _initAN
                         _initEUSART
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _initEUSART                                           2     1      1     120
                                              3 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _initAN                                               3     2      1     142
                                              3 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _decimal                                              5     5      0    1043
                                              4 BANK0      5     5      0
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     244
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _chselect                                             4     4      0     286
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     332
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     130
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     632
                                              7 COMMON     1     0      1
                                              0 BANK0      6     6      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   _chselect
   _decimal
     ___awdiv
     ___bmul
   _setup
     _initAN
     _initEUSART
     _initOsc

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      43       5       83.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4E      12        0.0%
ABS                  0      0      4E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jul 26 17:23:08 2021

                        pc 0002             ___bmul@product 0075               ___awdiv@sign 004F  
                       fsr 0004                        l100 0372                        l102 0376  
                      l110 03B8                        l103 037A                        l104 037E  
                      l113 04A3                        l105 0382                        l106 0386  
                      l107 038A                        l108 038E                        l109 0392  
                      l400 052A                        l233 01E1                        l235 01BD  
                      l244 03F9                        l236 01CF                        l261 0515  
                      l270 031E                        l159 012D                        l247 02C6  
                      l264 054A                        l184 04C3                        l273 036C  
                      l258 0550                        l282 047F                        l276 04E0  
                      l527 025F                        _RE0 0048                        _RE1 0049  
                      u510 023D                        u430 051C                        u511 023C  
                      u431 051B                        u600 0073                        u440 0529  
                      u601 0072                        u505 022D                        u441 0528  
                      u610 0081                        u530 0251                        u450 01FE  
                      u611 0080                        u531 0250                        u515 0239  
                      u451 01FD                        u620 008F                        u540 0256  
                      u460 0209            decimal@variable 0055                        u621 008E  
                      u541 0255                        u525 0245                        u461 0208  
                      u630 009D                        u550 0035                        u470 021A  
                      u631 009C                        u551 0034                        u471 0219  
                      u640 00AB                        u560 003B                        u641 00AA  
                      u561 003A                        u650 00B9                        u570 0049  
                      u490 022C                        u651 00B8                        u571 0048  
                      u491 022B                        u660 00C7                        u580 0057  
                      u900 015A                        u661 00C6                        u581 0056  
                      u485 021E                        u901 0159                        u670 00D5  
                      u590 0065                        u910 0172                        u671 00D4  
                      u591 0064                        u911 0171                        u680 00E3  
                      u920 01BB                        u681 00E2                        u921 01BA  
                      u850 02CF                        u930 01CD                        u851 02CE  
                      u931 01CC                        u940 01DF                        u941 01DE  
                      u870 02FA                        u950 01E9                        u871 02F9  
                      u951 01E8                        u865 02D7                        u890 047F  
                      u891 047E                        u885 0302                        u967 0166  
                      u977 01C3                        u987 01D5                        u997 01EF  
                      _isr 03FA                        fsr0 0004                        _str 0020  
                      indf 0000                       l1400 04A5                       l1402 04B3  
                     l1500 0049                       l1404 04B9                       l1510 005F  
                     l1502 004C                       l1430 0517                       l1406 04BE  
                     l1520 0076                       l1512 0065                       l1504 0051  
                     l1440 0529                       l1432 0518                       l1600 03CF  
                     l1530 008F                       l1522 007B                       l1514 0068  
                     l1506 0057                       l1450 0203                       l1434 051C  
                     l1610 03D8                       l1602 03D0                       l1540 00A5  
                     l1532 0092                       l1524 0081                       l1516 006D  
                     l1508 005A                       l1460 0214                       l1452 0205  
                     l1444 01F7                       l1436 0520                       l1380 0485  
                     l1372 0396                       l1620 03EB                       l1612 03DA  
                     l1604 03D2                       l1550 00BC                       l1542 00AB  
                     l1534 0097                       l1526 0084                       l1518 0073  
                     l1470 022C                       l1462 021A                       l1454 0209  
                     l1446 01FA                       l1438 0522                       l1390 0495  
                     l1382 0486                       l1630 03F3                       l1622 03EC  
                     l1614 03E0                       l1606 03D5                       l1560 00D5  
                     l1552 00C1                       l1544 00AE                       l1536 009D  
                     l1528 0089                       l1472 023D                       l1464 021D  
                     l1480 0251                       l1456 020E                       l1448 01FE  
                     l1392 0499                       l1384 048A                       l1368 036E  
                     l1632 03F6                       l1624 03ED                       l1616 03E7  
                     l1608 03D6                       l1810 054C                       l1570 00EB  
                     l1562 00D8                       l1554 00C7                       l1546 00B3  
                     l1538 00A0                       l1482 0256                       l1474 0243  
                     l1466 0224                       l1458 0212                       l1394 04A0  
                     l1386 048E                       l1378 0481                       l1634 03F7  
                     l1626 03EE                       l1618 03EA                       l1820 04D9  
                     l1812 04C5                       l1564 00DD                       l1556 00CA  
                     l1548 00B9                       l1492 0036                       l1484 025B  
                     l1476 0244                       l1468 0228                       l1396 04A1  
                     l1388 0492                       l1628 03F2                       l1900 0156  
                     l1830 0509                       l1822 04DD                       l1814 04CD  
                     l1566 00E3                       l1558 00CF                       l1494 003B  
                     l1574 00EE                       l1478 024B                       l1398 04A2  
                     l1590 03C0                       l1910 0192                       l1902 015A  
                     l1832 0512                       l1824 04FD                       l1840 0341  
                     l1816 04D0                       l1568 00E6                       l1496 003E  
                     l1576 0125                       l1488 002F                       l1592 03C3  
                     l1920 01B3                       l1912 0198                       l1904 0160  
                     l1826 0500                       l1842 0347                       l1834 031F  
                     l1850 02E0                       l1818 04D6                       l1578 012A  
                     l1498 0043                       l1594 03C4                       l1586 03B9  
                     l1930 01D9                       l1922 01B7                       l1914 01A0  
                     l1906 016A                       l1828 0506                       l1844 053E  
                     l1836 0325                       l1860 030B                       l1852 02E5  
                     l1596 03C5                       l1588 03BC                       l1932 01DF  
                     l1924 01BB                       l1916 01A6                       l1908 0172  
                     l1838 0330                       l1862 0310                       l1854 02EB  
                     l1846 02CA                       l1870 046A                       l1598 03CC  
                     l1934 01E9                       l1926 01C7                       l1918 01AC  
                     l1864 0316                       l1848 02CF                       l1856 02F4  
                     l1872 0472                       l1880 028D                       l1928 01CD  
                     l1858 02FA                       l1866 045A                       l1882 02A3  
                     l1874 0263                       l1890 012E                       l1868 045D  
                     l1884 02B7                       l1876 0267                       l1892 0133  
                     l1886 02BC                       l1878 027D                       l1990 039E  
                     l1894 0138                       l1992 00F9                       l1888 02C1  
                     l1896 014B                       l1898 0152                       ?_isr 0070  
                     STR_1 04E7                       STR_2 04F8                       _T0IF 005A  
                     u1007 0490                       u1017 0127                       u1027 04DB  
                     u1037 032B                       u1047 033C                       u1057 034B  
                     u1067 050D                       _IOCB 0096                       _PIE1 008C  
                     _PIE2 008D                       _RBIF 0058                       _PIR1 000C  
                     _PIR2 000D                       _TXIF 0064                       _WPUB 0095  
        ?_Lcd_Write_String 0070                       _main 012E                       _var0 005E  
                     _var1 005D                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0078            __end_of_Lcd_Cmd 0516          ___bmul@multiplier 0076  
                    ??_isr 0070                      ?_main 0070            __end_of___awdiv 0260  
                    _ANSEL 0188            ___awdiv@divisor 0073                      _T1CON 0010  
                    i1l223 0422                      i1l217 03FF                      i1l218 0406  
          ___awdiv@counter 004E                      _TMR1H 000F                      _TMR1L 000E  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0058                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    u74_20 03FE                      u74_21 03FD                      u75_20 0405  
                    u75_21 0404                      u76_20 040A                      u76_21 0409  
                    u77_20 0413                      u77_21 0412                      u78_20 0421  
                    u78_21 0420            __end_of_decimal 02C7                      _TXREG 0019  
          __end_of_initOsc 03B9                      _setup 03B9                      _start 0060  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 036D           __end_of_Lcd_Port 0551            __initialization 000F  
             __end_of_main 01F7                     ??_main 0057         __size_of_Lcd_Clear 000D  
                   _ADRESH 001E           ___awdiv@dividend 0075                     ?_setup 0070  
                   _ANSELH 0189                     i1l1700 0413                     i1l1702 0418  
                   i1l1704 041C                     i1l1706 041D                     i1l1708 0421  
                   i1l1692 03FA                     i1l1694 03FE                     i1l1696 0405  
                   i1l1698 040A                     _INTCON 000B                initOsc@frec 0075  
                ??_Lcd_Cmd 0074                     _TMR1IF 0060                     _SPBRGH 009A  
  __size_of_Lcd_Write_Char 001D           __end_of_chselect 012E                     ___bmul 0516  
                ??___awdiv 0077                     _initAN 0480                  ??_decimal 0052  
         ___awdiv@quotient 0050                     _tempo0 005B                     _tempo1 005A  
                ??_initOsc 0073                     saved_w 007E               initEUSART@rx 0073  
             initEUSART@tx 0074            Lcd_Set_Cursor@a 0050            Lcd_Set_Cursor@b 0077  
          Lcd_Set_Cursor@y 0052            Lcd_Set_Cursor@z 0051    __end_of__initialization 002A  
        __end_of_Lcd_Clear 054B        ___bmul@multiplicand 0073             __pcstackCOMMON 0070  
             __pidataBANK0 0429              __end_of_setup 03FA             _Lcd_Set_Cursor 02C7  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 0076  
               __pbssBANK0 0059                 __pmaintext 012E                    ?___bmul 0073  
               __pintentry 0004                    ?_initAN 0073  __size_of_Lcd_Write_String 0029  
   __end_of_Lcd_Set_Cursor 031F                 ??_Lcd_Init 004E                  ?_chselect 0070  
               ??_Lcd_Port 0073                 __stringtab 04E1             _Lcd_Write_Char 04C4  
                  _Lcd_Cmd 04FC                 _initEUSART 04A4            __size_of___bmul 0015  
                  ___awdiv 01F7                    _decenas 0079            __size_of_initAN 0024  
                  _decimal 0260            ?_Lcd_Set_Cursor 0077                    __ptext1 03B9  
                  __ptext2 036D                    __ptext3 04A4                    __ptext4 0480  
                  __ptext5 0260                    __ptext6 0516                    __ptext7 01F7  
                  __ptext8 002E                    __ptext9 0457                    _flagint 0062  
                  _initOsc 036D               __size_of_isr 002F                    _varUART 0059  
               ??_chselect 0073     __end_of_Lcd_Write_Char 04E1       end_of_initialization 002A  
                _RCSTAbits 0018                  Lcd_Port@a 0073            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0050          Lcd_Write_String@i 004E                 _startfinal 0061  
              ?_initEUSART 0073                  _TXSTAbits 0098                  _Lcd_Clear 053E  
           __end_of___bmul 052B           _Lcd_Write_String 0457                _BAUDCTLbits 0187  
           __end_of_initAN 04A4                 initAN@just 0073        start_initialization 000F  
              __end_of_isr 0429          __size_of_Lcd_Init 004E          __size_of_Lcd_Port 0006  
               ?_Lcd_Clear 0070                   ??___bmul 0074                 init_fetch0 052B  
              __pdataBANK0 0020                   ??_initAN 0074            Lcd_Write_Char@a 0075  
          Lcd_Write_Char@y 0077        __size_of_initEUSART 0020               decimal@valor 0056  
              __pbssCOMMON 0078                  ___latbits 0002              __pcstackBANK0 004E  
        __size_of_chselect 0100                   ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 004E  
                 ?___awdiv 0073                   ?_decimal 0070                  __pstrings 04E1  
                 ?_initOsc 0070             __size_of_setup 0041          interrupt_function 0004  
                 _PIE1bits 008C                   Lcd_Cmd@a 0076                   _PIR1bits 000C  
              ??_Lcd_Clear 0077                  _multiplex 005F                 _ADCON0bits 001F  
              __stringbase 04E6                 _ADCON1bits 009F           ??_Lcd_Write_Char 0074  
                 _Lcd_Init 031F                   _Lcd_Port 054B                  initAN@bin 0075  
 __end_of_Lcd_Write_String 0480               ??_initEUSART 0074           __size_of_Lcd_Cmd 001A  
         __size_of___awdiv 0069         __end_of__stringtab 04E7           __size_of_decimal 0067  
       __end_of_initEUSART 04C4           __size_of_initOsc 004C                   _centenas 0078  
                 _chselect 002E                   __ptext10 04C4                   __ptext11 02C7  
                 __ptext12 031F                   __ptext13 053E                   __ptext14 04FC  
                 __ptext15 054B                   __ptext16 03FA                   _contador 005C  
            __size_of_main 00C9                   _unidades 007A                 _INTCONbits 000B  
                 init_ram0 052F               chselect@cant 0076         Lcd_Write_Char@temp 0076  
                 intlevel1 0000                  stringcode 04E1                 _OSCCONbits 008F  
       Lcd_Set_Cursor@temp 0053                 _OPTION_REG 0081                   stringdir 04E1  
                 stringtab 04E1  
