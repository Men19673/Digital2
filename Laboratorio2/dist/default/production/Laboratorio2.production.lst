

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jul 26 17:14:51 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.20
    35                           ; Generated 12/02/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F887 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001D                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  0081                     	;# 
   104  0085                     	;# 
   105  0086                     	;# 
   106  0087                     	;# 
   107  0088                     	;# 
   108  0089                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  0105                     	;# 
   132  0107                     	;# 
   133  0108                     	;# 
   134  0109                     	;# 
   135  010C                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  0185                     	;# 
   141  0187                     	;# 
   142  0188                     	;# 
   143  0189                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0088                     	;# 
   186  0089                     	;# 
   187  008C                     	;# 
   188  008D                     	;# 
   189  008E                     	;# 
   190  008F                     	;# 
   191  0090                     	;# 
   192  0091                     	;# 
   193  0092                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0094                     	;# 
   198  0095                     	;# 
   199  0096                     	;# 
   200  0097                     	;# 
   201  0098                     	;# 
   202  0099                     	;# 
   203  009A                     	;# 
   204  009B                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009E                     	;# 
   208  009F                     	;# 
   209  0105                     	;# 
   210  0107                     	;# 
   211  0108                     	;# 
   212  0109                     	;# 
   213  010C                     	;# 
   214  010C                     	;# 
   215  010D                     	;# 
   216  010E                     	;# 
   217  010F                     	;# 
   218  0185                     	;# 
   219  0187                     	;# 
   220  0188                     	;# 
   221  0189                     	;# 
   222  018C                     	;# 
   223  018D                     	;# 
   224  0000                     	;# 
   225  0001                     	;# 
   226  0002                     	;# 
   227  0003                     	;# 
   228  0004                     	;# 
   229  0005                     	;# 
   230  0006                     	;# 
   231  0007                     	;# 
   232  0008                     	;# 
   233  0009                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  000E                     	;# 
   239  000E                     	;# 
   240  000F                     	;# 
   241  0010                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0014                     	;# 
   246  0015                     	;# 
   247  0015                     	;# 
   248  0016                     	;# 
   249  0017                     	;# 
   250  0018                     	;# 
   251  0019                     	;# 
   252  001A                     	;# 
   253  001B                     	;# 
   254  001B                     	;# 
   255  001C                     	;# 
   256  001D                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  0081                     	;# 
   260  0085                     	;# 
   261  0086                     	;# 
   262  0087                     	;# 
   263  0088                     	;# 
   264  0089                     	;# 
   265  008C                     	;# 
   266  008D                     	;# 
   267  008E                     	;# 
   268  008F                     	;# 
   269  0090                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0094                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  0105                     	;# 
   288  0107                     	;# 
   289  0108                     	;# 
   290  0109                     	;# 
   291  010C                     	;# 
   292  010C                     	;# 
   293  010D                     	;# 
   294  010E                     	;# 
   295  010F                     	;# 
   296  0185                     	;# 
   297  0187                     	;# 
   298  0188                     	;# 
   299  0189                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302                           
   303                           	psect	idataBANK0
   304  041E                     __pidataBANK0:
   305                           
   306                           ;initializer for _str
   307  041E  3420               	retlw	32
   308  041F  344C               	retlw	76
   309  0420  346F               	retlw	111
   310  0421  3473               	retlw	115
   311  0422  3420               	retlw	32
   312  0423  3476               	retlw	118
   313  0424  3461               	retlw	97
   314  0425  346C               	retlw	108
   315  0426  346F               	retlw	111
   316  0427  3472               	retlw	114
   317  0428  3465               	retlw	101
   318  0429  3473               	retlw	115
   319  042A  3420               	retlw	32
   320  042B  3464               	retlw	100
   321  042C  3465               	retlw	101
   322  042D  3420               	retlw	32
   323  042E  346C               	retlw	108
   324  042F  346F               	retlw	111
   325  0430  3473               	retlw	115
   326  0431  3420               	retlw	32
   327  0432  3470               	retlw	112
   328  0433  346F               	retlw	111
   329  0434  3474               	retlw	116
   330  0435  3465               	retlw	101
   331  0436  346E               	retlw	110
   332  0437  3463               	retlw	99
   333  0438  3469               	retlw	105
   334  0439  346F               	retlw	111
   335  043A  346D               	retlw	109
   336  043B  3465               	retlw	101
   337  043C  3474               	retlw	116
   338  043D  3472               	retlw	114
   339  043E  346F               	retlw	111
   340  043F  3473               	retlw	115
   341  0440  3420               	retlw	32
   342  0441  3473               	retlw	115
   343  0442  346F               	retlw	111
   344  0443  346E               	retlw	110
   345  0444  343A               	retlw	58
   346  0445  3420               	retlw	32
   347  0446  340A               	retlw	10
   348  0447  3420               	retlw	32
   349  0448  3453               	retlw	83
   350  0449  3431               	retlw	49
   351  044A  343A               	retlw	58
   352  044B  3420               	retlw	32
   353  000B                     _INTCON	set	11
   354  000D                     _PIR2	set	13
   355  000C                     _PIR1	set	12
   356  0009                     _PORTE	set	9
   357  0008                     _PORTD	set	8
   358  0007                     _PORTC	set	7
   359  0006                     _PORTB	set	6
   360  0005                     _PORTA	set	5
   361  000E                     _TMR1L	set	14
   362  000F                     _TMR1H	set	15
   363  0010                     _T1CON	set	16
   364  0019                     _TXREG	set	25
   365  001E                     _ADRESH	set	30
   366  000C                     _PIR1bits	set	12
   367  000B                     _INTCONbits	set	11
   368  0018                     _RCSTAbits	set	24
   369  001F                     _ADCON0bits	set	31
   370  0049                     _RE1	set	73
   371  0048                     _RE0	set	72
   372  0064                     _TXIF	set	100
   373  0058                     _RBIF	set	88
   374  0060                     _TMR1IF	set	96
   375  005A                     _T0IF	set	90
   376  008D                     _PIE2	set	141
   377  008C                     _PIE1	set	140
   378  0081                     _OPTION_REG	set	129
   379  0096                     _IOCB	set	150
   380  0095                     _WPUB	set	149
   381  0089                     _TRISE	set	137
   382  0088                     _TRISD	set	136
   383  0087                     _TRISC	set	135
   384  0086                     _TRISB	set	134
   385  009A                     _SPBRGH	set	154
   386  0099                     _SPBRG	set	153
   387  0098                     _TXSTAbits	set	152
   388  008C                     _PIE1bits	set	140
   389  009F                     _ADCON1bits	set	159
   390  0085                     _TRISA	set	133
   391  008F                     _OSCCONbits	set	143
   392  0187                     _BAUDCTLbits	set	391
   393  0189                     _ANSELH	set	393
   394  0188                     _ANSEL	set	392
   395                           
   396                           	psect	strings
   397  04D6                     __pstrings:
   398  04D6                     stringtab:
   399  04D6                     __stringtab:
   400  04D6                     stringcode:	
   401                           ;	String table - string pointers are 1 byte each
   402                           
   403  04D6                     stringdir:
   404  04D6  3004               	movlw	high stringdir
   405  04D7  008A               	movwf	10
   406  04D8  0804               	movf	4,w
   407  04D9  0A84               	incf	4,f
   408  04DA  0782               	addwf	2,f
   409  04DB                     __stringbase:
   410  04DB  3400               	retlw	0
   411  04DC                     __end_of__stringtab:
   412  04DC                     STR_1:
   413  04DC  3453               	retlw	83	;'S'
   414  04DD  3431               	retlw	49	;'1'
   415  04DE  343A               	retlw	58	;':'
   416  04DF  3420               	retlw	32	;' '
   417  04E0  3420               	retlw	32	;' '
   418  04E1  3420               	retlw	32	;' '
   419  04E2  3453               	retlw	83	;'S'
   420  04E3  3432               	retlw	50	;'2'
   421  04E4  343A               	retlw	58	;':'
   422  04E5  3420               	retlw	32	;' '
   423  04E6  3420               	retlw	32	;' '
   424  04E7  3443               	retlw	67	;'C'
   425  04E8  344F               	retlw	79	;'O'
   426  04E9  344E               	retlw	78	;'N'
   427  04EA  3454               	retlw	84	;'T'
   428  04EB  343A               	retlw	58	;':'
   429  04EC  3400               	retlw	0
   430  04ED                     STR_2:
   431  04ED  3420               	retlw	32	;' '
   432  04EE  3420               	retlw	32	;' '
   433  04EF  3420               	retlw	32	;' '
   434  04F0  3400               	retlw	0
   435                           
   436                           	psect	cinit
   437  000F                     start_initialization:	
   438                           ; #config settings
   439                           
   440  000F                     __initialization:
   441                           
   442                           ; Initialize objects allocated to BANK0
   443  000F  1383               	bcf	3,7	;select IRP bank0
   444  0010  304E               	movlw	low (__pdataBANK0+46)
   445  0011  00FD               	movwf	btemp+-1
   446  0012  3004               	movlw	high __pidataBANK0
   447  0013  00FE               	movwf	btemp
   448  0014  301E               	movlw	low __pidataBANK0
   449  0015  00FF               	movwf	btemp+1
   450  0016  3020               	movlw	low __pdataBANK0
   451  0017  0084               	movwf	4
   452  0018  120A  118A  2524  120A  118A  	fcall	init_ram0
   453                           
   454                           ; Clear objects allocated to BANK0
   455  001D  01D9               	clrf	__pbssBANK0& (0+127)
   456  001E  01DA               	clrf	(__pbssBANK0+1)& (0+127)
   457  001F  01DB               	clrf	(__pbssBANK0+2)& (0+127)
   458  0020  01DC               	clrf	(__pbssBANK0+3)& (0+127)
   459  0021  01DD               	clrf	(__pbssBANK0+4)& (0+127)
   460  0022  01DE               	clrf	(__pbssBANK0+5)& (0+127)
   461  0023  01DF               	clrf	(__pbssBANK0+6)& (0+127)
   462  0024  01E0               	clrf	(__pbssBANK0+7)& (0+127)
   463  0025  01E1               	clrf	(__pbssBANK0+8)& (0+127)
   464  0026  01E2               	clrf	(__pbssBANK0+9)& (0+127)
   465                           
   466                           ; Clear objects allocated to COMMON
   467  0027  01F8               	clrf	__pbssCOMMON& (0+127)
   468  0028  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   469  0029  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   470  002A                     end_of_initialization:	
   471                           ;End of C runtime variable initialization code
   472                           
   473  002A                     __end_of__initialization:
   474  002A  0183               	clrf	3
   475  002B  120A  118A  292E   	ljmp	_main	;jump to C main() function
   476                           
   477                           	psect	bssCOMMON
   478  0078                     __pbssCOMMON:
   479  0078                     _centenas:
   480  0078                     	ds	1
   481  0079                     _decenas:
   482  0079                     	ds	1
   483  007A                     _unidades:
   484  007A                     	ds	1
   485                           
   486                           	psect	bssBANK0
   487  0059                     __pbssBANK0:
   488  0059                     _varUART:
   489  0059                     	ds	1
   490  005A                     _disp1:
   491  005A                     	ds	1
   492  005B                     _disp0:
   493  005B                     	ds	1
   494  005C                     _contador:
   495  005C                     	ds	1
   496  005D                     _var1:
   497  005D                     	ds	1
   498  005E                     _var0:
   499  005E                     	ds	1
   500  005F                     _multiplex:
   501  005F                     	ds	1
   502  0060                     _start:
   503  0060                     	ds	1
   504  0061                     _startfinal:
   505  0061                     	ds	1
   506  0062                     _flagint:
   507  0062                     	ds	1
   508                           
   509                           	psect	dataBANK0
   510  0020                     __pdataBANK0:
   511  0020                     _str:
   512  0020                     	ds	46
   513                           
   514                           	psect	inittext
   515  0520                     init_fetch0:	
   516                           ;	Called with low address in FSR and high address in W
   517                           
   518  0520  087E               	movf	btemp,w
   519  0521  008A               	movwf	10
   520  0522  087F               	movf	btemp+1,w
   521  0523  0082               	movwf	2
   522  0524                     init_ram0:	
   523                           ;Called with:
   524                           ;	high address of idata address in btemp 
   525                           ;	low address of idata address in btemp+1 
   526                           ;	low address of data in FSR
   527                           ;	high address + 1 of data in btemp-1
   528                           
   529  0524  120A  118A  2520  120A  118A  	fcall	init_fetch0
   530  0529  0080               	movwf	0
   531  052A  0A84               	incf	4,f
   532  052B  0804               	movf	4,w
   533  052C  067D               	xorwf	btemp+-1,w
   534  052D  1903               	btfsc	3,2
   535  052E  3400               	retlw	0
   536  052F  0AFF               	incf	btemp+1,f
   537  0530  1903               	btfsc	3,2
   538  0531  0AFE               	incf	btemp,f
   539  0532  2D24               	goto	init_ram0
   540                           
   541                           	psect	cstackCOMMON
   542  0070                     __pcstackCOMMON:
   543  0070                     ?_setup:
   544  0070                     ?_Lcd_Init:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_Lcd_Clear:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_Lcd_Write_String:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_decimal:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_Lcd_Write_Char:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_initOsc:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_chselect:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_isr:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ??_isr:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_main:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_Lcd_Port:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_Lcd_Cmd:	
   578                           ; 1 bytes @ 0x0
   579                           
   580                           
   581                           ; 1 bytes @ 0x0
   582  0070                     	ds	3
   583  0073                     ??_initOsc:
   584  0073                     ?_initAN:	
   585                           ; 1 bytes @ 0x3
   586                           
   587  0073                     ??_chselect:	
   588                           ; 1 bytes @ 0x3
   589                           
   590  0073                     ?_initEUSART:	
   591                           ; 1 bytes @ 0x3
   592                           
   593  0073                     ??_Lcd_Port:	
   594                           ; 1 bytes @ 0x3
   595                           
   596  0073                     ?___bmul:	
   597                           ; 1 bytes @ 0x3
   598                           
   599  0073                     ?___awdiv:	
   600                           ; 1 bytes @ 0x3
   601                           
   602  0073                     initAN@just:	
   603                           ; 2 bytes @ 0x3
   604                           
   605  0073                     initEUSART@rx:	
   606                           ; 1 bytes @ 0x3
   607                           
   608  0073                     Lcd_Port@a:	
   609                           ; 1 bytes @ 0x3
   610                           
   611  0073                     ___bmul@multiplicand:	
   612                           ; 1 bytes @ 0x3
   613                           
   614  0073                     ___awdiv@divisor:	
   615                           ; 1 bytes @ 0x3
   616                           
   617                           
   618                           ; 2 bytes @ 0x3
   619  0073                     	ds	1
   620  0074                     ??_Lcd_Write_Char:
   621  0074                     ??_initAN:	
   622                           ; 1 bytes @ 0x4
   623                           
   624  0074                     ??_initEUSART:	
   625                           ; 1 bytes @ 0x4
   626                           
   627  0074                     ??_Lcd_Cmd:	
   628                           ; 1 bytes @ 0x4
   629                           
   630  0074                     ??___bmul:	
   631                           ; 1 bytes @ 0x4
   632                           
   633  0074                     initEUSART@tx:	
   634                           ; 1 bytes @ 0x4
   635                           
   636                           
   637                           ; 1 bytes @ 0x4
   638  0074                     	ds	1
   639  0075                     initOsc@frec:
   640  0075                     initAN@bin:	
   641                           ; 1 bytes @ 0x5
   642                           
   643  0075                     Lcd_Write_Char@a:	
   644                           ; 1 bytes @ 0x5
   645                           
   646  0075                     ___bmul@product:	
   647                           ; 1 bytes @ 0x5
   648                           
   649  0075                     ___awdiv@dividend:	
   650                           ; 1 bytes @ 0x5
   651                           
   652                           
   653                           ; 2 bytes @ 0x5
   654  0075                     	ds	1
   655  0076                     ??_setup:
   656  0076                     chselect@cant:	
   657                           ; 1 bytes @ 0x6
   658                           
   659  0076                     Lcd_Cmd@a:	
   660                           ; 1 bytes @ 0x6
   661                           
   662  0076                     Lcd_Write_Char@temp:	
   663                           ; 1 bytes @ 0x6
   664                           
   665  0076                     ___bmul@multiplier:	
   666                           ; 1 bytes @ 0x6
   667                           
   668                           
   669                           ; 1 bytes @ 0x6
   670  0076                     	ds	1
   671  0077                     ??_Lcd_Clear:
   672  0077                     ?_Lcd_Set_Cursor:	
   673                           ; 1 bytes @ 0x7
   674                           
   675  0077                     ??___awdiv:	
   676                           ; 1 bytes @ 0x7
   677                           
   678  0077                     Lcd_Set_Cursor@b:	
   679                           ; 1 bytes @ 0x7
   680                           
   681  0077                     Lcd_Write_Char@y:	
   682                           ; 1 bytes @ 0x7
   683                           
   684                           
   685                           ; 1 bytes @ 0x7
   686  0077                     	ds	1
   687  0078                     ??_Lcd_Write_String:
   688                           
   689                           	psect	cstackBANK0
   690  004E                     __pcstackBANK0:	
   691                           ; 1 bytes @ 0x8
   692                           
   693  004E                     ??_Lcd_Init:
   694  004E                     ??_Lcd_Set_Cursor:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  004E                     ___awdiv@counter:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  004E                     Lcd_Write_String@i:	
   701                           ; 1 bytes @ 0x0
   702                           
   703                           
   704                           ; 2 bytes @ 0x0
   705  004E                     	ds	1
   706  004F                     ___awdiv@sign:
   707                           
   708                           ; 1 bytes @ 0x1
   709  004F                     	ds	1
   710  0050                     Lcd_Set_Cursor@a:
   711  0050                     Lcd_Write_String@a:	
   712                           ; 1 bytes @ 0x2
   713                           
   714  0050                     ___awdiv@quotient:	
   715                           ; 1 bytes @ 0x2
   716                           
   717                           
   718                           ; 2 bytes @ 0x2
   719  0050                     	ds	1
   720  0051                     Lcd_Set_Cursor@z:
   721                           
   722                           ; 1 bytes @ 0x3
   723  0051                     	ds	1
   724  0052                     ??_decimal:
   725  0052                     Lcd_Set_Cursor@y:	
   726                           ; 1 bytes @ 0x4
   727                           
   728                           
   729                           ; 1 bytes @ 0x4
   730  0052                     	ds	1
   731  0053                     Lcd_Set_Cursor@temp:
   732                           
   733                           ; 1 bytes @ 0x5
   734  0053                     	ds	2
   735  0055                     decimal@variable:
   736                           
   737                           ; 1 bytes @ 0x7
   738  0055                     	ds	1
   739  0056                     decimal@valor:
   740                           
   741                           ; 1 bytes @ 0x8
   742  0056                     	ds	1
   743  0057                     ??_main:
   744                           
   745                           ; 1 bytes @ 0x9
   746  0057                     	ds	2
   747                           
   748                           	psect	maintext
   749  012E                     __pmaintext:	
   750 ;;
   751 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   752 ;;
   753 ;; *************** function _main *****************
   754 ;; Defined at:
   755 ;;		line 107 in file "MainL2.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;		None
   760 ;; Return value:  Size  Location     Type
   761 ;;                  1    wreg      void 
   762 ;; Registers used:
   763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   764 ;; Tracked objects:
   765 ;;		On entry : B00/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   769 ;;      Params:         0       0       0       0       0
   770 ;;      Locals:         0       0       0       0       0
   771 ;;      Temps:          0       2       0       0       0
   772 ;;      Totals:         0       2       0       0       0
   773 ;;Total ram usage:        2 bytes
   774 ;; Hardware stack levels required when called: 4
   775 ;; This function calls:
   776 ;;		_Lcd_Clear
   777 ;;		_Lcd_Init
   778 ;;		_Lcd_Set_Cursor
   779 ;;		_Lcd_Write_Char
   780 ;;		_Lcd_Write_String
   781 ;;		_chselect
   782 ;;		_decimal
   783 ;;		_setup
   784 ;; This function is called by:
   785 ;;		Startup code after reset
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           
   790                           ;psect for function _main
   791  012E                     _main:
   792  012E                     l1946:	
   793                           ;incstack = 0
   794                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   795                           
   796                           
   797                           ;MainL2.c: 108: }
   798  012E  120A  118A  23AE  120A  118A  	fcall	_setup
   799  0133                     l1948:
   800                           
   801                           ;MainL2.c: 109: 
   802  0133  120A  118A  2314  120A  118A  	fcall	_Lcd_Init
   803  0138                     l1950:
   804                           
   805                           ;MainL2.c: 114: 
   806  0138  3002               	movlw	2
   807  0139  120A  118A  202E  120A  118A  	fcall	_chselect
   808                           
   809                           ;MainL2.c: 115: 
   810  013E  120A  118A  2533  120A  118A  	fcall	_Lcd_Clear
   811                           
   812                           ;MainL2.c: 116:   ANSELH = 0b00000000;
   813  0143  01F7               	clrf	Lcd_Set_Cursor@b
   814  0144  0AF7               	incf	Lcd_Set_Cursor@b,f
   815  0145  3001               	movlw	1
   816  0146  120A  118A  22BC  120A  118A  	fcall	_Lcd_Set_Cursor
   817  014B                     l1952:
   818                           
   819                           ;MainL2.c: 117: 
   820  014B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   821  014C  120A  118A  244C  120A  118A  	fcall	_Lcd_Write_String
   822  0151                     l1954:
   823                           
   824                           ;MainL2.c: 118:   TRISA = 0b00000011;
   825  0151  1283               	bcf	3,5	;RP0=0, select bank0
   826  0152  1303               	bcf	3,6	;RP1=0, select bank0
   827  0153  085E               	movf	_var0,w
   828  0154  120A  118A  2255  120A  118A  	fcall	_decimal
   829  0159                     l1956:
   830                           
   831                           ;MainL2.c: 119:   TRISB = 0b00000000;
   832  0159  01F7               	clrf	Lcd_Set_Cursor@b
   833  015A  0AF7               	incf	Lcd_Set_Cursor@b,f
   834  015B  3002               	movlw	2
   835  015C  120A  118A  22BC  120A  118A  	fcall	_Lcd_Set_Cursor
   836  0161                     l1958:
   837                           
   838                           ;MainL2.c: 120:   TRISC = 0b10000000;
   839  0161  0878               	movf	_centenas,w
   840  0162  120A  118A  24B9  120A  118A  	fcall	_Lcd_Write_Char
   841  0167                     l1960:
   842                           
   843                           ;MainL2.c: 121:   TRISD = 0x00;
   844  0167  0879               	movf	_decenas,w
   845  0168  120A  118A  24B9  120A  118A  	fcall	_Lcd_Write_Char
   846  016D                     l1962:
   847                           
   848                           ;MainL2.c: 122:   TRISE = 0x00;
   849  016D  087A               	movf	_unidades,w
   850  016E  120A  118A  24B9  120A  118A  	fcall	_Lcd_Write_Char
   851                           
   852                           ;MainL2.c: 123: 
   853  0173  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   854  0174  120A  118A  244C  120A  118A  	fcall	_Lcd_Write_String
   855  0179                     l1964:
   856                           
   857                           ;MainL2.c: 124:   initAN(0b00000011, 0);
   858  0179  1283               	bcf	3,5	;RP0=0, select bank0
   859  017A  1303               	bcf	3,6	;RP1=0, select bank0
   860  017B  085D               	movf	_var1,w
   861  017C  120A  118A  2255  120A  118A  	fcall	_decimal
   862  0181                     l1966:
   863                           
   864                           ;MainL2.c: 125:   WPUB = 0b00000000;
   865  0181  0878               	movf	_centenas,w
   866  0182  120A  118A  24B9  120A  118A  	fcall	_Lcd_Write_Char
   867  0187                     l1968:
   868                           
   869                           ;MainL2.c: 126:   IOCB = 0b00000000;
   870  0187  0879               	movf	_decenas,w
   871  0188  120A  118A  24B9  120A  118A  	fcall	_Lcd_Write_Char
   872  018D                     l1970:
   873                           
   874                           ;MainL2.c: 127: 
   875  018D  087A               	movf	_unidades,w
   876  018E  120A  118A  24B9  120A  118A  	fcall	_Lcd_Write_Char
   877                           
   878                           ;MainL2.c: 129:   T1CON = 0x00;
   879  0193  29AC               	goto	l1980
   880  0194                     l1972:
   881                           
   882                           ;MainL2.c: 130:   TMR1IF = 0;
   883  0194  3001               	movlw	1
   884  0195  00D7               	movwf	??_main
   885  0196  0857               	movf	??_main,w
   886  0197  07D9               	addwf	_varUART,f
   887  0198                     l1974:
   888                           
   889                           ;MainL2.c: 132:   TMR1L = 0xB0;
   890  0198  1E0C               	btfss	12,4	;volatile
   891  0199  299B               	goto	u881
   892  019A  299C               	goto	u880
   893  019B                     u881:
   894  019B  29A2               	goto	l1978
   895  019C                     u880:
   896  019C                     l1976:
   897                           
   898                           ;MainL2.c: 133: 
   899  019C  0859               	movf	_varUART,w
   900  019D  3E20               	addlw	(low (_str| 0))& (0+255)
   901  019E  0084               	movwf	4
   902  019F  1383               	bcf	3,7	;select IRP bank0
   903  01A0  0800               	movf	0,w
   904  01A1  0099               	movwf	25	;volatile
   905  01A2                     l1978:
   906                           
   907                           ;MainL2.c: 135:   initOsc(4);
   908  01A2  3014               	movlw	20
   909  01A3  1283               	bcf	3,5	;RP0=0, select bank0
   910  01A4  1303               	bcf	3,6	;RP1=0, select bank0
   911  01A5  00D8               	movwf	??_main+1
   912  01A6  3079               	movlw	121
   913  01A7  00D7               	movwf	??_main
   914  01A8                     u937:
   915  01A8  0BD7               	decfsz	??_main,f
   916  01A9  29A8               	goto	u937
   917  01AA  0BD8               	decfsz	??_main+1,f
   918  01AB  29A8               	goto	u937
   919  01AC                     l1980:
   920                           
   921                           ;MainL2.c: 129:   T1CON = 0x00;
   922  01AC  3030               	movlw	48
   923  01AD  1283               	bcf	3,5	;RP0=0, select bank0
   924  01AE  1303               	bcf	3,6	;RP1=0, select bank0
   925  01AF  0259               	subwf	_varUART,w
   926  01B0  1C03               	skipc
   927  01B1  29B3               	goto	u891
   928  01B2  29B4               	goto	u890
   929  01B3                     u891:
   930  01B3  2994               	goto	l1972
   931  01B4                     u890:
   932  01B4                     l234:
   933                           
   934                           ;MainL2.c: 137:   PORTA = 0x00;
   935  01B4  1E0C               	btfss	12,4	;volatile
   936  01B5  29B7               	goto	u901
   937  01B6  29B8               	goto	u900
   938  01B7                     u901:
   939  01B7  29BA               	goto	l235
   940  01B8                     u900:
   941  01B8                     l1982:
   942                           
   943                           ;MainL2.c: 138:   PORTB = 0x00;
   944  01B8  0878               	movf	_centenas,w
   945  01B9  0099               	movwf	25	;volatile
   946  01BA                     l235:	
   947                           ;MainL2.c: 139:   PORTC = 0x00;
   948                           
   949                           
   950                           ;MainL2.c: 140:   PORTD = 0x00;
   951  01BA  3014               	movlw	20
   952  01BB  1283               	bcf	3,5	;RP0=0, select bank0
   953  01BC  1303               	bcf	3,6	;RP1=0, select bank0
   954  01BD  00D8               	movwf	??_main+1
   955  01BE  3079               	movlw	121
   956  01BF  00D7               	movwf	??_main
   957  01C0                     u947:
   958  01C0  0BD7               	decfsz	??_main,f
   959  01C1  29C0               	goto	u947
   960  01C2  0BD8               	decfsz	??_main+1,f
   961  01C3  29C0               	goto	u947
   962  01C4                     l1984:
   963                           
   964                           ;MainL2.c: 141:   PORTE = 0x00;
   965  01C4  1283               	bcf	3,5	;RP0=0, select bank0
   966  01C5  1303               	bcf	3,6	;RP1=0, select bank0
   967  01C6  1E0C               	btfss	12,4	;volatile
   968  01C7  29C9               	goto	u911
   969  01C8  29CA               	goto	u910
   970  01C9                     u911:
   971  01C9  29CC               	goto	l236
   972  01CA                     u910:
   973  01CA                     l1986:
   974                           
   975                           ;MainL2.c: 142: 
   976  01CA  0879               	movf	_decenas,w
   977  01CB  0099               	movwf	25	;volatile
   978  01CC                     l236:	
   979                           ;MainL2.c: 143: 
   980                           
   981                           
   982                           ;MainL2.c: 144: 
   983  01CC  3014               	movlw	20
   984  01CD  1283               	bcf	3,5	;RP0=0, select bank0
   985  01CE  1303               	bcf	3,6	;RP1=0, select bank0
   986  01CF  00D8               	movwf	??_main+1
   987  01D0  3079               	movlw	121
   988  01D1  00D7               	movwf	??_main
   989  01D2                     u957:
   990  01D2  0BD7               	decfsz	??_main,f
   991  01D3  29D2               	goto	u957
   992  01D4  0BD8               	decfsz	??_main+1,f
   993  01D5  29D2               	goto	u957
   994  01D6                     l1988:
   995                           
   996                           ;MainL2.c: 145:   PIE1 = 0b01000000;
   997  01D6  1283               	bcf	3,5	;RP0=0, select bank0
   998  01D7  1303               	bcf	3,6	;RP1=0, select bank0
   999  01D8  1E0C               	btfss	12,4	;volatile
  1000  01D9  29DB               	goto	u921
  1001  01DA  29DC               	goto	u920
  1002  01DB                     u921:
  1003  01DB  29DE               	goto	l237
  1004  01DC                     u920:
  1005  01DC                     l1990:
  1006                           
  1007                           ;MainL2.c: 146:   PIE2 = 0b00000000;
  1008  01DC  087A               	movf	_unidades,w
  1009  01DD  0099               	movwf	25	;volatile
  1010  01DE                     l237:	
  1011                           ;MainL2.c: 147:   PIR1 = 0x00;
  1012                           
  1013                           
  1014                           ;MainL2.c: 148:   PIR2 = 0x00;
  1015  01DE  3082               	movlw	130
  1016  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  1017  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  1018  01E1  00D8               	movwf	??_main+1
  1019  01E2  30DD               	movlw	221
  1020  01E3  00D7               	movwf	??_main
  1021  01E4                     u967:
  1022  01E4  0BD7               	decfsz	??_main,f
  1023  01E5  29E4               	goto	u967
  1024  01E6  0BD8               	decfsz	??_main+1,f
  1025  01E7  29E4               	goto	u967
  1026  01E8  2938               	goto	l1950
  1027  01E9  120A  118A  280C   	ljmp	start
  1028  01EC                     __end_of_main:
  1029                           
  1030                           	psect	text1
  1031  03AE                     __ptext1:	
  1032 ;; *************** function _setup *****************
  1033 ;; Defined at:
  1034 ;;		line 158 in file "MainL2.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;		None
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;		None
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      void 
  1041 ;; Registers used:
  1042 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1048 ;;      Params:         0       0       0       0       0
  1049 ;;      Locals:         0       0       0       0       0
  1050 ;;      Temps:          0       0       0       0       0
  1051 ;;      Totals:         0       0       0       0       0
  1052 ;;Total ram usage:        0 bytes
  1053 ;; Hardware stack levels used: 1
  1054 ;; Hardware stack levels required when called: 2
  1055 ;; This function calls:
  1056 ;;		_initAN
  1057 ;;		_initEUSART
  1058 ;;		_initOsc
  1059 ;; This function is called by:
  1060 ;;		_main
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           
  1065                           ;psect for function _setup
  1066  03AE                     _setup:
  1067  03AE                     l1640:	
  1068                           ;incstack = 0
  1069                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1070                           
  1071                           
  1072                           ;MainL2.c: 161: 
  1073  03AE  1683               	bsf	3,5	;RP0=1, select bank3
  1074  03AF  1703               	bsf	3,6	;RP1=1, select bank3
  1075  03B0  0189               	clrf	9	;volatile
  1076  03B1                     l1642:
  1077                           
  1078                           ;MainL2.c: 163:     uint8_t valor;
  1079  03B1  3003               	movlw	3
  1080  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  1081  03B3  1303               	bcf	3,6	;RP1=0, select bank1
  1082  03B4  0085               	movwf	5	;volatile
  1083  03B5                     l1644:
  1084                           
  1085                           ;MainL2.c: 164:     valor = variable;
  1086  03B5  0186               	clrf	6	;volatile
  1087                           
  1088                           ;MainL2.c: 165:     centenas = (valor/100) ;
  1089  03B6  3080               	movlw	128
  1090  03B7  0087               	movwf	7	;volatile
  1091  03B8                     l1646:
  1092                           
  1093                           ;MainL2.c: 166:     valor = (valor - (centenas*100));
  1094  03B8  0188               	clrf	8	;volatile
  1095  03B9                     l1648:
  1096                           
  1097                           ;MainL2.c: 167:     decenas = (valor/10);
  1098  03B9  0189               	clrf	9	;volatile
  1099  03BA                     l1650:
  1100                           
  1101                           ;MainL2.c: 169:     unidades = (valor);
  1102  03BA  01F3               	clrf	initAN@just
  1103  03BB  3003               	movlw	3
  1104  03BC  120A  118A  2475  120A  118A  	fcall	_initAN
  1105  03C1                     l1652:
  1106                           
  1107                           ;MainL2.c: 170: 
  1108  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  1109  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  1110  03C3  0195               	clrf	21	;volatile
  1111  03C4                     l1654:
  1112                           
  1113                           ;MainL2.c: 171:     centenas = centenas + 48;
  1114  03C4  0196               	clrf	22	;volatile
  1115  03C5                     l1656:
  1116                           
  1117                           ;MainL2.c: 173:     unidades = unidades + 48;
  1118  03C5  30C4               	movlw	196
  1119  03C6  0081               	movwf	1	;volatile
  1120  03C7                     l1658:
  1121                           
  1122                           ;MainL2.c: 174: 
  1123  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  1124  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  1125  03C9  0190               	clrf	16	;volatile
  1126  03CA                     l1660:
  1127                           
  1128                           ;MainL2.c: 175: }
  1129  03CA  100C               	bcf	12,0	;volatile
  1130  03CB                     l1662:
  1131  03CB  303C               	movlw	60
  1132  03CC  008F               	movwf	15	;volatile
  1133  03CD                     l1664:
  1134  03CD  30B0               	movlw	176
  1135  03CE  008E               	movwf	14	;volatile
  1136  03CF                     l1666:
  1137  03CF  3004               	movlw	4
  1138  03D0  120A  118A  2362  120A  118A  	fcall	_initOsc
  1139  03D5                     l1668:
  1140  03D5  01F3               	clrf	initEUSART@rx
  1141  03D6  3000               	movlw	0
  1142  03D7  120A  118A  2499  120A  118A  	fcall	_initEUSART
  1143  03DC                     l1670:
  1144  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  1145  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  1146  03DE  0185               	clrf	5	;volatile
  1147  03DF                     l1672:
  1148  03DF  0186               	clrf	6	;volatile
  1149  03E0                     l1674:
  1150  03E0  0187               	clrf	7	;volatile
  1151  03E1                     l1676:
  1152  03E1  0188               	clrf	8	;volatile
  1153  03E2                     l1678:
  1154  03E2  0189               	clrf	9	;volatile
  1155  03E3                     l1680:
  1156  03E3  3040               	movlw	64
  1157  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  1158  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  1159  03E6  008C               	movwf	12	;volatile
  1160  03E7                     l1682:
  1161  03E7  018D               	clrf	13	;volatile
  1162  03E8                     l1684:
  1163  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  1164  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  1165  03EA  018C               	clrf	12	;volatile
  1166  03EB                     l1686:
  1167  03EB  018D               	clrf	13	;volatile
  1168  03EC                     l1688:
  1169  03EC  30C0               	movlw	192
  1170  03ED  008B               	movwf	11	;volatile
  1171  03EE                     l243:
  1172  03EE  0008               	return
  1173  03EF                     __end_of_setup:
  1174                           
  1175                           	psect	text2
  1176  0362                     __ptext2:	
  1177 ;; *************** function _initOsc *****************
  1178 ;; Defined at:
  1179 ;;		line 14 in file "./my_lib.h"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  frec            1    wreg     unsigned char 
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;  frec            1    5[COMMON] unsigned char 
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1193 ;;      Params:         0       0       0       0       0
  1194 ;;      Locals:         1       0       0       0       0
  1195 ;;      Temps:          2       0       0       0       0
  1196 ;;      Totals:         3       0       0       0       0
  1197 ;;Total ram usage:        3 bytes
  1198 ;; Hardware stack levels used: 1
  1199 ;; Hardware stack levels required when called: 1
  1200 ;; This function calls:
  1201 ;;		Nothing
  1202 ;; This function is called by:
  1203 ;;		_setup
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           
  1208                           ;psect for function _initOsc
  1209  0362                     _initOsc:
  1210                           
  1211                           ;incstack = 0
  1212                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1213                           ;initOsc@frec stored from wreg
  1214  0362  00F5               	movwf	initOsc@frec
  1215  0363                     l1376:
  1216                           
  1217                           ;./my_lib.h: 15:     OSCCONbits.SCS = 1;
  1218  0363  1683               	bsf	3,5	;RP0=1, select bank1
  1219  0364  1303               	bcf	3,6	;RP1=0, select bank1
  1220  0365  140F               	bsf	15,0	;volatile
  1221                           
  1222                           ;./my_lib.h: 16:         switch(frec){
  1223  0366  2B8B               	goto	l1380
  1224  0367                     l102:	
  1225                           ;./my_lib.h: 17:             case 8:
  1226                           
  1227                           
  1228                           ;./my_lib.h: 18:                 OSCCONbits.IRCF0 = 1;
  1229  0367  160F               	bsf	15,4	;volatile
  1230                           
  1231                           ;./my_lib.h: 19:                 OSCCONbits.IRCF1 = 1;
  1232  0368  168F               	bsf	15,5	;volatile
  1233                           
  1234                           ;./my_lib.h: 20:                 OSCCONbits.IRCF2 = 1;
  1235  0369  170F               	bsf	15,6	;volatile
  1236                           
  1237                           ;./my_lib.h: 21:                 break;
  1238  036A  2BAD               	goto	l112
  1239  036B                     l104:	
  1240                           ;./my_lib.h: 23:             case 4:
  1241                           
  1242                           
  1243                           ;./my_lib.h: 24:                 OSCCONbits.IRCF0 = 0;
  1244  036B  120F               	bcf	15,4	;volatile
  1245                           
  1246                           ;./my_lib.h: 25:                 OSCCONbits.IRCF1 = 1;
  1247  036C  168F               	bsf	15,5	;volatile
  1248                           
  1249                           ;./my_lib.h: 26:                 OSCCONbits.IRCF2 = 1;
  1250  036D  170F               	bsf	15,6	;volatile
  1251                           
  1252                           ;./my_lib.h: 27:                 break;
  1253  036E  2BAD               	goto	l112
  1254  036F                     l105:	
  1255                           ;./my_lib.h: 28:             case 2:
  1256                           
  1257                           
  1258                           ;./my_lib.h: 29:                 OSCCONbits.IRCF0 = 1;
  1259  036F  160F               	bsf	15,4	;volatile
  1260                           
  1261                           ;./my_lib.h: 30:                 OSCCONbits.IRCF1 = 0;
  1262  0370  128F               	bcf	15,5	;volatile
  1263                           
  1264                           ;./my_lib.h: 31:                 OSCCONbits.IRCF2 = 1;
  1265  0371  170F               	bsf	15,6	;volatile
  1266                           
  1267                           ;./my_lib.h: 32:                 break;
  1268  0372  2BAD               	goto	l112
  1269  0373                     l106:	
  1270                           ;./my_lib.h: 33:              case 1:
  1271                           
  1272                           
  1273                           ;./my_lib.h: 34:                 OSCCONbits.IRCF0 = 0;
  1274  0373  120F               	bcf	15,4	;volatile
  1275                           
  1276                           ;./my_lib.h: 35:                 OSCCONbits.IRCF1 = 0;
  1277  0374  128F               	bcf	15,5	;volatile
  1278                           
  1279                           ;./my_lib.h: 36:                 OSCCONbits.IRCF2 = 1;
  1280  0375  170F               	bsf	15,6	;volatile
  1281                           
  1282                           ;./my_lib.h: 37:                 break;
  1283  0376  2BAD               	goto	l112
  1284  0377                     l107:	
  1285                           ;./my_lib.h: 38:              case 50:
  1286                           
  1287                           
  1288                           ;./my_lib.h: 39:                 OSCCONbits.IRCF0 = 0;
  1289  0377  120F               	bcf	15,4	;volatile
  1290                           
  1291                           ;./my_lib.h: 40:                 OSCCONbits.IRCF1 = 1;
  1292  0378  168F               	bsf	15,5	;volatile
  1293                           
  1294                           ;./my_lib.h: 41:                 OSCCONbits.IRCF2 = 1;
  1295  0379  170F               	bsf	15,6	;volatile
  1296                           
  1297                           ;./my_lib.h: 42:                 break;
  1298  037A  2BAD               	goto	l112
  1299  037B                     l108:	
  1300                           ;./my_lib.h: 43:              case 25:
  1301                           
  1302                           
  1303                           ;./my_lib.h: 44:                 OSCCONbits.IRCF0 = 0;
  1304  037B  120F               	bcf	15,4	;volatile
  1305                           
  1306                           ;./my_lib.h: 45:                 OSCCONbits.IRCF1 = 1;
  1307  037C  168F               	bsf	15,5	;volatile
  1308                           
  1309                           ;./my_lib.h: 46:                 OSCCONbits.IRCF2 = 0;
  1310  037D  130F               	bcf	15,6	;volatile
  1311                           
  1312                           ;./my_lib.h: 47:                 break;
  1313  037E  2BAD               	goto	l112
  1314  037F                     l109:	
  1315                           ;./my_lib.h: 48:               case 12:
  1316                           
  1317                           
  1318                           ;./my_lib.h: 49:                 OSCCONbits.IRCF0 = 1;
  1319  037F  160F               	bsf	15,4	;volatile
  1320                           
  1321                           ;./my_lib.h: 50:                 OSCCONbits.IRCF1 = 0;
  1322  0380  128F               	bcf	15,5	;volatile
  1323                           
  1324                           ;./my_lib.h: 51:                 OSCCONbits.IRCF2 = 0;
  1325  0381  130F               	bcf	15,6	;volatile
  1326                           
  1327                           ;./my_lib.h: 52:                 break;
  1328  0382  2BAD               	goto	l112
  1329  0383                     l110:	
  1330                           ;./my_lib.h: 53:               case 31:
  1331                           
  1332                           
  1333                           ;./my_lib.h: 54:                 OSCCONbits.IRCF0 = 0;
  1334  0383  120F               	bcf	15,4	;volatile
  1335                           
  1336                           ;./my_lib.h: 55:                 OSCCONbits.IRCF1 = 1;
  1337  0384  168F               	bsf	15,5	;volatile
  1338                           
  1339                           ;./my_lib.h: 56:                 OSCCONbits.IRCF2 = 1;
  1340  0385  170F               	bsf	15,6	;volatile
  1341                           
  1342                           ;./my_lib.h: 57:                 break;
  1343  0386  2BAD               	goto	l112
  1344  0387                     l111:	
  1345                           ;./my_lib.h: 58:               default:
  1346                           
  1347                           
  1348                           ;./my_lib.h: 59:                 OSCCONbits.IRCF0 = 0;
  1349  0387  120F               	bcf	15,4	;volatile
  1350                           
  1351                           ;./my_lib.h: 60:                 OSCCONbits.IRCF1 = 1;
  1352  0388  168F               	bsf	15,5	;volatile
  1353                           
  1354                           ;./my_lib.h: 61:                 OSCCONbits.IRCF2 = 1;
  1355  0389  170F               	bsf	15,6	;volatile
  1356                           
  1357                           ;./my_lib.h: 62:                 break;
  1358  038A  2BAD               	goto	l112
  1359  038B                     l1380:
  1360  038B  0875               	movf	initOsc@frec,w
  1361  038C  00F3               	movwf	??_initOsc
  1362  038D  01F4               	clrf	??_initOsc+1
  1363                           
  1364                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1365                           ; Switch size 1, requested type "simple"
  1366                           ; Number of cases is 1, Range of values is 0 to 0
  1367                           ; switch strategies available:
  1368                           ; Name         Instructions Cycles
  1369                           ; simple_byte            4     3 (average)
  1370                           ; direct_byte           11     8 (fixed)
  1371                           ; jumptable            260     6 (fixed)
  1372                           ;	Chosen strategy is simple_byte
  1373  038E  0874               	movf	??_initOsc+1,w
  1374  038F  3A00               	xorlw	0	; case 0
  1375  0390  1903               	skipnz
  1376  0391  2B93               	goto	l2046
  1377  0392  2B87               	goto	l111
  1378  0393                     l2046:
  1379                           
  1380                           ; Switch size 1, requested type "simple"
  1381                           ; Number of cases is 8, Range of values is 1 to 50
  1382                           ; switch strategies available:
  1383                           ; Name         Instructions Cycles
  1384                           ; simple_byte           25    13 (average)
  1385                           ; direct_byte          161    11 (fixed)
  1386                           ; jumptable            263     9 (fixed)
  1387                           ;	Chosen strategy is simple_byte
  1388  0393  0873               	movf	??_initOsc,w
  1389  0394  3A01               	xorlw	1	; case 1
  1390  0395  1903               	skipnz
  1391  0396  2B73               	goto	l106
  1392  0397  3A03               	xorlw	3	; case 2
  1393  0398  1903               	skipnz
  1394  0399  2B6F               	goto	l105
  1395  039A  3A06               	xorlw	6	; case 4
  1396  039B  1903               	skipnz
  1397  039C  2B6B               	goto	l104
  1398  039D  3A0C               	xorlw	12	; case 8
  1399  039E  1903               	skipnz
  1400  039F  2B67               	goto	l102
  1401  03A0  3A04               	xorlw	4	; case 12
  1402  03A1  1903               	skipnz
  1403  03A2  2B7F               	goto	l109
  1404  03A3  3A15               	xorlw	21	; case 25
  1405  03A4  1903               	skipnz
  1406  03A5  2B7B               	goto	l108
  1407  03A6  3A06               	xorlw	6	; case 31
  1408  03A7  1903               	skipnz
  1409  03A8  2B83               	goto	l110
  1410  03A9  3A2D               	xorlw	45	; case 50
  1411  03AA  1903               	skipnz
  1412  03AB  2B77               	goto	l107
  1413  03AC  2B87               	goto	l111
  1414  03AD                     l112:
  1415  03AD  0008               	return
  1416  03AE                     __end_of_initOsc:
  1417                           
  1418                           	psect	text3
  1419  0499                     __ptext3:	
  1420 ;; *************** function _initEUSART *****************
  1421 ;; Defined at:
  1422 ;;		line 318 in file "./my_lib.h"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;  tx              1    wreg     unsigned char 
  1425 ;;  rx              1    3[COMMON] unsigned char 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;  tx              1    4[COMMON] unsigned char 
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		wreg, status,0
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1437 ;;      Params:         1       0       0       0       0
  1438 ;;      Locals:         1       0       0       0       0
  1439 ;;      Temps:          0       0       0       0       0
  1440 ;;      Totals:         2       0       0       0       0
  1441 ;;Total ram usage:        2 bytes
  1442 ;; Hardware stack levels used: 1
  1443 ;; Hardware stack levels required when called: 1
  1444 ;; This function calls:
  1445 ;;		Nothing
  1446 ;; This function is called by:
  1447 ;;		_setup
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           
  1452                           ;psect for function _initEUSART
  1453  0499                     _initEUSART:
  1454                           
  1455                           ;incstack = 0
  1456                           ; Regs used in _initEUSART: [wreg+status,0]
  1457                           ;initEUSART@tx stored from wreg
  1458  0499  00F4               	movwf	initEUSART@tx
  1459  049A                     l1408:
  1460                           
  1461                           ;./my_lib.h: 322:   TXSTAbits.SYNC = 0;
  1462  049A  1683               	bsf	3,5	;RP0=1, select bank1
  1463  049B  1303               	bcf	3,6	;RP1=0, select bank1
  1464  049C  1218               	bcf	24,4	;volatile
  1465                           
  1466                           ;./my_lib.h: 323:   TXSTAbits.BRGH = 1;
  1467  049D  1518               	bsf	24,2	;volatile
  1468                           
  1469                           ;./my_lib.h: 324:   TXSTAbits.TX9 = 0;
  1470  049E  1318               	bcf	24,6	;volatile
  1471                           
  1472                           ;./my_lib.h: 325:   TXSTAbits.TXEN= 1;
  1473  049F  1698               	bsf	24,5	;volatile
  1474                           
  1475                           ;./my_lib.h: 326:   RCSTAbits.SPEN = 1;
  1476  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  1477  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  1478  04A2  1798               	bsf	24,7	;volatile
  1479                           
  1480                           ;./my_lib.h: 329:   RCSTAbits.RX9 = 0;
  1481  04A3  1318               	bcf	24,6	;volatile
  1482                           
  1483                           ;./my_lib.h: 330:   RCSTAbits.CREN = 1;
  1484  04A4  1618               	bsf	24,4	;volatile
  1485                           
  1486                           ;./my_lib.h: 333:     BAUDCTLbits.BRG16 = 0;
  1487  04A5  1683               	bsf	3,5	;RP0=1, select bank3
  1488  04A6  1703               	bsf	3,6	;RP1=1, select bank3
  1489  04A7  1187               	bcf	7,3	;volatile
  1490  04A8                     l1410:
  1491                           
  1492                           ;./my_lib.h: 334:     SPBRG =25;
  1493  04A8  3019               	movlw	25
  1494  04A9  1683               	bsf	3,5	;RP0=1, select bank1
  1495  04AA  1303               	bcf	3,6	;RP1=0, select bank1
  1496  04AB  0099               	movwf	25	;volatile
  1497                           
  1498                           ;./my_lib.h: 335:     SPBRGH = 1;
  1499  04AC  3001               	movlw	1
  1500  04AD  009A               	movwf	26	;volatile
  1501  04AE                     l1412:
  1502                           
  1503                           ;./my_lib.h: 337:     PIE1bits.TXIE =tx;
  1504  04AE  0C74               	rrf	initEUSART@tx,w
  1505  04AF  1C03               	skipc
  1506  04B0  120C               	bcf	12,4	;volatile
  1507  04B1  1803               	skipnc
  1508  04B2  160C               	bsf	12,4	;volatile
  1509  04B3                     l1414:
  1510                           
  1511                           ;./my_lib.h: 338:     PIE1bits.RCIE =rx;
  1512  04B3  0C73               	rrf	initEUSART@rx,w
  1513  04B4  1C03               	skipc
  1514  04B5  128C               	bcf	12,5	;volatile
  1515  04B6  1803               	skipnc
  1516  04B7  168C               	bsf	12,5	;volatile
  1517  04B8                     l186:
  1518  04B8  0008               	return
  1519  04B9                     __end_of_initEUSART:
  1520                           
  1521                           	psect	text4
  1522  0475                     __ptext4:	
  1523 ;; *************** function _initAN *****************
  1524 ;; Defined at:
  1525 ;;		line 67 in file "./my_lib.h"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  bin             1    wreg     unsigned char 
  1528 ;;  just            1    3[COMMON] unsigned char 
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;  bin             1    5[COMMON] unsigned char 
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		wreg, status,2, status,0
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1540 ;;      Params:         1       0       0       0       0
  1541 ;;      Locals:         1       0       0       0       0
  1542 ;;      Temps:          1       0       0       0       0
  1543 ;;      Totals:         3       0       0       0       0
  1544 ;;Total ram usage:        3 bytes
  1545 ;; Hardware stack levels used: 1
  1546 ;; Hardware stack levels required when called: 1
  1547 ;; This function calls:
  1548 ;;		Nothing
  1549 ;; This function is called by:
  1550 ;;		_setup
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554                           
  1555                           ;psect for function _initAN
  1556  0475                     _initAN:
  1557                           
  1558                           ;incstack = 0
  1559                           ; Regs used in _initAN: [wreg+status,2+status,0]
  1560                           ;initAN@bin stored from wreg
  1561  0475  00F5               	movwf	initAN@bin
  1562  0476                     l1386:
  1563                           
  1564                           ;./my_lib.h: 69:      ANSEL = bin;
  1565  0476  0875               	movf	initAN@bin,w
  1566  0477  1683               	bsf	3,5	;RP0=1, select bank3
  1567  0478  1703               	bsf	3,6	;RP1=1, select bank3
  1568  0479  0088               	movwf	8	;volatile
  1569  047A                     l1388:
  1570                           
  1571                           ;./my_lib.h: 70:      ANSELH = 0b00000000;
  1572  047A  0189               	clrf	9	;volatile
  1573  047B                     l1390:
  1574                           
  1575                           ;./my_lib.h: 71:      TRISA = bin;
  1576  047B  0875               	movf	initAN@bin,w
  1577  047C  1683               	bsf	3,5	;RP0=1, select bank1
  1578  047D  1303               	bcf	3,6	;RP1=0, select bank1
  1579  047E  0085               	movwf	5	;volatile
  1580  047F                     l1392:
  1581                           
  1582                           ;./my_lib.h: 73:      ADCON0bits.CHS= 0;
  1583  047F  30C3               	movlw	-61
  1584  0480  1283               	bcf	3,5	;RP0=0, select bank0
  1585  0481  1303               	bcf	3,6	;RP1=0, select bank0
  1586  0482  059F               	andwf	31,f	;volatile
  1587  0483                     l1394:
  1588                           
  1589                           ;./my_lib.h: 74:      _delay((unsigned long)((100)*(4000000/4000000.0)));
  1590  0483  3021               	movlw	33
  1591  0484  00F4               	movwf	??_initAN
  1592  0485                     u977:
  1593  0485  0BF4               	decfsz	??_initAN,f
  1594  0486  2C85               	goto	u977
  1595  0487                     l1396:
  1596                           
  1597                           ;./my_lib.h: 76:      ADCON0bits.ADON = 1;
  1598  0487  1283               	bcf	3,5	;RP0=0, select bank0
  1599  0488  1303               	bcf	3,6	;RP1=0, select bank0
  1600  0489  141F               	bsf	31,0	;volatile
  1601  048A                     l1398:
  1602                           
  1603                           ;./my_lib.h: 77:      ADCON0bits.ADCS = 1;
  1604  048A  081F               	movf	31,w	;volatile
  1605  048B  393F               	andlw	-193
  1606  048C  3840               	iorlw	64
  1607  048D  009F               	movwf	31	;volatile
  1608  048E                     l1400:
  1609                           
  1610                           ;./my_lib.h: 81:      ADCON1bits.ADFM = just;
  1611  048E  0C73               	rrf	initAN@just,w
  1612  048F  1683               	bsf	3,5	;RP0=1, select bank1
  1613  0490  1303               	bcf	3,6	;RP1=0, select bank1
  1614  0491  1C03               	skipc
  1615  0492  139F               	bcf	31,7	;volatile
  1616  0493  1803               	skipnc
  1617  0494  179F               	bsf	31,7	;volatile
  1618  0495                     l1402:
  1619                           
  1620                           ;./my_lib.h: 82:      ADCON1bits.VCFG0 = 0;
  1621  0495  121F               	bcf	31,4	;volatile
  1622  0496                     l1404:
  1623                           
  1624                           ;./my_lib.h: 83:      ADCON1bits.VCFG1 = 0;
  1625  0496  129F               	bcf	31,5	;volatile
  1626  0497                     l1406:
  1627                           
  1628                           ;./my_lib.h: 85:      PIE1bits.ADIE= 1;
  1629  0497  170C               	bsf	12,6	;volatile
  1630  0498                     l115:
  1631  0498  0008               	return
  1632  0499                     __end_of_initAN:
  1633                           
  1634                           	psect	text5
  1635  0255                     __ptext5:	
  1636 ;; *************** function _decimal *****************
  1637 ;; Defined at:
  1638 ;;		line 207 in file "MainL2.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;  variable        1    wreg     unsigned char 
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;  variable        1    7[BANK0 ] unsigned char 
  1643 ;;  valor           1    8[BANK0 ] unsigned char 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  1    wreg      void 
  1646 ;; Registers used:
  1647 ;;		wreg, status,2, status,0, pclath, cstack
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1653 ;;      Params:         0       0       0       0       0
  1654 ;;      Locals:         0       2       0       0       0
  1655 ;;      Temps:          0       3       0       0       0
  1656 ;;      Totals:         0       5       0       0       0
  1657 ;;Total ram usage:        5 bytes
  1658 ;; Hardware stack levels used: 1
  1659 ;; Hardware stack levels required when called: 2
  1660 ;; This function calls:
  1661 ;;		___awdiv
  1662 ;;		___bmul
  1663 ;; This function is called by:
  1664 ;;		_main
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           
  1669                           ;psect for function _decimal
  1670  0255                     _decimal:
  1671                           
  1672                           ;incstack = 0
  1673                           ; Regs used in _decimal: [wreg+status,2+status,0+pclath+cstack]
  1674                           ;decimal@variable stored from wreg
  1675  0255  1283               	bcf	3,5	;RP0=0, select bank0
  1676  0256  1303               	bcf	3,6	;RP1=0, select bank0
  1677  0257  00D5               	movwf	decimal@variable
  1678  0258                     l1930:
  1679  0258  0855               	movf	decimal@variable,w
  1680  0259  00D2               	movwf	??_decimal
  1681  025A  0852               	movf	??_decimal,w
  1682  025B  00D6               	movwf	decimal@valor
  1683  025C                     l1932:
  1684  025C  3064               	movlw	100
  1685  025D  00F3               	movwf	___awdiv@divisor
  1686  025E  3000               	movlw	0
  1687  025F  00F4               	movwf	___awdiv@divisor+1
  1688  0260  0856               	movf	decimal@valor,w
  1689  0261  00D2               	movwf	??_decimal
  1690  0262  01D3               	clrf	??_decimal+1
  1691  0263  0852               	movf	??_decimal,w
  1692  0264  00F5               	movwf	___awdiv@dividend
  1693  0265  0853               	movf	??_decimal+1,w
  1694  0266  00F6               	movwf	___awdiv@dividend+1
  1695  0267  120A  118A  21EC  120A  118A  	fcall	___awdiv
  1696  026C  0873               	movf	?___awdiv,w
  1697  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1698  026E  1303               	bcf	3,6	;RP1=0, select bank0
  1699  026F  00D4               	movwf	??_decimal+2
  1700  0270  0854               	movf	??_decimal+2,w
  1701  0271  00F8               	movwf	_centenas
  1702  0272                     l1934:
  1703  0272  309C               	movlw	156
  1704  0273  00D2               	movwf	??_decimal
  1705  0274  0852               	movf	??_decimal,w
  1706  0275  00F3               	movwf	___bmul@multiplicand
  1707  0276  0878               	movf	_centenas,w
  1708  0277  120A  118A  250B  120A  118A  	fcall	___bmul
  1709  027C  1283               	bcf	3,5	;RP0=0, select bank0
  1710  027D  1303               	bcf	3,6	;RP1=0, select bank0
  1711  027E  0756               	addwf	decimal@valor,w
  1712  027F  00D3               	movwf	??_decimal+1
  1713  0280  0853               	movf	??_decimal+1,w
  1714  0281  00D6               	movwf	decimal@valor
  1715  0282                     l1936:
  1716  0282  300A               	movlw	10
  1717  0283  00F3               	movwf	___awdiv@divisor
  1718  0284  3000               	movlw	0
  1719  0285  00F4               	movwf	___awdiv@divisor+1
  1720  0286  0856               	movf	decimal@valor,w
  1721  0287  00D2               	movwf	??_decimal
  1722  0288  01D3               	clrf	??_decimal+1
  1723  0289  0852               	movf	??_decimal,w
  1724  028A  00F5               	movwf	___awdiv@dividend
  1725  028B  0853               	movf	??_decimal+1,w
  1726  028C  00F6               	movwf	___awdiv@dividend+1
  1727  028D  120A  118A  21EC  120A  118A  	fcall	___awdiv
  1728  0292  0873               	movf	?___awdiv,w
  1729  0293  1283               	bcf	3,5	;RP0=0, select bank0
  1730  0294  1303               	bcf	3,6	;RP1=0, select bank0
  1731  0295  00D4               	movwf	??_decimal+2
  1732  0296  0854               	movf	??_decimal+2,w
  1733  0297  00F9               	movwf	_decenas
  1734  0298                     l1938:
  1735  0298  30F6               	movlw	246
  1736  0299  00D2               	movwf	??_decimal
  1737  029A  0852               	movf	??_decimal,w
  1738  029B  00F3               	movwf	___bmul@multiplicand
  1739  029C  0879               	movf	_decenas,w
  1740  029D  120A  118A  250B  120A  118A  	fcall	___bmul
  1741  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1742  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1743  02A4  0756               	addwf	decimal@valor,w
  1744  02A5  00D3               	movwf	??_decimal+1
  1745  02A6  0853               	movf	??_decimal+1,w
  1746  02A7  00D6               	movwf	decimal@valor
  1747  02A8  0856               	movf	decimal@valor,w
  1748  02A9  00D2               	movwf	??_decimal
  1749  02AA  0852               	movf	??_decimal,w
  1750  02AB  00FA               	movwf	_unidades
  1751  02AC                     l1940:
  1752  02AC  0878               	movf	_centenas,w
  1753  02AD  3E30               	addlw	48
  1754  02AE  00D2               	movwf	??_decimal
  1755  02AF  0852               	movf	??_decimal,w
  1756  02B0  00F8               	movwf	_centenas
  1757  02B1                     l1942:
  1758  02B1  0879               	movf	_decenas,w
  1759  02B2  3E30               	addlw	48
  1760  02B3  00D2               	movwf	??_decimal
  1761  02B4  0852               	movf	??_decimal,w
  1762  02B5  00F9               	movwf	_decenas
  1763  02B6                     l1944:
  1764  02B6  087A               	movf	_unidades,w
  1765  02B7  3E30               	addlw	48
  1766  02B8  00D2               	movwf	??_decimal
  1767  02B9  0852               	movf	??_decimal,w
  1768  02BA  00FA               	movwf	_unidades
  1769  02BB                     l249:
  1770  02BB  0008               	return
  1771  02BC                     __end_of_decimal:
  1772                           
  1773                           	psect	text6
  1774  050B                     __ptext6:	
  1775 ;; *************** function ___bmul *****************
  1776 ;; Defined at:
  1777 ;;		line 4 in file "E:\Microchip\XC8\pic\sources\c90\common\Umul8.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;  multiplier      1    wreg     unsigned char 
  1780 ;;  multiplicand    1    3[COMMON] unsigned char 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  multiplier      1    6[COMMON] unsigned char 
  1783 ;;  product         1    5[COMMON] unsigned char 
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      unsigned char 
  1786 ;; Registers used:
  1787 ;;		wreg, status,2, status,0
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1793 ;;      Params:         1       0       0       0       0
  1794 ;;      Locals:         2       0       0       0       0
  1795 ;;      Temps:          1       0       0       0       0
  1796 ;;      Totals:         4       0       0       0       0
  1797 ;;Total ram usage:        4 bytes
  1798 ;; Hardware stack levels used: 1
  1799 ;; Hardware stack levels required when called: 1
  1800 ;; This function calls:
  1801 ;;		Nothing
  1802 ;; This function is called by:
  1803 ;;		_decimal
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           
  1808                           ;psect for function ___bmul
  1809  050B                     ___bmul:
  1810                           
  1811                           ;incstack = 0
  1812                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1813                           ;___bmul@multiplier stored from wreg
  1814  050B  00F6               	movwf	___bmul@multiplier
  1815  050C                     l1438:
  1816  050C  01F5               	clrf	___bmul@product
  1817  050D                     l1440:
  1818  050D  1C76               	btfss	___bmul@multiplier,0
  1819  050E  2D10               	goto	u421
  1820  050F  2D11               	goto	u420
  1821  0510                     u421:
  1822  0510  2D15               	goto	l1444
  1823  0511                     u420:
  1824  0511                     l1442:
  1825  0511  0873               	movf	___bmul@multiplicand,w
  1826  0512  00F4               	movwf	??___bmul
  1827  0513  0874               	movf	??___bmul,w
  1828  0514  07F5               	addwf	___bmul@product,f
  1829  0515                     l1444:
  1830  0515  1003               	clrc
  1831  0516  0DF3               	rlf	___bmul@multiplicand,f
  1832  0517                     l1446:
  1833  0517  1003               	clrc
  1834  0518  0CF6               	rrf	___bmul@multiplier,f
  1835  0519  0876               	movf	___bmul@multiplier,w
  1836  051A  1D03               	btfss	3,2
  1837  051B  2D1D               	goto	u431
  1838  051C  2D1E               	goto	u430
  1839  051D                     u431:
  1840  051D  2D0D               	goto	l1440
  1841  051E                     u430:
  1842  051E                     l1448:
  1843  051E  0875               	movf	___bmul@product,w
  1844  051F                     l402:
  1845  051F  0008               	return
  1846  0520                     __end_of___bmul:
  1847                           
  1848                           	psect	text7
  1849  01EC                     __ptext7:	
  1850 ;; *************** function ___awdiv *****************
  1851 ;; Defined at:
  1852 ;;		line 5 in file "E:\Microchip\XC8\pic\sources\c90\common\awdiv.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  divisor         2    3[COMMON] int 
  1855 ;;  dividend        2    5[COMMON] int 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  quotient        2    2[BANK0 ] int 
  1858 ;;  sign            1    1[BANK0 ] unsigned char 
  1859 ;;  counter         1    0[BANK0 ] unsigned char 
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  2    3[COMMON] int 
  1862 ;; Registers used:
  1863 ;;		wreg, status,2, status,0
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1869 ;;      Params:         4       0       0       0       0
  1870 ;;      Locals:         0       4       0       0       0
  1871 ;;      Temps:          1       0       0       0       0
  1872 ;;      Totals:         5       4       0       0       0
  1873 ;;Total ram usage:        9 bytes
  1874 ;; Hardware stack levels used: 1
  1875 ;; Hardware stack levels required when called: 1
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_decimal
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           
  1884                           ;psect for function ___awdiv
  1885  01EC                     ___awdiv:
  1886  01EC                     l1452:	
  1887                           ;incstack = 0
  1888                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1889                           
  1890  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  1891  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  1892  01EE  01CF               	clrf	___awdiv@sign
  1893  01EF                     l1454:
  1894  01EF  1FF4               	btfss	___awdiv@divisor+1,7
  1895  01F0  29F2               	goto	u441
  1896  01F1  29F3               	goto	u440
  1897  01F2                     u441:
  1898  01F2  29FA               	goto	l1460
  1899  01F3                     u440:
  1900  01F3                     l1456:
  1901  01F3  09F3               	comf	___awdiv@divisor,f
  1902  01F4  09F4               	comf	___awdiv@divisor+1,f
  1903  01F5  0AF3               	incf	___awdiv@divisor,f
  1904  01F6  1903               	skipnz
  1905  01F7  0AF4               	incf	___awdiv@divisor+1,f
  1906  01F8                     l1458:
  1907  01F8  01CF               	clrf	___awdiv@sign
  1908  01F9  0ACF               	incf	___awdiv@sign,f
  1909  01FA                     l1460:
  1910  01FA  1FF6               	btfss	___awdiv@dividend+1,7
  1911  01FB  29FD               	goto	u451
  1912  01FC  29FE               	goto	u450
  1913  01FD                     u451:
  1914  01FD  2A07               	goto	l1466
  1915  01FE                     u450:
  1916  01FE                     l1462:
  1917  01FE  09F5               	comf	___awdiv@dividend,f
  1918  01FF  09F6               	comf	___awdiv@dividend+1,f
  1919  0200  0AF5               	incf	___awdiv@dividend,f
  1920  0201  1903               	skipnz
  1921  0202  0AF6               	incf	___awdiv@dividend+1,f
  1922  0203                     l1464:
  1923  0203  3001               	movlw	1
  1924  0204  00F7               	movwf	??___awdiv
  1925  0205  0877               	movf	??___awdiv,w
  1926  0206  06CF               	xorwf	___awdiv@sign,f
  1927  0207                     l1466:
  1928  0207  01D0               	clrf	___awdiv@quotient
  1929  0208  01D1               	clrf	___awdiv@quotient+1
  1930  0209                     l1468:
  1931  0209  0873               	movf	___awdiv@divisor,w
  1932  020A  0474               	iorwf	___awdiv@divisor+1,w
  1933  020B  1903               	btfsc	3,2
  1934  020C  2A0E               	goto	u461
  1935  020D  2A0F               	goto	u460
  1936  020E                     u461:
  1937  020E  2A46               	goto	l1488
  1938  020F                     u460:
  1939  020F                     l1470:
  1940  020F  01CE               	clrf	___awdiv@counter
  1941  0210  0ACE               	incf	___awdiv@counter,f
  1942  0211  2A1D               	goto	l1476
  1943  0212                     l1472:
  1944  0212  3001               	movlw	1
  1945  0213                     u475:
  1946  0213  1003               	clrc
  1947  0214  0DF3               	rlf	___awdiv@divisor,f
  1948  0215  0DF4               	rlf	___awdiv@divisor+1,f
  1949  0216  3EFF               	addlw	-1
  1950  0217  1D03               	skipz
  1951  0218  2A13               	goto	u475
  1952  0219                     l1474:
  1953  0219  3001               	movlw	1
  1954  021A  00F7               	movwf	??___awdiv
  1955  021B  0877               	movf	??___awdiv,w
  1956  021C  07CE               	addwf	___awdiv@counter,f
  1957  021D                     l1476:
  1958  021D  1FF4               	btfss	___awdiv@divisor+1,7
  1959  021E  2A20               	goto	u481
  1960  021F  2A21               	goto	u480
  1961  0220                     u481:
  1962  0220  2A12               	goto	l1472
  1963  0221                     u480:
  1964  0221                     l1478:
  1965  0221  3001               	movlw	1
  1966  0222                     u495:
  1967  0222  1003               	clrc
  1968  0223  0DD0               	rlf	___awdiv@quotient,f
  1969  0224  0DD1               	rlf	___awdiv@quotient+1,f
  1970  0225  3EFF               	addlw	-1
  1971  0226  1D03               	skipz
  1972  0227  2A22               	goto	u495
  1973  0228  0874               	movf	___awdiv@divisor+1,w
  1974  0229  0276               	subwf	___awdiv@dividend+1,w
  1975  022A  1D03               	skipz
  1976  022B  2A2E               	goto	u505
  1977  022C  0873               	movf	___awdiv@divisor,w
  1978  022D  0275               	subwf	___awdiv@dividend,w
  1979  022E                     u505:
  1980  022E  1C03               	skipc
  1981  022F  2A31               	goto	u501
  1982  0230  2A32               	goto	u500
  1983  0231                     u501:
  1984  0231  2A39               	goto	l1484
  1985  0232                     u500:
  1986  0232                     l1480:
  1987  0232  0873               	movf	___awdiv@divisor,w
  1988  0233  02F5               	subwf	___awdiv@dividend,f
  1989  0234  0874               	movf	___awdiv@divisor+1,w
  1990  0235  1C03               	skipc
  1991  0236  03F6               	decf	___awdiv@dividend+1,f
  1992  0237  02F6               	subwf	___awdiv@dividend+1,f
  1993  0238                     l1482:
  1994  0238  1450               	bsf	___awdiv@quotient,0
  1995  0239                     l1484:
  1996  0239  3001               	movlw	1
  1997  023A                     u515:
  1998  023A  1003               	clrc
  1999  023B  0CF4               	rrf	___awdiv@divisor+1,f
  2000  023C  0CF3               	rrf	___awdiv@divisor,f
  2001  023D  3EFF               	addlw	-1
  2002  023E  1D03               	skipz
  2003  023F  2A3A               	goto	u515
  2004  0240                     l1486:
  2005  0240  3001               	movlw	1
  2006  0241  02CE               	subwf	___awdiv@counter,f
  2007  0242  1D03               	btfss	3,2
  2008  0243  2A45               	goto	u521
  2009  0244  2A46               	goto	u520
  2010  0245                     u521:
  2011  0245  2A21               	goto	l1478
  2012  0246                     u520:
  2013  0246                     l1488:
  2014  0246  084F               	movf	___awdiv@sign,w
  2015  0247  1903               	btfsc	3,2
  2016  0248  2A4A               	goto	u531
  2017  0249  2A4B               	goto	u530
  2018  024A                     u531:
  2019  024A  2A50               	goto	l1492
  2020  024B                     u530:
  2021  024B                     l1490:
  2022  024B  09D0               	comf	___awdiv@quotient,f
  2023  024C  09D1               	comf	___awdiv@quotient+1,f
  2024  024D  0AD0               	incf	___awdiv@quotient,f
  2025  024E  1903               	skipnz
  2026  024F  0AD1               	incf	___awdiv@quotient+1,f
  2027  0250                     l1492:
  2028  0250  0851               	movf	___awdiv@quotient+1,w
  2029  0251  00F4               	movwf	?___awdiv+1
  2030  0252  0850               	movf	___awdiv@quotient,w
  2031  0253  00F3               	movwf	?___awdiv
  2032  0254                     l529:
  2033  0254  0008               	return
  2034  0255                     __end_of___awdiv:
  2035                           
  2036                           	psect	text8
  2037  002E                     __ptext8:	
  2038 ;; *************** function _chselect *****************
  2039 ;; Defined at:
  2040 ;;		line 138 in file "./my_lib.h"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  cant            1    wreg     unsigned char 
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;  cant            1    6[COMMON] unsigned char 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      void 
  2047 ;; Registers used:
  2048 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2054 ;;      Params:         0       0       0       0       0
  2055 ;;      Locals:         1       0       0       0       0
  2056 ;;      Temps:          3       0       0       0       0
  2057 ;;      Totals:         4       0       0       0       0
  2058 ;;Total ram usage:        4 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; Hardware stack levels required when called: 1
  2061 ;; This function calls:
  2062 ;;		Nothing
  2063 ;; This function is called by:
  2064 ;;		_main
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           
  2069                           ;psect for function _chselect
  2070  002E                     _chselect:
  2071                           
  2072                           ;incstack = 0
  2073                           ; Regs used in _chselect: [wreg-fsr0h+status,2+status,0]
  2074                           ;chselect@cant stored from wreg
  2075  002E  00F6               	movwf	chselect@cant
  2076  002F                     l1496:
  2077                           
  2078                           ;./my_lib.h: 139:     if(ADCON0bits.GO == 0){
  2079  002F  1283               	bcf	3,5	;RP0=0, select bank0
  2080  0030  1303               	bcf	3,6	;RP1=0, select bank0
  2081  0031  189F               	btfsc	31,1	;volatile
  2082  0032  2834               	goto	u541
  2083  0033  2835               	goto	u540
  2084  0034                     u541:
  2085  0034  2925               	goto	l1584
  2086  0035                     u540:
  2087  0035  28EE               	goto	l1582
  2088  0036                     l1500:
  2089                           
  2090                           ;./my_lib.h: 143:             if (cant == 1){
  2091  0036  0376               	decf	chselect@cant,w
  2092  0037  1D03               	btfss	3,2
  2093  0038  283A               	goto	u551
  2094  0039  283B               	goto	u550
  2095  003A                     u551:
  2096  003A  283E               	goto	l1504
  2097  003B                     u550:
  2098  003B                     l1502:
  2099                           
  2100                           ;./my_lib.h: 144:                 ADCON0bits.CHS = 0;
  2101  003B  30C3               	movlw	-61
  2102  003C  059F               	andwf	31,f	;volatile
  2103                           
  2104                           ;./my_lib.h: 145:             }
  2105  003D  2925               	goto	l1584
  2106  003E                     l1504:
  2107                           
  2108                           ;./my_lib.h: 147:                 ADCON0bits.CHS = 1;
  2109  003E  081F               	movf	31,w	;volatile
  2110  003F  39C3               	andlw	-61
  2111  0040  3804               	iorlw	4
  2112  0041  009F               	movwf	31	;volatile
  2113  0042  2925               	goto	l1584
  2114  0043                     l1506:
  2115                           
  2116                           ;./my_lib.h: 151:             if (cant == 2){
  2117  0043  3002               	movlw	2
  2118  0044  0676               	xorwf	chselect@cant,w
  2119  0045  1D03               	btfss	3,2
  2120  0046  2848               	goto	u561
  2121  0047  2849               	goto	u560
  2122  0048                     u561:
  2123  0048  284C               	goto	l1510
  2124  0049                     u560:
  2125  0049                     l1508:
  2126                           
  2127                           ;./my_lib.h: 152:                 ADCON0bits.CHS = 0;
  2128  0049  30C3               	movlw	-61
  2129  004A  059F               	andwf	31,f	;volatile
  2130                           
  2131                           ;./my_lib.h: 153:             }
  2132  004B  2925               	goto	l1584
  2133  004C                     l1510:
  2134                           
  2135                           ;./my_lib.h: 155:                 ADCON0bits.CHS = 2;
  2136  004C  081F               	movf	31,w	;volatile
  2137  004D  39C3               	andlw	-61
  2138  004E  3808               	iorlw	8
  2139  004F  009F               	movwf	31	;volatile
  2140  0050  2925               	goto	l1584
  2141  0051                     l1512:
  2142                           
  2143                           ;./my_lib.h: 159:             if (cant == 3){
  2144  0051  3003               	movlw	3
  2145  0052  0676               	xorwf	chselect@cant,w
  2146  0053  1D03               	btfss	3,2
  2147  0054  2856               	goto	u571
  2148  0055  2857               	goto	u570
  2149  0056                     u571:
  2150  0056  285A               	goto	l1516
  2151  0057                     u570:
  2152  0057                     l1514:
  2153                           
  2154                           ;./my_lib.h: 160:                 ADCON0bits.CHS = 0;
  2155  0057  30C3               	movlw	-61
  2156  0058  059F               	andwf	31,f	;volatile
  2157                           
  2158                           ;./my_lib.h: 161:             }
  2159  0059  2925               	goto	l1584
  2160  005A                     l1516:
  2161                           
  2162                           ;./my_lib.h: 163:                 ADCON0bits.CHS = 3;
  2163  005A  081F               	movf	31,w	;volatile
  2164  005B  39C3               	andlw	-61
  2165  005C  380C               	iorlw	12
  2166  005D  009F               	movwf	31	;volatile
  2167  005E  2925               	goto	l1584
  2168  005F                     l1518:
  2169                           
  2170                           ;./my_lib.h: 167:             if (cant == 4){
  2171  005F  3004               	movlw	4
  2172  0060  0676               	xorwf	chselect@cant,w
  2173  0061  1D03               	btfss	3,2
  2174  0062  2864               	goto	u581
  2175  0063  2865               	goto	u580
  2176  0064                     u581:
  2177  0064  2868               	goto	l1522
  2178  0065                     u580:
  2179  0065                     l1520:
  2180                           
  2181                           ;./my_lib.h: 168:                 ADCON0bits.CHS = 0;
  2182  0065  30C3               	movlw	-61
  2183  0066  059F               	andwf	31,f	;volatile
  2184                           
  2185                           ;./my_lib.h: 169:             }
  2186  0067  2925               	goto	l1584
  2187  0068                     l1522:
  2188                           
  2189                           ;./my_lib.h: 171:                 ADCON0bits.CHS = 4;
  2190  0068  081F               	movf	31,w	;volatile
  2191  0069  39C3               	andlw	-61
  2192  006A  3810               	iorlw	16
  2193  006B  009F               	movwf	31	;volatile
  2194  006C  2925               	goto	l1584
  2195  006D                     l1524:
  2196                           
  2197                           ;./my_lib.h: 175:             if (cant == 5){
  2198  006D  3005               	movlw	5
  2199  006E  0676               	xorwf	chselect@cant,w
  2200  006F  1D03               	btfss	3,2
  2201  0070  2872               	goto	u591
  2202  0071  2873               	goto	u590
  2203  0072                     u591:
  2204  0072  2876               	goto	l1528
  2205  0073                     u590:
  2206  0073                     l1526:
  2207                           
  2208                           ;./my_lib.h: 176:                 ADCON0bits.CHS = 0;
  2209  0073  30C3               	movlw	-61
  2210  0074  059F               	andwf	31,f	;volatile
  2211                           
  2212                           ;./my_lib.h: 177:             }
  2213  0075  2925               	goto	l1584
  2214  0076                     l1528:
  2215                           
  2216                           ;./my_lib.h: 179:                 ADCON0bits.CHS = 5;
  2217  0076  081F               	movf	31,w	;volatile
  2218  0077  39C3               	andlw	-61
  2219  0078  3814               	iorlw	20
  2220  0079  009F               	movwf	31	;volatile
  2221  007A  2925               	goto	l1584
  2222  007B                     l1530:
  2223                           
  2224                           ;./my_lib.h: 183:             if (cant == 6){
  2225  007B  3006               	movlw	6
  2226  007C  0676               	xorwf	chselect@cant,w
  2227  007D  1D03               	btfss	3,2
  2228  007E  2880               	goto	u601
  2229  007F  2881               	goto	u600
  2230  0080                     u601:
  2231  0080  2884               	goto	l1534
  2232  0081                     u600:
  2233  0081                     l1532:
  2234                           
  2235                           ;./my_lib.h: 184:                 ADCON0bits.CHS = 0;
  2236  0081  30C3               	movlw	-61
  2237  0082  059F               	andwf	31,f	;volatile
  2238                           
  2239                           ;./my_lib.h: 185:             }
  2240  0083  2925               	goto	l1584
  2241  0084                     l1534:
  2242                           
  2243                           ;./my_lib.h: 187:                 ADCON0bits.CHS = 6;
  2244  0084  081F               	movf	31,w	;volatile
  2245  0085  39C3               	andlw	-61
  2246  0086  3818               	iorlw	24
  2247  0087  009F               	movwf	31	;volatile
  2248  0088  2925               	goto	l1584
  2249  0089                     l1536:
  2250                           
  2251                           ;./my_lib.h: 191:             if (cant == 7){
  2252  0089  3007               	movlw	7
  2253  008A  0676               	xorwf	chselect@cant,w
  2254  008B  1D03               	btfss	3,2
  2255  008C  288E               	goto	u611
  2256  008D  288F               	goto	u610
  2257  008E                     u611:
  2258  008E  2892               	goto	l1540
  2259  008F                     u610:
  2260  008F                     l1538:
  2261                           
  2262                           ;./my_lib.h: 192:                 ADCON0bits.CHS = 0;
  2263  008F  30C3               	movlw	-61
  2264  0090  059F               	andwf	31,f	;volatile
  2265                           
  2266                           ;./my_lib.h: 193:             }
  2267  0091  2925               	goto	l1584
  2268  0092                     l1540:
  2269                           
  2270                           ;./my_lib.h: 195:                 ADCON0bits.CHS = 7;
  2271  0092  081F               	movf	31,w	;volatile
  2272  0093  39C3               	andlw	-61
  2273  0094  381C               	iorlw	28
  2274  0095  009F               	movwf	31	;volatile
  2275  0096  2925               	goto	l1584
  2276  0097                     l1542:
  2277                           
  2278                           ;./my_lib.h: 199:             if (cant == 8){
  2279  0097  3008               	movlw	8
  2280  0098  0676               	xorwf	chselect@cant,w
  2281  0099  1D03               	btfss	3,2
  2282  009A  289C               	goto	u621
  2283  009B  289D               	goto	u620
  2284  009C                     u621:
  2285  009C  28A0               	goto	l1546
  2286  009D                     u620:
  2287  009D                     l1544:
  2288                           
  2289                           ;./my_lib.h: 200:                 ADCON0bits.CHS = 0;
  2290  009D  30C3               	movlw	-61
  2291  009E  059F               	andwf	31,f	;volatile
  2292                           
  2293                           ;./my_lib.h: 201:             }
  2294  009F  2925               	goto	l1584
  2295  00A0                     l1546:
  2296                           
  2297                           ;./my_lib.h: 203:                 ADCON0bits.CHS = 8;
  2298  00A0  081F               	movf	31,w	;volatile
  2299  00A1  39C3               	andlw	-61
  2300  00A2  3820               	iorlw	32
  2301  00A3  009F               	movwf	31	;volatile
  2302  00A4  2925               	goto	l1584
  2303  00A5                     l1548:
  2304                           
  2305                           ;./my_lib.h: 207:             if (cant == 9){
  2306  00A5  3009               	movlw	9
  2307  00A6  0676               	xorwf	chselect@cant,w
  2308  00A7  1D03               	btfss	3,2
  2309  00A8  28AA               	goto	u631
  2310  00A9  28AB               	goto	u630
  2311  00AA                     u631:
  2312  00AA  28AE               	goto	l1552
  2313  00AB                     u630:
  2314  00AB                     l1550:
  2315                           
  2316                           ;./my_lib.h: 208:                 ADCON0bits.CHS = 0;
  2317  00AB  30C3               	movlw	-61
  2318  00AC  059F               	andwf	31,f	;volatile
  2319                           
  2320                           ;./my_lib.h: 209:             }
  2321  00AD  2925               	goto	l1584
  2322  00AE                     l1552:
  2323                           
  2324                           ;./my_lib.h: 211:                 ADCON0bits.CHS = 9;
  2325  00AE  081F               	movf	31,w	;volatile
  2326  00AF  39C3               	andlw	-61
  2327  00B0  3824               	iorlw	36
  2328  00B1  009F               	movwf	31	;volatile
  2329  00B2  2925               	goto	l1584
  2330  00B3                     l1554:
  2331                           
  2332                           ;./my_lib.h: 215:             if (cant == 10){
  2333  00B3  300A               	movlw	10
  2334  00B4  0676               	xorwf	chselect@cant,w
  2335  00B5  1D03               	btfss	3,2
  2336  00B6  28B8               	goto	u641
  2337  00B7  28B9               	goto	u640
  2338  00B8                     u641:
  2339  00B8  28BC               	goto	l1558
  2340  00B9                     u640:
  2341  00B9                     l1556:
  2342                           
  2343                           ;./my_lib.h: 216:                 ADCON0bits.CHS = 0;
  2344  00B9  30C3               	movlw	-61
  2345  00BA  059F               	andwf	31,f	;volatile
  2346                           
  2347                           ;./my_lib.h: 217:             }
  2348  00BB  2925               	goto	l1584
  2349  00BC                     l1558:
  2350                           
  2351                           ;./my_lib.h: 219:                 ADCON0bits.CHS = 10;
  2352  00BC  081F               	movf	31,w	;volatile
  2353  00BD  39C3               	andlw	-61
  2354  00BE  3828               	iorlw	40
  2355  00BF  009F               	movwf	31	;volatile
  2356  00C0  2925               	goto	l1584
  2357  00C1                     l1560:
  2358                           
  2359                           ;./my_lib.h: 223:             if (cant == 11){
  2360  00C1  300B               	movlw	11
  2361  00C2  0676               	xorwf	chselect@cant,w
  2362  00C3  1D03               	btfss	3,2
  2363  00C4  28C6               	goto	u651
  2364  00C5  28C7               	goto	u650
  2365  00C6                     u651:
  2366  00C6  28CA               	goto	l1564
  2367  00C7                     u650:
  2368  00C7                     l1562:
  2369                           
  2370                           ;./my_lib.h: 224:                 ADCON0bits.CHS = 0;
  2371  00C7  30C3               	movlw	-61
  2372  00C8  059F               	andwf	31,f	;volatile
  2373                           
  2374                           ;./my_lib.h: 225:             }
  2375  00C9  2925               	goto	l1584
  2376  00CA                     l1564:
  2377                           
  2378                           ;./my_lib.h: 227:                 ADCON0bits.CHS = 11;
  2379  00CA  081F               	movf	31,w	;volatile
  2380  00CB  39C3               	andlw	-61
  2381  00CC  382C               	iorlw	44
  2382  00CD  009F               	movwf	31	;volatile
  2383  00CE  2925               	goto	l1584
  2384  00CF                     l1566:
  2385                           
  2386                           ;./my_lib.h: 231:             if (cant == 12){
  2387  00CF  300C               	movlw	12
  2388  00D0  0676               	xorwf	chselect@cant,w
  2389  00D1  1D03               	btfss	3,2
  2390  00D2  28D4               	goto	u661
  2391  00D3  28D5               	goto	u660
  2392  00D4                     u661:
  2393  00D4  28D8               	goto	l1570
  2394  00D5                     u660:
  2395  00D5                     l1568:
  2396                           
  2397                           ;./my_lib.h: 232:                 ADCON0bits.CHS = 0;
  2398  00D5  30C3               	movlw	-61
  2399  00D6  059F               	andwf	31,f	;volatile
  2400                           
  2401                           ;./my_lib.h: 233:             }
  2402  00D7  2925               	goto	l1584
  2403  00D8                     l1570:
  2404                           
  2405                           ;./my_lib.h: 235:                 ADCON0bits.CHS = 12;
  2406  00D8  081F               	movf	31,w	;volatile
  2407  00D9  39C3               	andlw	-61
  2408  00DA  3830               	iorlw	48
  2409  00DB  009F               	movwf	31	;volatile
  2410  00DC  2925               	goto	l1584
  2411  00DD                     l1572:
  2412                           
  2413                           ;./my_lib.h: 239:             if (cant == 13){
  2414  00DD  300D               	movlw	13
  2415  00DE  0676               	xorwf	chselect@cant,w
  2416  00DF  1D03               	btfss	3,2
  2417  00E0  28E2               	goto	u671
  2418  00E1  28E3               	goto	u670
  2419  00E2                     u671:
  2420  00E2  28E6               	goto	l1576
  2421  00E3                     u670:
  2422  00E3                     l1574:
  2423                           
  2424                           ;./my_lib.h: 240:                 ADCON0bits.CHS = 0;
  2425  00E3  30C3               	movlw	-61
  2426  00E4  059F               	andwf	31,f	;volatile
  2427                           
  2428                           ;./my_lib.h: 241:             }
  2429  00E5  2925               	goto	l1584
  2430  00E6                     l1576:
  2431                           
  2432                           ;./my_lib.h: 243:                 ADCON0bits.CHS = 13;
  2433  00E6  081F               	movf	31,w	;volatile
  2434  00E7  39C3               	andlw	-61
  2435  00E8  3834               	iorlw	52
  2436  00E9  009F               	movwf	31	;volatile
  2437  00EA  2925               	goto	l1584
  2438  00EB                     l1578:
  2439                           
  2440                           ;./my_lib.h: 247:                 ADCON0bits.CHS = 0;
  2441  00EB  30C3               	movlw	-61
  2442  00EC  059F               	andwf	31,f	;volatile
  2443                           
  2444                           ;./my_lib.h: 249:             break;
  2445  00ED  2925               	goto	l1584
  2446  00EE                     l1582:
  2447  00EE  0C1F               	rrf	31,w	;volatile
  2448  00EF  00F3               	movwf	??_chselect
  2449  00F0  0C73               	rrf	??_chselect,w
  2450  00F1  390F               	andlw	15
  2451  00F2  00F4               	movwf	??_chselect+1
  2452  00F3  01F5               	clrf	??_chselect+2
  2453                           
  2454                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2455                           ; Switch size 1, requested type "simple"
  2456                           ; Number of cases is 1, Range of values is 0 to 0
  2457                           ; switch strategies available:
  2458                           ; Name         Instructions Cycles
  2459                           ; simple_byte            4     3 (average)
  2460                           ; direct_byte           11     8 (fixed)
  2461                           ; jumptable            260     6 (fixed)
  2462                           ;	Chosen strategy is simple_byte
  2463  00F4  0875               	movf	??_chselect+2,w
  2464  00F5  3A00               	xorlw	0	; case 0
  2465  00F6  1903               	skipnz
  2466  00F7  28F9               	goto	l2048
  2467  00F8  2925               	goto	l1584
  2468  00F9                     l2048:
  2469                           
  2470                           ; Switch size 1, requested type "simple"
  2471                           ; Number of cases is 14, Range of values is 0 to 13
  2472                           ; switch strategies available:
  2473                           ; Name         Instructions Cycles
  2474                           ; simple_byte           43    22 (average)
  2475                           ; direct_byte           50     8 (fixed)
  2476                           ; jumptable            260     6 (fixed)
  2477                           ;	Chosen strategy is simple_byte
  2478  00F9  0874               	movf	??_chselect+1,w
  2479  00FA  3A00               	xorlw	0	; case 0
  2480  00FB  1903               	skipnz
  2481  00FC  2836               	goto	l1500
  2482  00FD  3A01               	xorlw	1	; case 1
  2483  00FE  1903               	skipnz
  2484  00FF  2843               	goto	l1506
  2485  0100  3A03               	xorlw	3	; case 2
  2486  0101  1903               	skipnz
  2487  0102  2851               	goto	l1512
  2488  0103  3A01               	xorlw	1	; case 3
  2489  0104  1903               	skipnz
  2490  0105  285F               	goto	l1518
  2491  0106  3A07               	xorlw	7	; case 4
  2492  0107  1903               	skipnz
  2493  0108  286D               	goto	l1524
  2494  0109  3A01               	xorlw	1	; case 5
  2495  010A  1903               	skipnz
  2496  010B  287B               	goto	l1530
  2497  010C  3A03               	xorlw	3	; case 6
  2498  010D  1903               	skipnz
  2499  010E  2889               	goto	l1536
  2500  010F  3A01               	xorlw	1	; case 7
  2501  0110  1903               	skipnz
  2502  0111  2897               	goto	l1542
  2503  0112  3A0F               	xorlw	15	; case 8
  2504  0113  1903               	skipnz
  2505  0114  28A5               	goto	l1548
  2506  0115  3A01               	xorlw	1	; case 9
  2507  0116  1903               	skipnz
  2508  0117  28B3               	goto	l1554
  2509  0118  3A03               	xorlw	3	; case 10
  2510  0119  1903               	skipnz
  2511  011A  28C1               	goto	l1560
  2512  011B  3A01               	xorlw	1	; case 11
  2513  011C  1903               	skipnz
  2514  011D  28CF               	goto	l1566
  2515  011E  3A07               	xorlw	7	; case 12
  2516  011F  1903               	skipnz
  2517  0120  28DD               	goto	l1572
  2518  0121  3A01               	xorlw	1	; case 13
  2519  0122  1903               	skipnz
  2520  0123  28EB               	goto	l1578
  2521  0124  2925               	goto	l1584
  2522  0125                     l1584:
  2523                           
  2524                           ;./my_lib.h: 253:     _delay((unsigned long)((150)*(4000000/4000000.0)));
  2525  0125  3031               	movlw	49
  2526  0126  00F3               	movwf	??_chselect
  2527  0127                     u987:
  2528  0127  0BF3               	decfsz	??_chselect,f
  2529  0128  2927               	goto	u987
  2530  0129  292A               	nop2
  2531  012A                     l1586:
  2532                           
  2533                           ;./my_lib.h: 254:     ADCON0bits.GO = 1;
  2534  012A  1283               	bcf	3,5	;RP0=0, select bank0
  2535  012B  1303               	bcf	3,6	;RP1=0, select bank0
  2536  012C  149F               	bsf	31,1	;volatile
  2537  012D                     l161:
  2538  012D  0008               	return
  2539  012E                     __end_of_chselect:
  2540                           
  2541                           	psect	text9
  2542  044C                     __ptext9:	
  2543 ;; *************** function _Lcd_Write_String *****************
  2544 ;; Defined at:
  2545 ;;		line 77 in file "LCD.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  a               1    wreg     PTR unsigned char 
  2548 ;;		 -> STR_2(4), STR_1(17), 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2551 ;;		 -> STR_2(4), STR_1(17), 
  2552 ;;  i               2    0[BANK0 ] int 
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1    wreg      void 
  2555 ;; Registers used:
  2556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2562 ;;      Params:         0       0       0       0       0
  2563 ;;      Locals:         0       3       0       0       0
  2564 ;;      Temps:          0       0       0       0       0
  2565 ;;      Totals:         0       3       0       0       0
  2566 ;;Total ram usage:        3 bytes
  2567 ;; Hardware stack levels used: 1
  2568 ;; Hardware stack levels required when called: 3
  2569 ;; This function calls:
  2570 ;;		_Lcd_Write_Char
  2571 ;; This function is called by:
  2572 ;;		_main
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           
  2577                           ;psect for function _Lcd_Write_String
  2578  044C                     _Lcd_Write_String:
  2579                           
  2580                           ;incstack = 0
  2581                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2582                           ;Lcd_Write_String@a stored from wreg
  2583  044C  1283               	bcf	3,5	;RP0=0, select bank0
  2584  044D  1303               	bcf	3,6	;RP1=0, select bank0
  2585  044E  00D0               	movwf	Lcd_Write_String@a
  2586  044F                     l1922:
  2587                           
  2588                           ;LCD.c: 78:     int i;;LCD.c: 79:     for (i = 0; a[i] != '\0'; i++)
  2589  044F  01CE               	clrf	Lcd_Write_String@i
  2590  0450  01CF               	clrf	Lcd_Write_String@i+1
  2591  0451  2C67               	goto	l1928
  2592  0452                     l1924:
  2593                           
  2594                           ;LCD.c: 80:         Lcd_Write_Char(a[i]);
  2595  0452  084E               	movf	Lcd_Write_String@i,w
  2596  0453  0750               	addwf	Lcd_Write_String@a,w
  2597  0454  0084               	movwf	4
  2598  0455  120A  118A  24D6  120A  118A  	fcall	stringdir
  2599  045A  120A  118A  24B9  120A  118A  	fcall	_Lcd_Write_Char
  2600  045F                     l1926:
  2601  045F  3001               	movlw	1
  2602  0460  1283               	bcf	3,5	;RP0=0, select bank0
  2603  0461  1303               	bcf	3,6	;RP1=0, select bank0
  2604  0462  07CE               	addwf	Lcd_Write_String@i,f
  2605  0463  1803               	skipnc
  2606  0464  0ACF               	incf	Lcd_Write_String@i+1,f
  2607  0465  3000               	movlw	0
  2608  0466  07CF               	addwf	Lcd_Write_String@i+1,f
  2609  0467                     l1928:
  2610  0467  084E               	movf	Lcd_Write_String@i,w
  2611  0468  0750               	addwf	Lcd_Write_String@a,w
  2612  0469  0084               	movwf	4
  2613  046A  120A  118A  24D6  120A  118A  	fcall	stringdir
  2614  046F  3A00               	xorlw	0
  2615  0470  1D03               	skipz
  2616  0471  2C73               	goto	u871
  2617  0472  2C74               	goto	u870
  2618  0473                     u871:
  2619  0473  2C52               	goto	l1924
  2620  0474                     u870:
  2621  0474                     l284:
  2622  0474  0008               	return
  2623  0475                     __end_of_Lcd_Write_String:
  2624                           
  2625                           	psect	text10
  2626  04B9                     __ptext10:	
  2627 ;; *************** function _Lcd_Write_Char *****************
  2628 ;; Defined at:
  2629 ;;		line 65 in file "LCD.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;  a               1    wreg     unsigned char 
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;  a               1    5[COMMON] unsigned char 
  2634 ;;  y               1    7[COMMON] unsigned char 
  2635 ;;  temp            1    6[COMMON] unsigned char 
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  1    wreg      void 
  2638 ;; Registers used:
  2639 ;;		wreg, status,2, status,0, pclath, cstack
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2645 ;;      Params:         0       0       0       0       0
  2646 ;;      Locals:         3       0       0       0       0
  2647 ;;      Temps:          1       0       0       0       0
  2648 ;;      Totals:         4       0       0       0       0
  2649 ;;Total ram usage:        4 bytes
  2650 ;; Hardware stack levels used: 1
  2651 ;; Hardware stack levels required when called: 2
  2652 ;; This function calls:
  2653 ;;		_Lcd_Port
  2654 ;; This function is called by:
  2655 ;;		_main
  2656 ;;		_Lcd_Write_String
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           
  2661                           ;psect for function _Lcd_Write_Char
  2662  04B9                     _Lcd_Write_Char:
  2663                           
  2664                           ;incstack = 0
  2665                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2666                           ;Lcd_Write_Char@a stored from wreg
  2667  04B9  00F5               	movwf	Lcd_Write_Char@a
  2668  04BA                     l1868:
  2669                           
  2670                           ;LCD.c: 66:     char temp, y;;LCD.c: 67:     temp = a;
  2671  04BA  0875               	movf	Lcd_Write_Char@a,w
  2672  04BB  00F4               	movwf	??_Lcd_Write_Char
  2673  04BC  0874               	movf	??_Lcd_Write_Char,w
  2674  04BD  00F6               	movwf	Lcd_Write_Char@temp
  2675                           
  2676                           ;LCD.c: 68:     y = temp;
  2677  04BE  0876               	movf	Lcd_Write_Char@temp,w
  2678  04BF  00F4               	movwf	??_Lcd_Write_Char
  2679  04C0  0874               	movf	??_Lcd_Write_Char,w
  2680  04C1  00F7               	movwf	Lcd_Write_Char@y
  2681  04C2                     l1870:
  2682                           
  2683                           ;LCD.c: 69:     RE0 = 1;
  2684  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  2685  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  2686  04C4  1409               	bsf	9,0	;volatile
  2687  04C5                     l1872:
  2688                           
  2689                           ;LCD.c: 70:     Lcd_Port(y);
  2690  04C5  0877               	movf	Lcd_Write_Char@y,w
  2691  04C6  120A  118A  2540  120A  118A  	fcall	_Lcd_Port
  2692  04CB                     l1874:
  2693                           
  2694                           ;LCD.c: 71:     RE1 = 1;
  2695  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  2696  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  2697  04CD  1489               	bsf	9,1	;volatile
  2698  04CE                     l1876:
  2699                           
  2700                           ;LCD.c: 72:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2701  04CE  300D               	movlw	13
  2702  04CF  00F4               	movwf	??_Lcd_Write_Char
  2703  04D0                     u997:
  2704  04D0  0BF4               	decfsz	??_Lcd_Write_Char,f
  2705  04D1  2CD0               	goto	u997
  2706  04D2                     l1878:
  2707                           
  2708                           ;LCD.c: 73:     RE1 = 0;
  2709  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  2710  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  2711  04D4  1089               	bcf	9,1	;volatile
  2712  04D5                     l278:
  2713  04D5  0008               	return
  2714  04D6                     __end_of_Lcd_Write_Char:
  2715                           
  2716                           	psect	text11
  2717  02BC                     __ptext11:	
  2718 ;; *************** function _Lcd_Set_Cursor *****************
  2719 ;; Defined at:
  2720 ;;		line 30 in file "LCD.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;  a               1    wreg     unsigned char 
  2723 ;;  b               1    7[COMMON] unsigned char 
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;  a               1    2[BANK0 ] unsigned char 
  2726 ;;  temp            1    5[BANK0 ] unsigned char 
  2727 ;;  y               1    4[BANK0 ] unsigned char 
  2728 ;;  z               1    3[BANK0 ] unsigned char 
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		wreg, status,2, status,0, pclath, cstack
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2738 ;;      Params:         1       0       0       0       0
  2739 ;;      Locals:         0       4       0       0       0
  2740 ;;      Temps:          0       2       0       0       0
  2741 ;;      Totals:         1       6       0       0       0
  2742 ;;Total ram usage:        7 bytes
  2743 ;; Hardware stack levels used: 1
  2744 ;; Hardware stack levels required when called: 3
  2745 ;; This function calls:
  2746 ;;		_Lcd_Cmd
  2747 ;; This function is called by:
  2748 ;;		_main
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           
  2753                           ;psect for function _Lcd_Set_Cursor
  2754  02BC                     _Lcd_Set_Cursor:
  2755                           
  2756                           ;incstack = 0
  2757                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2758                           ;Lcd_Set_Cursor@a stored from wreg
  2759  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  2760  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  2761  02BE  00D0               	movwf	Lcd_Set_Cursor@a
  2762  02BF                     l1902:
  2763                           
  2764                           ;LCD.c: 31:     char temp, z, y;;LCD.c: 32:     if (a == 1) {
  2765  02BF  0350               	decf	Lcd_Set_Cursor@a,w
  2766  02C0  1D03               	btfss	3,2
  2767  02C1  2AC3               	goto	u831
  2768  02C2  2AC4               	goto	u830
  2769  02C3                     u831:
  2770  02C3  2AE9               	goto	l1912
  2771  02C4                     u830:
  2772  02C4                     l1904:
  2773                           
  2774                           ;LCD.c: 33:         temp = 0x80 + b - 1;
  2775  02C4  0877               	movf	Lcd_Set_Cursor@b,w
  2776  02C5  3E7F               	addlw	127
  2777  02C6  00CE               	movwf	??_Lcd_Set_Cursor
  2778  02C7  084E               	movf	??_Lcd_Set_Cursor,w
  2779  02C8  00D3               	movwf	Lcd_Set_Cursor@temp
  2780                           
  2781                           ;LCD.c: 34:         z = temp >> 4;
  2782  02C9  0853               	movf	Lcd_Set_Cursor@temp,w
  2783  02CA  00CE               	movwf	??_Lcd_Set_Cursor
  2784  02CB  3004               	movlw	4
  2785  02CC                     u845:
  2786  02CC  1003               	clrc
  2787  02CD  0CCE               	rrf	??_Lcd_Set_Cursor,f
  2788  02CE  3EFF               	addlw	-1
  2789  02CF  1D03               	skipz
  2790  02D0  2ACC               	goto	u845
  2791  02D1  084E               	movf	??_Lcd_Set_Cursor,w
  2792  02D2  00CF               	movwf	??_Lcd_Set_Cursor+1
  2793  02D3  084F               	movf	??_Lcd_Set_Cursor+1,w
  2794  02D4  00D1               	movwf	Lcd_Set_Cursor@z
  2795  02D5                     l1906:
  2796                           
  2797                           ;LCD.c: 35:         y = temp & 0x0F;
  2798  02D5  0853               	movf	Lcd_Set_Cursor@temp,w
  2799  02D6  390F               	andlw	15
  2800  02D7  00CE               	movwf	??_Lcd_Set_Cursor
  2801  02D8  084E               	movf	??_Lcd_Set_Cursor,w
  2802  02D9  00D2               	movwf	Lcd_Set_Cursor@y
  2803  02DA                     l1908:
  2804                           
  2805                           ;LCD.c: 36:         Lcd_Cmd(z);
  2806  02DA  0851               	movf	Lcd_Set_Cursor@z,w
  2807  02DB  120A  118A  24F1  120A  118A  	fcall	_Lcd_Cmd
  2808  02E0                     l1910:
  2809                           
  2810                           ;LCD.c: 37:         Lcd_Cmd(y);
  2811  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  2812  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  2813  02E2  0852               	movf	Lcd_Set_Cursor@y,w
  2814  02E3  120A  118A  24F1  120A  118A  	fcall	_Lcd_Cmd
  2815                           
  2816                           ;LCD.c: 38:     } else if (a == 2) {
  2817  02E8  2B13               	goto	l272
  2818  02E9                     l1912:
  2819  02E9  3002               	movlw	2
  2820  02EA  0650               	xorwf	Lcd_Set_Cursor@a,w
  2821  02EB  1D03               	btfss	3,2
  2822  02EC  2AEE               	goto	u851
  2823  02ED  2AEF               	goto	u850
  2824  02EE                     u851:
  2825  02EE  2B13               	goto	l272
  2826  02EF                     u850:
  2827  02EF                     l1914:
  2828                           
  2829                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  2830  02EF  0877               	movf	Lcd_Set_Cursor@b,w
  2831  02F0  3EBF               	addlw	191
  2832  02F1  00CE               	movwf	??_Lcd_Set_Cursor
  2833  02F2  084E               	movf	??_Lcd_Set_Cursor,w
  2834  02F3  00D3               	movwf	Lcd_Set_Cursor@temp
  2835                           
  2836                           ;LCD.c: 40:         z = temp >> 4;
  2837  02F4  0853               	movf	Lcd_Set_Cursor@temp,w
  2838  02F5  00CE               	movwf	??_Lcd_Set_Cursor
  2839  02F6  3004               	movlw	4
  2840  02F7                     u865:
  2841  02F7  1003               	clrc
  2842  02F8  0CCE               	rrf	??_Lcd_Set_Cursor,f
  2843  02F9  3EFF               	addlw	-1
  2844  02FA  1D03               	skipz
  2845  02FB  2AF7               	goto	u865
  2846  02FC  084E               	movf	??_Lcd_Set_Cursor,w
  2847  02FD  00CF               	movwf	??_Lcd_Set_Cursor+1
  2848  02FE  084F               	movf	??_Lcd_Set_Cursor+1,w
  2849  02FF  00D1               	movwf	Lcd_Set_Cursor@z
  2850  0300                     l1916:
  2851                           
  2852                           ;LCD.c: 41:         y = temp & 0xF0;
  2853  0300  0853               	movf	Lcd_Set_Cursor@temp,w
  2854  0301  39F0               	andlw	240
  2855  0302  00CE               	movwf	??_Lcd_Set_Cursor
  2856  0303  084E               	movf	??_Lcd_Set_Cursor,w
  2857  0304  00D2               	movwf	Lcd_Set_Cursor@y
  2858  0305                     l1918:
  2859                           
  2860                           ;LCD.c: 42:         Lcd_Cmd(z);
  2861  0305  0851               	movf	Lcd_Set_Cursor@z,w
  2862  0306  120A  118A  24F1  120A  118A  	fcall	_Lcd_Cmd
  2863  030B                     l1920:
  2864                           
  2865                           ;LCD.c: 43:         Lcd_Cmd(y);
  2866  030B  1283               	bcf	3,5	;RP0=0, select bank0
  2867  030C  1303               	bcf	3,6	;RP1=0, select bank0
  2868  030D  0852               	movf	Lcd_Set_Cursor@y,w
  2869  030E  120A  118A  24F1  120A  118A  	fcall	_Lcd_Cmd
  2870  0313                     l272:
  2871  0313  0008               	return
  2872  0314                     __end_of_Lcd_Set_Cursor:
  2873                           
  2874                           	psect	text12
  2875  0314                     __ptext12:	
  2876 ;; *************** function _Lcd_Init *****************
  2877 ;; Defined at:
  2878 ;;		line 47 in file "LCD.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;		None
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;		None
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  1    wreg      void 
  2885 ;; Registers used:
  2886 ;;		wreg, status,2, status,0, pclath, cstack
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2892 ;;      Params:         0       0       0       0       0
  2893 ;;      Locals:         0       0       0       0       0
  2894 ;;      Temps:          0       2       0       0       0
  2895 ;;      Totals:         0       2       0       0       0
  2896 ;;Total ram usage:        2 bytes
  2897 ;; Hardware stack levels used: 1
  2898 ;; Hardware stack levels required when called: 3
  2899 ;; This function calls:
  2900 ;;		_Lcd_Cmd
  2901 ;;		_Lcd_Port
  2902 ;; This function is called by:
  2903 ;;		_main
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           
  2908                           ;psect for function _Lcd_Init
  2909  0314                     _Lcd_Init:
  2910  0314                     l1890:	
  2911                           ;incstack = 0
  2912                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2913                           
  2914                           
  2915                           ;LCD.c: 48:     Lcd_Port(0x00);
  2916  0314  3000               	movlw	0
  2917  0315  120A  118A  2540  120A  118A  	fcall	_Lcd_Port
  2918  031A                     l1892:
  2919                           
  2920                           ;LCD.c: 49:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2921  031A  301A               	movlw	26
  2922  031B  1283               	bcf	3,5	;RP0=0, select bank0
  2923  031C  1303               	bcf	3,6	;RP1=0, select bank0
  2924  031D  00CF               	movwf	??_Lcd_Init+1
  2925  031E  30F7               	movlw	247
  2926  031F  00CE               	movwf	??_Lcd_Init
  2927  0320                     u1007:
  2928  0320  0BCE               	decfsz	??_Lcd_Init,f
  2929  0321  2B20               	goto	u1007
  2930  0322  0BCF               	decfsz	??_Lcd_Init+1,f
  2931  0323  2B20               	goto	u1007
  2932  0324  2B25               	nop2
  2933  0325                     l1894:
  2934                           
  2935                           ;LCD.c: 50:     Lcd_Cmd(0x30);
  2936  0325  3030               	movlw	48
  2937  0326  120A  118A  24F1  120A  118A  	fcall	_Lcd_Cmd
  2938                           
  2939                           ;LCD.c: 51:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2940  032B  3007               	movlw	7
  2941  032C  1283               	bcf	3,5	;RP0=0, select bank0
  2942  032D  1303               	bcf	3,6	;RP1=0, select bank0
  2943  032E  00CF               	movwf	??_Lcd_Init+1
  2944  032F  307C               	movlw	124
  2945  0330  00CE               	movwf	??_Lcd_Init
  2946  0331                     u1017:
  2947  0331  0BCE               	decfsz	??_Lcd_Init,f
  2948  0332  2B31               	goto	u1017
  2949  0333  0BCF               	decfsz	??_Lcd_Init+1,f
  2950  0334  2B31               	goto	u1017
  2951  0335  0000               	nop
  2952  0336                     l1896:
  2953                           
  2954                           ;LCD.c: 52:     Lcd_Cmd(0x30);
  2955  0336  3030               	movlw	48
  2956  0337  120A  118A  24F1  120A  118A  	fcall	_Lcd_Cmd
  2957  033C                     l1898:
  2958                           
  2959                           ;LCD.c: 53:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  2960  033C  3041               	movlw	65
  2961  033D  1283               	bcf	3,5	;RP0=0, select bank0
  2962  033E  1303               	bcf	3,6	;RP1=0, select bank0
  2963  033F  00CE               	movwf	??_Lcd_Init
  2964  0340                     u1027:
  2965  0340  0BCE               	decfsz	??_Lcd_Init,f
  2966  0341  2B40               	goto	u1027
  2967  0342  2B43               	nop2
  2968                           
  2969                           ;LCD.c: 54:     Lcd_Cmd(0x30);
  2970  0343  3030               	movlw	48
  2971  0344  120A  118A  24F1  120A  118A  	fcall	_Lcd_Cmd
  2972                           
  2973                           ;LCD.c: 56:     Lcd_Cmd(0x3C);
  2974  0349  303C               	movlw	60
  2975  034A  120A  118A  24F1  120A  118A  	fcall	_Lcd_Cmd
  2976                           
  2977                           ;LCD.c: 58:     Lcd_Cmd(0x08);
  2978  034F  3008               	movlw	8
  2979  0350  120A  118A  24F1  120A  118A  	fcall	_Lcd_Cmd
  2980                           
  2981                           ;LCD.c: 60:     Lcd_Cmd(0x01);
  2982  0355  3001               	movlw	1
  2983  0356  120A  118A  24F1  120A  118A  	fcall	_Lcd_Cmd
  2984                           
  2985                           ;LCD.c: 62:     Lcd_Cmd(0x06);
  2986  035B  3006               	movlw	6
  2987  035C  120A  118A  24F1  120A  118A  	fcall	_Lcd_Cmd
  2988  0361                     l275:
  2989  0361  0008               	return
  2990  0362                     __end_of_Lcd_Init:
  2991                           
  2992                           	psect	text13
  2993  0533                     __ptext13:	
  2994 ;; *************** function _Lcd_Clear *****************
  2995 ;; Defined at:
  2996 ;;		line 25 in file "LCD.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;		None
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;		None
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  1    wreg      void 
  3003 ;; Registers used:
  3004 ;;		wreg, status,2, status,0, pclath, cstack
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3010 ;;      Params:         0       0       0       0       0
  3011 ;;      Locals:         0       0       0       0       0
  3012 ;;      Temps:          0       0       0       0       0
  3013 ;;      Totals:         0       0       0       0       0
  3014 ;;Total ram usage:        0 bytes
  3015 ;; Hardware stack levels used: 1
  3016 ;; Hardware stack levels required when called: 3
  3017 ;; This function calls:
  3018 ;;		_Lcd_Cmd
  3019 ;; This function is called by:
  3020 ;;		_main
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           
  3025                           ;psect for function _Lcd_Clear
  3026  0533                     _Lcd_Clear:
  3027  0533                     l1900:	
  3028                           ;incstack = 0
  3029                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3030                           
  3031                           
  3032                           ;LCD.c: 26:     Lcd_Cmd(0);
  3033  0533  3000               	movlw	0
  3034  0534  120A  118A  24F1  120A  118A  	fcall	_Lcd_Cmd
  3035                           
  3036                           ;LCD.c: 27:     Lcd_Cmd(1);
  3037  0539  3001               	movlw	1
  3038  053A  120A  118A  24F1  120A  118A  	fcall	_Lcd_Cmd
  3039  053F                     l266:
  3040  053F  0008               	return
  3041  0540                     __end_of_Lcd_Clear:
  3042                           
  3043                           	psect	text14
  3044  04F1                     __ptext14:	
  3045 ;; *************** function _Lcd_Cmd *****************
  3046 ;; Defined at:
  3047 ;;		line 17 in file "LCD.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  a               1    wreg     unsigned char 
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;  a               1    6[COMMON] unsigned char 
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1    wreg      void 
  3054 ;; Registers used:
  3055 ;;		wreg, status,2, status,0, pclath, cstack
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3061 ;;      Params:         0       0       0       0       0
  3062 ;;      Locals:         1       0       0       0       0
  3063 ;;      Temps:          2       0       0       0       0
  3064 ;;      Totals:         3       0       0       0       0
  3065 ;;Total ram usage:        3 bytes
  3066 ;; Hardware stack levels used: 1
  3067 ;; Hardware stack levels required when called: 2
  3068 ;; This function calls:
  3069 ;;		_Lcd_Port
  3070 ;; This function is called by:
  3071 ;;		_Lcd_Clear
  3072 ;;		_Lcd_Set_Cursor
  3073 ;;		_Lcd_Init
  3074 ;;		_Lcd_Shift_Right
  3075 ;;		_Lcd_Shift_Left
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           
  3080                           ;psect for function _Lcd_Cmd
  3081  04F1                     _Lcd_Cmd:
  3082                           
  3083                           ;incstack = 0
  3084                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3085                           ;Lcd_Cmd@a stored from wreg
  3086  04F1  00F6               	movwf	Lcd_Cmd@a
  3087  04F2                     l1880:
  3088                           
  3089                           ;LCD.c: 18:     RE0 = 0;
  3090  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  3091  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  3092  04F4  1009               	bcf	9,0	;volatile
  3093  04F5                     l1882:
  3094                           
  3095                           ;LCD.c: 19:     Lcd_Port(a);
  3096  04F5  0876               	movf	Lcd_Cmd@a,w
  3097  04F6  120A  118A  2540  120A  118A  	fcall	_Lcd_Port
  3098  04FB                     l1884:
  3099                           
  3100                           ;LCD.c: 20:     RE1 = 1;
  3101  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  3102  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  3103  04FD  1489               	bsf	9,1	;volatile
  3104  04FE                     l1886:
  3105                           
  3106                           ;LCD.c: 21:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3107  04FE  3006               	movlw	6
  3108  04FF  00F5               	movwf	??_Lcd_Cmd+1
  3109  0500  3030               	movlw	48
  3110  0501  00F4               	movwf	??_Lcd_Cmd
  3111  0502                     u1037:
  3112  0502  0BF4               	decfsz	??_Lcd_Cmd,f
  3113  0503  2D02               	goto	u1037
  3114  0504  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3115  0505  2D02               	goto	u1037
  3116  0506  0000               	nop
  3117  0507                     l1888:
  3118                           
  3119                           ;LCD.c: 22:     RE1 = 0;
  3120  0507  1283               	bcf	3,5	;RP0=0, select bank0
  3121  0508  1303               	bcf	3,6	;RP1=0, select bank0
  3122  0509  1089               	bcf	9,1	;volatile
  3123  050A                     l263:
  3124  050A  0008               	return
  3125  050B                     __end_of_Lcd_Cmd:
  3126                           
  3127                           	psect	text15
  3128  0540                     __ptext15:	
  3129 ;; *************** function _Lcd_Port *****************
  3130 ;; Defined at:
  3131 ;;		line 12 in file "LCD.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;  a               1    wreg     unsigned char 
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;  a               1    3[COMMON] unsigned char 
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  1    wreg      void 
  3138 ;; Registers used:
  3139 ;;		wreg
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3145 ;;      Params:         0       0       0       0       0
  3146 ;;      Locals:         1       0       0       0       0
  3147 ;;      Temps:          0       0       0       0       0
  3148 ;;      Totals:         1       0       0       0       0
  3149 ;;Total ram usage:        1 bytes
  3150 ;; Hardware stack levels used: 1
  3151 ;; Hardware stack levels required when called: 1
  3152 ;; This function calls:
  3153 ;;		Nothing
  3154 ;; This function is called by:
  3155 ;;		_Lcd_Cmd
  3156 ;;		_Lcd_Init
  3157 ;;		_Lcd_Write_Char
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161                           
  3162                           ;psect for function _Lcd_Port
  3163  0540                     _Lcd_Port:
  3164                           
  3165                           ;incstack = 0
  3166                           ; Regs used in _Lcd_Port: [wreg]
  3167                           ;Lcd_Port@a stored from wreg
  3168  0540  00F3               	movwf	Lcd_Port@a
  3169  0541                     l1866:
  3170                           
  3171                           ;LCD.c: 13:     PORTD = a;
  3172  0541  0873               	movf	Lcd_Port@a,w
  3173  0542  1283               	bcf	3,5	;RP0=0, select bank0
  3174  0543  1303               	bcf	3,6	;RP1=0, select bank0
  3175  0544  0088               	movwf	8	;volatile
  3176  0545                     l260:
  3177  0545  0008               	return
  3178  0546                     __end_of_Lcd_Port:
  3179                           
  3180                           	psect	text16
  3181  03EF                     __ptext16:	
  3182 ;; *************** function _isr *****************
  3183 ;; Defined at:
  3184 ;;		line 76 in file "MainL2.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;		None
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      void 
  3191 ;; Registers used:
  3192 ;;		wreg, status,2, status,0
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3198 ;;      Params:         0       0       0       0       0
  3199 ;;      Locals:         0       0       0       0       0
  3200 ;;      Temps:          3       0       0       0       0
  3201 ;;      Totals:         3       0       0       0       0
  3202 ;;Total ram usage:        3 bytes
  3203 ;; Hardware stack levels used: 1
  3204 ;; This function calls:
  3205 ;;		Nothing
  3206 ;; This function is called by:
  3207 ;;		Interrupt level 1
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           
  3212                           ;psect for function _isr
  3213  03EF                     _isr:
  3214  03EF                     i1l1746:
  3215                           
  3216                           ;MainL2.c: 79:     decimal(var1);
  3217  03EF  1D0B               	btfss	11,2	;volatile
  3218  03F0  2BF2               	goto	u73_21
  3219  03F1  2BF3               	goto	u73_20
  3220  03F2                     u73_21:
  3221  03F2  2BF4               	goto	i1l219
  3222  03F3                     u73_20:
  3223  03F3                     i1l1748:
  3224                           
  3225                           ;MainL2.c: 81:     Lcd_Write_Char(decenas);
  3226  03F3  110B               	bcf	11,2	;volatile
  3227  03F4                     i1l219:	
  3228                           ;MainL2.c: 82:     Lcd_Write_Char(unidades);
  3229                           
  3230                           
  3231                           ;MainL2.c: 84:     while(varUART <= 47){
  3232  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  3233  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  3234  03F6  1C0C               	btfss	12,0	;volatile
  3235  03F7  2BF9               	goto	u74_21
  3236  03F8  2BFA               	goto	u74_20
  3237  03F9                     u74_21:
  3238  03F9  2BFB               	goto	i1l220
  3239  03FA                     u74_20:
  3240  03FA                     i1l1750:
  3241                           
  3242                           ;MainL2.c: 85:            varUART++;
  3243  03FA  100C               	bcf	12,0	;volatile
  3244  03FB                     i1l220:	
  3245                           ;MainL2.c: 86: 
  3246                           
  3247                           
  3248                           ;MainL2.c: 88:         TXREG = str[varUART];
  3249  03FB  1F0C               	btfss	12,6	;volatile
  3250  03FC  2BFE               	goto	u75_21
  3251  03FD  2BFF               	goto	u75_20
  3252  03FE                     u75_21:
  3253  03FE  2C12               	goto	i1l1760
  3254  03FF                     u75_20:
  3255  03FF                     i1l1752:
  3256                           
  3257                           ;MainL2.c: 89:        }
  3258  03FF  0C1F               	rrf	31,w	;volatile
  3259  0400  00F0               	movwf	??_isr
  3260  0401  0C70               	rrf	??_isr,w
  3261  0402  390F               	andlw	15
  3262  0403  3A00               	xorlw	0
  3263  0404  1D03               	skipz
  3264  0405  2C07               	goto	u76_21
  3265  0406  2C08               	goto	u76_20
  3266  0407                     u76_21:
  3267  0407  2C0D               	goto	i1l1756
  3268  0408                     u76_20:
  3269  0408                     i1l1754:
  3270                           
  3271                           ;MainL2.c: 90:         _delay((unsigned long)((15)*(4000000/4000.0)));
  3272  0408  081E               	movf	30,w	;volatile
  3273  0409  00F0               	movwf	??_isr
  3274  040A  0870               	movf	??_isr,w
  3275  040B  00DE               	movwf	_var0
  3276                           
  3277                           ;MainL2.c: 91:      }
  3278  040C  2C11               	goto	i1l1758
  3279  040D                     i1l1756:
  3280                           
  3281                           ;MainL2.c: 93:         TXREG = centenas;
  3282  040D  081E               	movf	30,w	;volatile
  3283  040E  00F0               	movwf	??_isr
  3284  040F  0870               	movf	??_isr,w
  3285  0410  00DD               	movwf	_var1
  3286  0411                     i1l1758:
  3287                           
  3288                           ;MainL2.c: 95:     _delay((unsigned long)((15)*(4000000/4000.0)));
  3289  0411  130C               	bcf	12,6	;volatile
  3290  0412                     i1l1760:
  3291                           
  3292                           ;MainL2.c: 101:         TXREG = unidades;
  3293  0412  1C0B               	btfss	11,0	;volatile
  3294  0413  2C15               	goto	u77_21
  3295  0414  2C16               	goto	u77_20
  3296  0415                     u77_21:
  3297  0415  2C17               	goto	i1l225
  3298  0416                     u77_20:
  3299  0416                     i1l1762:
  3300                           
  3301                           ;MainL2.c: 102:        }
  3302  0416  100B               	bcf	11,0	;volatile
  3303  0417                     i1l225:
  3304  0417  0872               	movf	??_isr+2,w
  3305  0418  008A               	movwf	10
  3306  0419  0E71               	swapf	??_isr+1,w
  3307  041A  0083               	movwf	3
  3308  041B  0EFE               	swapf	btemp,f
  3309  041C  0E7E               	swapf	btemp,w
  3310  041D  0009               	retfie
  3311  041E                     __end_of_isr:
  3312  007E                     btemp	set	126	;btemp
  3313  007E                     wtemp0	set	126
  3314                           
  3315                           	psect	intentry
  3316  0004                     __pintentry:	
  3317                           ;incstack = 0
  3318                           ; Regs used in _isr: [wreg+status,2+status,0]
  3319                           
  3320  0004                     interrupt_function:
  3321  007E                     saved_w	set	btemp
  3322  0004  00FE               	movwf	btemp
  3323  0005  0E03               	swapf	3,w
  3324  0006  00F1               	movwf	??_isr+1
  3325  0007  080A               	movf	10,w
  3326  0008  00F2               	movwf	??_isr+2
  3327  0009  120A  118A  2BEF   	ljmp	_isr
  3328                           
  3329                           	psect	config
  3330                           
  3331                           ;Config register CONFIG1 @ 0x2007
  3332                           ;	Oscillator Selection bits
  3333                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3334                           ;	Watchdog Timer Enable bit
  3335                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3336                           ;	Power-up Timer Enable bit
  3337                           ;	PWRTE = OFF, PWRT disabled
  3338                           ;	RE3/MCLR pin function select bit
  3339                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3340                           ;	Code Protection bit
  3341                           ;	CP = OFF, Program memory code protection is disabled
  3342                           ;	Data Code Protection bit
  3343                           ;	CPD = OFF, Data memory code protection is disabled
  3344                           ;	Brown Out Reset Selection bits
  3345                           ;	BOREN = OFF, BOR disabled
  3346                           ;	Internal External Switchover bit
  3347                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3348                           ;	Fail-Safe Clock Monitor Enabled bit
  3349                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3350                           ;	Low Voltage Programming Enable bit
  3351                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3352                           ;	In-Circuit Debugger Mode bit
  3353                           ;	DEBUG = 0x1, unprogrammed default
  3354  2007                     	org	8199
  3355  2007  20D4               	dw	8404
  3356                           
  3357                           ;Config register CONFIG2 @ 0x2008
  3358                           ;	Brown-out Reset Selection bit
  3359                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3360                           ;	Flash Program Memory Self Write Enable bits
  3361                           ;	WRT = OFF, Write protection off
  3362  2008                     	org	8200
  3363  2008  3FFF               	dw	16383

Data Sizes:
    Strings     21
    Constant    0
    Data        46
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     11      67
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[4]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_Char
    _setup->_initAN
    _setup->_initOsc
    _decimal->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_decimal
    _decimal->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2862
                                              9 BANK0      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                           _chselect
                            _decimal
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     284
                             _initAN
                         _initEUSART
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _initEUSART                                           2     1      1     120
                                              3 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _initAN                                               3     2      1     142
                                              3 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _decimal                                              5     5      0    1043
                                              4 BANK0      5     5      0
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     244
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _chselect                                             4     4      0     286
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     332
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     130
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     632
                                              7 COMMON     1     0      1
                                              0 BANK0      6     6      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   _chselect
   _decimal
     ___awdiv
     ___bmul
   _setup
     _initAN
     _initEUSART
     _initOsc

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      43       5       83.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4E      12        0.0%
ABS                  0      0      4E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jul 26 17:14:51 2021

                        pc 0002             ___bmul@product 0075               ___awdiv@sign 004F  
                       fsr 0004                        l110 0383                        l102 0367  
                      l111 0387                        l104 036B                        l112 03AD  
                      l105 036F                        l106 0373                        l115 0498  
                      l107 0377                        l108 037B                        l109 037F  
                      l161 012D                        l402 051F                        l234 01B4  
                      l243 03EE                        l235 01BA                        l260 0545  
                      l236 01CC                        l237 01DE                        l263 050A  
                      l272 0313                        l249 02BB                        l266 053F  
                      l186 04B8                        l275 0361                        l284 0474  
                      l278 04D5                        l529 0254                        _RE0 0048  
                      _RE1 0049                        u500 0232                        u420 0511  
                      u501 0231                        u421 0510                        u430 051E  
                      u431 051D                        u600 0081                        u520 0246  
                      u440 01F3                        u601 0080                        u521 0245  
                      u505 022E                        u441 01F2                        u610 008F  
                      u530 024B                        u450 01FE                        u611 008E  
                      u531 024A                        u515 023A                        u451 01FD  
                      u620 009D                        u540 0035                        u460 020F  
          decimal@variable 0055                        u621 009C                        u541 0034  
                      u461 020E                        u630 00AB                        u550 003B  
                      u631 00AA                        u551 003A                        u640 00B9  
                      u560 0049                        u480 0221                        u641 00B8  
                      u561 0048                        u481 0220                        u650 00C7  
                      u570 0057                        u651 00C6                        u571 0056  
                      u475 0213                        u660 00D5                        u580 0065  
                      u900 01B8                        u661 00D4                        u581 0064  
                      u901 01B7                        u830 02C4                        u670 00E3  
                      u590 0073                        u910 01CA                        u831 02C3  
                      u671 00E2                        u591 0072                        u495 0222  
                      u911 01C9                        u920 01DC                        u921 01DB  
                      u850 02EF                        u851 02EE                        u845 02CC  
                      u870 0474                        u871 0473                        u880 019C  
                      u865 02F7                        u937 01A8                        u881 019B  
                      u890 01B4                        u947 01C0                        u891 01B3  
                      u957 01D2                        u967 01E4                        u977 0485  
                      u987 0127                        u997 04D0                        _isr 03EF  
                      fsr0 0004                        _str 0020                        indf 0000  
                     l1400 048E                       l1402 0495                       l1410 04A8  
                     l1500 0036                       l1404 0496                       l1412 04AE  
                     l1510 004C                       l1502 003B                       l1406 0497  
                     l1414 04B3                       l2046 0393                       l2048 00F9  
                     l1520 0065                       l1512 0051                       l1504 003E  
                     l1440 050D                       l1408 049A                       l1530 007B  
                     l1522 0068                       l1514 0057                       l1506 0043  
                     l1442 0511                       l1540 0092                       l1532 0081  
                     l1524 006D                       l1516 005A                       l1508 0049  
                     l1460 01FA                       l1452 01EC                       l1444 0515  
                     l1380 038B                       l1550 00AB                       l1542 0097  
                     l1534 0084                       l1526 0073                       l1518 005F  
                     l1470 020F                       l1462 01FE                       l1454 01EF  
                     l1446 0517                       l1438 050C                       l1390 047B  
                     l1560 00C1                       l1552 00AE                       l1544 009D  
                     l1536 0089                       l1528 0076                       l1480 0232  
                     l1472 0212                       l1464 0203                       l1456 01F3  
                     l1448 051E                       l1392 047F                       l1376 0363  
                     l1640 03AE                       l1570 00D8                       l1562 00C7  
                     l1554 00B3                       l1546 00A0                       l1538 008F  
                     l1490 024B                       l1482 0238                       l1474 0219  
                     l1466 0207                       l1458 01F8                       l1394 0483  
                     l1386 0476                       l1650 03BA                       l1642 03B1  
                     l1900 0533                       l1572 00DD                       l1564 00CA  
                     l1556 00B9                       l1548 00A5                       l1492 0250  
                     l1484 0239                       l1476 021D                       l1468 0209  
                     l1396 0487                       l1388 047A                       l1660 03CA  
                     l1652 03C1                       l1644 03B5                       l1910 02E0  
                     l1902 02BF                       l1574 00E3                       l1566 00CF  
                     l1558 00BC                       l1582 00EE                       l1486 0240  
                     l1478 0221                       l1398 048A                       l1670 03DC  
                     l1662 03CB                       l1654 03C4                       l1646 03B8  
                     l1920 030B                       l1904 02C4                       l1912 02E9  
                     l1576 00E6                       l1568 00D5                       l1584 0125  
                     l1496 002F                       l1488 0246                       l1680 03E3  
                     l1672 03DF                       l1664 03CD                       l1656 03C5  
                     l1648 03B9                       l1914 02EF                       l1906 02D5  
                     l1922 044F                       l1586 012A                       l1578 00EB  
                     l1930 0258                       l1682 03E7                       l1674 03E0  
                     l1666 03CF                       l1658 03C7                       l1916 0300  
                     l1908 02DA                       l1924 0452                       l1940 02AC  
                     l1932 025C                       l1684 03E8                       l1676 03E1  
                     l1668 03D5                       l1918 0305                       l1870 04C2  
                     l1926 045F                       l1942 02B1                       l1934 0272  
                     l1686 03EB                       l1678 03E2                       l1950 0138  
                     l1880 04F2                       l1872 04C5                       l1928 0467  
                     l1944 02B6                       l1936 0282                       l1688 03EC  
                     l1960 0167                       l1952 014B                       l1866 0541  
                     l1882 04F5                       l1890 0314                       l1874 04CB  
                     l1938 0298                       l1970 018D                       l1962 016D  
                     l1954 0151                       l1946 012E                       l1884 04FB  
                     l1892 031A                       l1876 04CE                       l1868 04BA  
                     l1972 0194                       l1980 01AC                       l1964 0179  
                     l1956 0159                       l1948 0133                       l1886 04FE  
                     l1894 0325                       l1878 04D2                       l1990 01DC  
                     l1982 01B8                       l1974 0198                       l1966 0181  
                     l1958 0161                       l1888 0507                       l1896 0336  
                     l1984 01C4                       l1976 019C                       l1968 0187  
                     l1898 033C                       l1986 01CA                       l1978 01A2  
                     l1988 01D6                       ?_isr 0070                       STR_1 04DC  
                     STR_2 04ED                       _T0IF 005A                       u1007 0320  
                     u1017 0331                       u1027 0340                       u1037 0502  
                     _IOCB 0096                       _PIE1 008C                       _PIE2 008D  
                     _RBIF 0058                       _PIR1 000C                       _PIR2 000D  
                     _TXIF 0064                       _WPUB 0095          ?_Lcd_Write_String 0070  
                     _main 012E                       _var0 005E                       _var1 005D  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0078  
          __end_of_Lcd_Cmd 050B          ___bmul@multiplier 0076                      ??_isr 0070  
                    ?_main 0070            __end_of___awdiv 0255                      _ANSEL 0188  
          ___awdiv@divisor 0073                      _T1CON 0010                      i1l220 03FB  
                    i1l225 0417                      i1l219 03F4            ___awdiv@counter 004E  
                    _TMR1H 000F                      _TMR1L 000E                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      u73_20 03F3  
                    u73_21 03F2    __size_of_Lcd_Set_Cursor 0058                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      u74_20 03FA                      u74_21 03F9  
                    u75_20 03FF                      u75_21 03FE                      u76_20 0408  
                    u76_21 0407                      u77_20 0416                      u77_21 0415  
          __end_of_decimal 02BC                      _TXREG 0019                      _disp0 005B  
                    _disp1 005A            __end_of_initOsc 03AE                      _setup 03AE  
                    _start 0060                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 0362           __end_of_Lcd_Port 0546  
          __initialization 000F               __end_of_main 01EC                     ??_main 0057  
       __size_of_Lcd_Clear 000D                     _ADRESH 001E           ___awdiv@dividend 0075  
                   ?_setup 0070                     _ANSELH 0189                     i1l1750 03FA  
                   i1l1752 03FF                     i1l1760 0412                     i1l1762 0416  
                   i1l1754 0408                     i1l1746 03EF                     i1l1756 040D  
                   i1l1748 03F3                     i1l1758 0411                     _INTCON 000B  
              initOsc@frec 0075                  ??_Lcd_Cmd 0074                     _TMR1IF 0060  
                   _SPBRGH 009A    __size_of_Lcd_Write_Char 001D           __end_of_chselect 012E  
                   ___bmul 050B                  ??___awdiv 0077                     _initAN 0475  
                ??_decimal 0052           ___awdiv@quotient 0050                  ??_initOsc 0073  
                   saved_w 007E               initEUSART@rx 0073               initEUSART@tx 0074  
          Lcd_Set_Cursor@a 0050            Lcd_Set_Cursor@b 0077            Lcd_Set_Cursor@y 0052  
          Lcd_Set_Cursor@z 0051    __end_of__initialization 002A          __end_of_Lcd_Clear 0540  
      ___bmul@multiplicand 0073             __pcstackCOMMON 0070               __pidataBANK0 041E  
            __end_of_setup 03EF             _Lcd_Set_Cursor 02BC                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_setup 0076                 __pbssBANK0 0059  
               __pmaintext 012E                    ?___bmul 0073                 __pintentry 0004  
                  ?_initAN 0073  __size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 0314  
               ??_Lcd_Init 004E                  ?_chselect 0070                 ??_Lcd_Port 0073  
               __stringtab 04D6             _Lcd_Write_Char 04B9                    _Lcd_Cmd 04F1  
               _initEUSART 0499            __size_of___bmul 0015                    ___awdiv 01EC  
                  _decenas 0079            __size_of_initAN 0024                    _decimal 0255  
          ?_Lcd_Set_Cursor 0077                    __ptext1 03AE                    __ptext2 0362  
                  __ptext3 0499                    __ptext4 0475                    __ptext5 0255  
                  __ptext6 050B                    __ptext7 01EC                    __ptext8 002E  
                  __ptext9 044C                    _flagint 0062                    _initOsc 0362  
             __size_of_isr 002F                    _varUART 0059                 ??_chselect 0073  
   __end_of_Lcd_Write_Char 04D6       end_of_initialization 002A                  _RCSTAbits 0018  
                Lcd_Port@a 0073            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0050  
        Lcd_Write_String@i 004E                 _startfinal 0061                ?_initEUSART 0073  
                _TXSTAbits 0098                  _Lcd_Clear 0533             __end_of___bmul 0520  
         _Lcd_Write_String 044C                _BAUDCTLbits 0187             __end_of_initAN 0499  
               initAN@just 0073        start_initialization 000F                __end_of_isr 041E  
        __size_of_Lcd_Init 004E          __size_of_Lcd_Port 0006                 ?_Lcd_Clear 0070  
                 ??___bmul 0074                 init_fetch0 0520                __pdataBANK0 0020  
                 ??_initAN 0074            Lcd_Write_Char@a 0075            Lcd_Write_Char@y 0077  
      __size_of_initEUSART 0020               decimal@valor 0056                __pbssCOMMON 0078  
                ___latbits 0002              __pcstackBANK0 004E          __size_of_chselect 0100  
                 ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 004E                   ?___awdiv 0073  
                 ?_decimal 0070                  __pstrings 04D6                   ?_initOsc 0070  
           __size_of_setup 0041          interrupt_function 0004                   _PIE1bits 008C  
                 Lcd_Cmd@a 0076                   _PIR1bits 000C                ??_Lcd_Clear 0077  
                _multiplex 005F                 _ADCON0bits 001F                __stringbase 04DB  
               _ADCON1bits 009F           ??_Lcd_Write_Char 0074                   _Lcd_Init 0314  
                 _Lcd_Port 0540                  initAN@bin 0075   __end_of_Lcd_Write_String 0475  
             ??_initEUSART 0074           __size_of_Lcd_Cmd 001A           __size_of___awdiv 0069  
       __end_of__stringtab 04DC           __size_of_decimal 0067         __end_of_initEUSART 04B9  
         __size_of_initOsc 004C                   _centenas 0078                   _chselect 002E  
                 __ptext10 04B9                   __ptext11 02BC                   __ptext12 0314  
                 __ptext13 0533                   __ptext14 04F1                   __ptext15 0540  
                 __ptext16 03EF                   _contador 005C              __size_of_main 00BE  
                 _unidades 007A                 _INTCONbits 000B                   init_ram0 0524  
             chselect@cant 0076         Lcd_Write_Char@temp 0076                   intlevel1 0000  
                stringcode 04D6                 _OSCCONbits 008F         Lcd_Set_Cursor@temp 0053  
               _OPTION_REG 0081                   stringdir 04D6                   stringtab 04D6  
