

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Aug 09 14:38:00 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0014                     _SSPCON	set	20
   287  000B                     _INTCON	set	11
   288  000D                     _PIR2	set	13
   289  000C                     _PIR1	set	12
   290  0009                     _PORTE	set	9
   291  0007                     _PORTC	set	7
   292  0006                     _PORTB	set	6
   293  0005                     _PORTA	set	5
   294  0008                     _PORTD	set	8
   295  0013                     _SSPBUF	set	19
   296  0014                     _SSPCONbits	set	20
   297  001E                     _ADRESH	set	30
   298  000C                     _PIR1bits	set	12
   299  000B                     _INTCONbits	set	11
   300  0018                     _RCSTAbits	set	24
   301  001F                     _ADCON0bits	set	31
   302  0063                     _SSPIF	set	99
   303  005E                     _PEIE	set	94
   304  005F                     _GIE	set	95
   305  0091                     _SSPCON2bits	set	145
   306  0087                     _TRISCbits	set	135
   307  0094                     _SSPSTAT	set	148
   308  0093                     _SSPADD	set	147
   309  0091                     _SSPCON2	set	145
   310  008D                     _PIE2	set	141
   311  008C                     _PIE1	set	140
   312  0089                     _TRISE	set	137
   313  0088                     _TRISD	set	136
   314  0087                     _TRISC	set	135
   315  0094                     _SSPSTATbits	set	148
   316  0081                     _OPTION_REG	set	129
   317  0096                     _IOCB	set	150
   318  0095                     _WPUB	set	149
   319  0086                     _TRISB	set	134
   320  009A                     _SPBRGH	set	154
   321  0099                     _SPBRG	set	153
   322  0098                     _TXSTAbits	set	152
   323  008C                     _PIE1bits	set	140
   324  009F                     _ADCON1bits	set	159
   325  0085                     _TRISA	set	133
   326  008F                     _OSCCONbits	set	143
   327  0463                     _SSPIE	set	1123
   328  043C                     _TRISC4	set	1084
   329  043B                     _TRISC3	set	1083
   330  04A0                     _BF	set	1184
   331  0187                     _BAUDCTLbits	set	391
   332  0189                     _ANSELH	set	393
   333  0188                     _ANSEL	set	392
   334                           
   335                           	psect	cinit
   336  000F                     start_initialization:	
   337                           ; #config settings
   338                           
   339  000F                     __initialization:
   340                           
   341                           ; Clear objects allocated to COMMON
   342  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   343  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   344  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   345  0012  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   346  0013                     end_of_initialization:	
   347                           ;End of C runtime variable initialization code
   348                           
   349  0013                     __end_of__initialization:
   350  0013  0183               	clrf	3
   351  0014  120A  118A  2A55   	ljmp	_main	;jump to C main() function
   352                           
   353                           	psect	bssCOMMON
   354  0077                     __pbssCOMMON:
   355  0077                     _z:
   356  0077                     	ds	1
   357  0078                     _varPot1:
   358  0078                     	ds	1
   359  0079                     _varPot0:
   360  0079                     	ds	1
   361  007A                     _inI2C:
   362  007A                     	ds	1
   363                           
   364                           	psect	cstackCOMMON
   365  0070                     __pcstackCOMMON:
   366  0070                     ?_setup:
   367  0070                     ?_I2C_Slave_Init:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?_initOsc:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_chselect:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ?_isr:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ??_isr:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_main:	
   383                           ; 1 bytes @ 0x0
   384                           
   385                           
   386                           ; 1 bytes @ 0x0
   387  0070                     	ds	3
   388  0073                     ??_I2C_Slave_Init:
   389  0073                     ??_initOsc:	
   390                           ; 1 bytes @ 0x3
   391                           
   392  0073                     ?_initAN:	
   393                           ; 1 bytes @ 0x3
   394                           
   395  0073                     ??_chselect:	
   396                           ; 1 bytes @ 0x3
   397                           
   398  0073                     initAN@just:	
   399                           ; 1 bytes @ 0x3
   400                           
   401  0073                     I2C_Slave_Init@address:	
   402                           ; 1 bytes @ 0x3
   403                           
   404                           
   405                           ; 1 bytes @ 0x3
   406  0073                     	ds	1
   407  0074                     ??_initAN:
   408                           
   409                           ; 1 bytes @ 0x4
   410  0074                     	ds	1
   411  0075                     initOsc@frec:
   412  0075                     initAN@bin:	
   413                           ; 1 bytes @ 0x5
   414                           
   415                           
   416                           ; 1 bytes @ 0x5
   417  0075                     	ds	1
   418  0076                     ??_setup:
   419  0076                     chselect@cant:	
   420                           ; 1 bytes @ 0x6
   421                           
   422                           
   423                           ; 1 bytes @ 0x6
   424  0076                     	ds	1
   425  0077                     ??_main:
   426                           
   427                           	psect	maintext
   428  0255                     __pmaintext:	
   429                           ; 1 bytes @ 0x7
   430 ;;
   431 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   432 ;;
   433 ;; *************** function _main *****************
   434 ;; Defined at:
   435 ;;		line 108 in file "MainL4Pot.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;		None
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1    wreg      void 
   442 ;; Registers used:
   443 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   444 ;; Tracked objects:
   445 ;;		On entry : B00/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   449 ;;      Params:         0       0       0       0       0
   450 ;;      Locals:         0       0       0       0       0
   451 ;;      Temps:          0       0       0       0       0
   452 ;;      Totals:         0       0       0       0       0
   453 ;;Total ram usage:        0 bytes
   454 ;; Hardware stack levels required when called: 3
   455 ;; This function calls:
   456 ;;		_chselect
   457 ;;		_setup
   458 ;; This function is called by:
   459 ;;		Startup code after reset
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463                           
   464                           ;psect for function _main
   465  0255                     _main:
   466  0255                     l1270:	
   467                           ;incstack = 0
   468                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   469                           
   470                           
   471                           ;MainL4Pot.c: 109:   PIR1 = 0x00;
   472  0255  120A  118A  21E1  120A  118A  	fcall	_setup
   473  025A                     l201:
   474  025A  3001               	movlw	1
   475  025B  120A  118A  2017  120A  118A  	fcall	_chselect
   476  0260                     l1272:
   477  0260  0879               	movf	_varPot0,w
   478  0261  1283               	bcf	3,5	;RP0=0, select bank0
   479  0262  1303               	bcf	3,6	;RP1=0, select bank0
   480  0263  0088               	movwf	8	;volatile
   481  0264  2A5A               	goto	l201
   482  0265  120A  118A  280C   	ljmp	start
   483  0268                     __end_of_main:
   484                           
   485                           	psect	text1
   486  01E1                     __ptext1:	
   487 ;; *************** function _setup *****************
   488 ;; Defined at:
   489 ;;		line 123 in file "MainL4Pot.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;		None
   492 ;; Auto vars:     Size  Location     Type
   493 ;;		None
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   503 ;;      Params:         0       0       0       0       0
   504 ;;      Locals:         0       0       0       0       0
   505 ;;      Temps:          0       0       0       0       0
   506 ;;      Totals:         0       0       0       0       0
   507 ;;Total ram usage:        0 bytes
   508 ;; Hardware stack levels used: 1
   509 ;; Hardware stack levels required when called: 2
   510 ;; This function calls:
   511 ;;		_I2C_Slave_Init
   512 ;;		_initAN
   513 ;;		_initOsc
   514 ;; This function is called by:
   515 ;;		_main
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           
   520                           ;psect for function _setup
   521  01E1                     _setup:
   522  01E1                     l1240:	
   523                           ;incstack = 0
   524                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   525                           
   526  01E1  1683               	bsf	3,5	;RP0=1, select bank3
   527  01E2  1703               	bsf	3,6	;RP1=1, select bank3
   528  01E3  0189               	clrf	9	;volatile
   529  01E4  1683               	bsf	3,5	;RP0=1, select bank1
   530  01E5  1303               	bcf	3,6	;RP1=0, select bank1
   531  01E6  0185               	clrf	5	;volatile
   532  01E7  0186               	clrf	6	;volatile
   533  01E8  0187               	clrf	7	;volatile
   534  01E9  0188               	clrf	8	;volatile
   535  01EA  0189               	clrf	9	;volatile
   536  01EB                     l1242:
   537  01EB  01F3               	clrf	initAN@just
   538  01EC  3001               	movlw	1
   539  01ED  120A  118A  2215  120A  118A  	fcall	_initAN
   540  01F2                     l1244:
   541  01F2  30C4               	movlw	196
   542  01F3  1683               	bsf	3,5	;RP0=1, select bank1
   543  01F4  1303               	bcf	3,6	;RP1=0, select bank1
   544  01F5  0081               	movwf	1	;volatile
   545  01F6                     l1246:
   546  01F6  3008               	movlw	8
   547  01F7  120A  118A  2185  120A  118A  	fcall	_initOsc
   548  01FC                     l1248:
   549  01FC  3090               	movlw	144
   550  01FD  120A  118A  223B  120A  118A  	fcall	_I2C_Slave_Init
   551  0202                     l1250:
   552  0202  1283               	bcf	3,5	;RP0=0, select bank0
   553  0203  1303               	bcf	3,6	;RP1=0, select bank0
   554  0204  0185               	clrf	5	;volatile
   555  0205                     l1252:
   556  0205  0186               	clrf	6	;volatile
   557  0206                     l1254:
   558  0206  0187               	clrf	7	;volatile
   559  0207                     l1256:
   560  0207  0188               	clrf	8	;volatile
   561  0208                     l1258:
   562  0208  0189               	clrf	9	;volatile
   563  0209                     l1260:
   564  0209  3048               	movlw	72
   565  020A  1683               	bsf	3,5	;RP0=1, select bank1
   566  020B  1303               	bcf	3,6	;RP1=0, select bank1
   567  020C  008C               	movwf	12	;volatile
   568  020D                     l1262:
   569  020D  018D               	clrf	13	;volatile
   570  020E                     l1264:
   571  020E  1283               	bcf	3,5	;RP0=0, select bank0
   572  020F  1303               	bcf	3,6	;RP1=0, select bank0
   573  0210  018C               	clrf	12	;volatile
   574  0211                     l1266:
   575  0211  018D               	clrf	13	;volatile
   576  0212                     l1268:
   577  0212  30C0               	movlw	192
   578  0213  008B               	movwf	11	;volatile
   579  0214                     l207:
   580  0214  0008               	return
   581  0215                     __end_of_setup:
   582                           
   583                           	psect	text2
   584  0185                     __ptext2:	
   585 ;; *************** function _initOsc *****************
   586 ;; Defined at:
   587 ;;		line 14 in file "./my_lib.h"
   588 ;; Parameters:    Size  Location     Type
   589 ;;  frec            1    wreg     unsigned char 
   590 ;; Auto vars:     Size  Location     Type
   591 ;;  frec            1    5[COMMON] unsigned char 
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   601 ;;      Params:         0       0       0       0       0
   602 ;;      Locals:         1       0       0       0       0
   603 ;;      Temps:          2       0       0       0       0
   604 ;;      Totals:         3       0       0       0       0
   605 ;;Total ram usage:        3 bytes
   606 ;; Hardware stack levels used: 1
   607 ;; Hardware stack levels required when called: 1
   608 ;; This function calls:
   609 ;;		Nothing
   610 ;; This function is called by:
   611 ;;		_setup
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           
   616                           ;psect for function _initOsc
   617  0185                     _initOsc:
   618                           
   619                           ;incstack = 0
   620                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   621                           ;initOsc@frec stored from wreg
   622  0185  00F5               	movwf	initOsc@frec
   623  0186                     l854:
   624                           
   625                           ;./my_lib.h: 16:         switch(frec){
   626  0186  29BD               	goto	l858
   627  0187                     l82:	
   628                           ;./my_lib.h: 17:             case 8:
   629                           
   630                           
   631                           ;./my_lib.h: 18:                 OSCCONbits.IRCF0 = 1;
   632  0187  1683               	bsf	3,5	;RP0=1, select bank1
   633  0188  1303               	bcf	3,6	;RP1=0, select bank1
   634  0189  160F               	bsf	15,4	;volatile
   635                           
   636                           ;./my_lib.h: 19:                 OSCCONbits.IRCF1 = 1;
   637  018A  168F               	bsf	15,5	;volatile
   638                           
   639                           ;./my_lib.h: 20:                 OSCCONbits.IRCF2 = 1;
   640  018B  170F               	bsf	15,6	;volatile
   641                           
   642                           ;./my_lib.h: 21:                 break;
   643  018C  29DF               	goto	l83
   644  018D                     l84:	
   645                           ;./my_lib.h: 23:             case 4:
   646                           
   647                           
   648                           ;./my_lib.h: 24:                 OSCCONbits.IRCF0 = 0;
   649  018D  1683               	bsf	3,5	;RP0=1, select bank1
   650  018E  1303               	bcf	3,6	;RP1=0, select bank1
   651  018F  120F               	bcf	15,4	;volatile
   652                           
   653                           ;./my_lib.h: 25:                 OSCCONbits.IRCF1 = 1;
   654  0190  168F               	bsf	15,5	;volatile
   655                           
   656                           ;./my_lib.h: 26:                 OSCCONbits.IRCF2 = 1;
   657  0191  170F               	bsf	15,6	;volatile
   658                           
   659                           ;./my_lib.h: 27:                 break;
   660  0192  29DF               	goto	l83
   661  0193                     l85:	
   662                           ;./my_lib.h: 28:             case 2:
   663                           
   664                           
   665                           ;./my_lib.h: 29:                 OSCCONbits.IRCF0 = 1;
   666  0193  1683               	bsf	3,5	;RP0=1, select bank1
   667  0194  1303               	bcf	3,6	;RP1=0, select bank1
   668  0195  160F               	bsf	15,4	;volatile
   669                           
   670                           ;./my_lib.h: 30:                 OSCCONbits.IRCF1 = 0;
   671  0196  128F               	bcf	15,5	;volatile
   672                           
   673                           ;./my_lib.h: 31:                 OSCCONbits.IRCF2 = 1;
   674  0197  170F               	bsf	15,6	;volatile
   675                           
   676                           ;./my_lib.h: 32:                 break;
   677  0198  29DF               	goto	l83
   678  0199                     l86:	
   679                           ;./my_lib.h: 33:              case 1:
   680                           
   681                           
   682                           ;./my_lib.h: 34:                 OSCCONbits.IRCF0 = 0;
   683  0199  1683               	bsf	3,5	;RP0=1, select bank1
   684  019A  1303               	bcf	3,6	;RP1=0, select bank1
   685  019B  120F               	bcf	15,4	;volatile
   686                           
   687                           ;./my_lib.h: 35:                 OSCCONbits.IRCF1 = 0;
   688  019C  128F               	bcf	15,5	;volatile
   689                           
   690                           ;./my_lib.h: 36:                 OSCCONbits.IRCF2 = 1;
   691  019D  170F               	bsf	15,6	;volatile
   692                           
   693                           ;./my_lib.h: 37:                 break;
   694  019E  29DF               	goto	l83
   695  019F                     l87:	
   696                           ;./my_lib.h: 38:              case 50:
   697                           
   698                           
   699                           ;./my_lib.h: 39:                 OSCCONbits.IRCF0 = 0;
   700  019F  1683               	bsf	3,5	;RP0=1, select bank1
   701  01A0  1303               	bcf	3,6	;RP1=0, select bank1
   702  01A1  120F               	bcf	15,4	;volatile
   703                           
   704                           ;./my_lib.h: 40:                 OSCCONbits.IRCF1 = 1;
   705  01A2  168F               	bsf	15,5	;volatile
   706                           
   707                           ;./my_lib.h: 41:                 OSCCONbits.IRCF2 = 1;
   708  01A3  170F               	bsf	15,6	;volatile
   709                           
   710                           ;./my_lib.h: 42:                 break;
   711  01A4  29DF               	goto	l83
   712  01A5                     l88:	
   713                           ;./my_lib.h: 43:              case 25:
   714                           
   715                           
   716                           ;./my_lib.h: 44:                 OSCCONbits.IRCF0 = 0;
   717  01A5  1683               	bsf	3,5	;RP0=1, select bank1
   718  01A6  1303               	bcf	3,6	;RP1=0, select bank1
   719  01A7  120F               	bcf	15,4	;volatile
   720                           
   721                           ;./my_lib.h: 45:                 OSCCONbits.IRCF1 = 1;
   722  01A8  168F               	bsf	15,5	;volatile
   723                           
   724                           ;./my_lib.h: 46:                 OSCCONbits.IRCF2 = 0;
   725  01A9  130F               	bcf	15,6	;volatile
   726                           
   727                           ;./my_lib.h: 47:                 break;
   728  01AA  29DF               	goto	l83
   729  01AB                     l89:	
   730                           ;./my_lib.h: 48:               case 12:
   731                           
   732                           
   733                           ;./my_lib.h: 49:                 OSCCONbits.IRCF0 = 1;
   734  01AB  1683               	bsf	3,5	;RP0=1, select bank1
   735  01AC  1303               	bcf	3,6	;RP1=0, select bank1
   736  01AD  160F               	bsf	15,4	;volatile
   737                           
   738                           ;./my_lib.h: 50:                 OSCCONbits.IRCF1 = 0;
   739  01AE  128F               	bcf	15,5	;volatile
   740                           
   741                           ;./my_lib.h: 51:                 OSCCONbits.IRCF2 = 0;
   742  01AF  130F               	bcf	15,6	;volatile
   743                           
   744                           ;./my_lib.h: 52:                 break;
   745  01B0  29DF               	goto	l83
   746  01B1                     l90:	
   747                           ;./my_lib.h: 53:               case 31:
   748                           
   749                           
   750                           ;./my_lib.h: 54:                 OSCCONbits.IRCF0 = 0;
   751  01B1  1683               	bsf	3,5	;RP0=1, select bank1
   752  01B2  1303               	bcf	3,6	;RP1=0, select bank1
   753  01B3  120F               	bcf	15,4	;volatile
   754                           
   755                           ;./my_lib.h: 55:                 OSCCONbits.IRCF1 = 1;
   756  01B4  168F               	bsf	15,5	;volatile
   757                           
   758                           ;./my_lib.h: 56:                 OSCCONbits.IRCF2 = 1;
   759  01B5  170F               	bsf	15,6	;volatile
   760                           
   761                           ;./my_lib.h: 57:                 break;
   762  01B6  29DF               	goto	l83
   763  01B7                     l91:	
   764                           ;./my_lib.h: 58:               default:
   765                           
   766                           
   767                           ;./my_lib.h: 59:                 OSCCONbits.IRCF0 = 0;
   768  01B7  1683               	bsf	3,5	;RP0=1, select bank1
   769  01B8  1303               	bcf	3,6	;RP1=0, select bank1
   770  01B9  120F               	bcf	15,4	;volatile
   771                           
   772                           ;./my_lib.h: 60:                 OSCCONbits.IRCF1 = 1;
   773  01BA  168F               	bsf	15,5	;volatile
   774                           
   775                           ;./my_lib.h: 61:                 OSCCONbits.IRCF2 = 1;
   776  01BB  170F               	bsf	15,6	;volatile
   777                           
   778                           ;./my_lib.h: 62:                 break;
   779  01BC  29DF               	goto	l83
   780  01BD                     l858:
   781  01BD  0875               	movf	initOsc@frec,w
   782  01BE  00F3               	movwf	??_initOsc
   783  01BF  01F4               	clrf	??_initOsc+1
   784                           
   785                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   786                           ; Switch size 1, requested type "simple"
   787                           ; Number of cases is 1, Range of values is 0 to 0
   788                           ; switch strategies available:
   789                           ; Name         Instructions Cycles
   790                           ; simple_byte            4     3 (average)
   791                           ; direct_byte           11     8 (fixed)
   792                           ; jumptable            260     6 (fixed)
   793                           ;	Chosen strategy is simple_byte
   794  01C0  0874               	movf	??_initOsc+1,w
   795  01C1  3A00               	xorlw	0	; case 0
   796  01C2  1903               	skipnz
   797  01C3  29C5               	goto	l1324
   798  01C4  29B7               	goto	l91
   799  01C5                     l1324:
   800                           
   801                           ; Switch size 1, requested type "simple"
   802                           ; Number of cases is 8, Range of values is 1 to 50
   803                           ; switch strategies available:
   804                           ; Name         Instructions Cycles
   805                           ; simple_byte           25    13 (average)
   806                           ; direct_byte          161    11 (fixed)
   807                           ; jumptable            263     9 (fixed)
   808                           ;	Chosen strategy is simple_byte
   809  01C5  0873               	movf	??_initOsc,w
   810  01C6  3A01               	xorlw	1	; case 1
   811  01C7  1903               	skipnz
   812  01C8  2999               	goto	l86
   813  01C9  3A03               	xorlw	3	; case 2
   814  01CA  1903               	skipnz
   815  01CB  2993               	goto	l85
   816  01CC  3A06               	xorlw	6	; case 4
   817  01CD  1903               	skipnz
   818  01CE  298D               	goto	l84
   819  01CF  3A0C               	xorlw	12	; case 8
   820  01D0  1903               	skipnz
   821  01D1  2987               	goto	l82
   822  01D2  3A04               	xorlw	4	; case 12
   823  01D3  1903               	skipnz
   824  01D4  29AB               	goto	l89
   825  01D5  3A15               	xorlw	21	; case 25
   826  01D6  1903               	skipnz
   827  01D7  29A5               	goto	l88
   828  01D8  3A06               	xorlw	6	; case 31
   829  01D9  1903               	skipnz
   830  01DA  29B1               	goto	l90
   831  01DB  3A2D               	xorlw	45	; case 50
   832  01DC  1903               	skipnz
   833  01DD  299F               	goto	l87
   834  01DE  29B7               	goto	l91
   835  01DF                     l83:
   836                           
   837                           ;./my_lib.h: 64:     OSCCONbits.SCS = 1;
   838  01DF  140F               	bsf	15,0	;volatile
   839  01E0                     l92:
   840  01E0  0008               	return
   841  01E1                     __end_of_initOsc:
   842                           
   843                           	psect	text3
   844  0215                     __ptext3:	
   845 ;; *************** function _initAN *****************
   846 ;; Defined at:
   847 ;;		line 67 in file "./my_lib.h"
   848 ;; Parameters:    Size  Location     Type
   849 ;;  bin             1    wreg     unsigned char 
   850 ;;  just            1    3[COMMON] unsigned char 
   851 ;; Auto vars:     Size  Location     Type
   852 ;;  bin             1    5[COMMON] unsigned char 
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      void 
   855 ;; Registers used:
   856 ;;		wreg, status,2, status,0
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   862 ;;      Params:         1       0       0       0       0
   863 ;;      Locals:         1       0       0       0       0
   864 ;;      Temps:          1       0       0       0       0
   865 ;;      Totals:         3       0       0       0       0
   866 ;;Total ram usage:        3 bytes
   867 ;; Hardware stack levels used: 1
   868 ;; Hardware stack levels required when called: 1
   869 ;; This function calls:
   870 ;;		Nothing
   871 ;; This function is called by:
   872 ;;		_setup
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           
   877                           ;psect for function _initAN
   878  0215                     _initAN:
   879                           
   880                           ;incstack = 0
   881                           ; Regs used in _initAN: [wreg+status,2+status,0]
   882                           ;initAN@bin stored from wreg
   883  0215  00F5               	movwf	initAN@bin
   884  0216                     l1220:
   885                           
   886                           ;./my_lib.h: 68:      TRISA = TRISA ^ bin;
   887  0216  1683               	bsf	3,5	;RP0=1, select bank1
   888  0217  1303               	bcf	3,6	;RP1=0, select bank1
   889  0218  0805               	movf	5,w	;volatile
   890  0219  0675               	xorwf	initAN@bin,w
   891  021A  0085               	movwf	5	;volatile
   892  021B                     l1222:
   893                           
   894                           ;./my_lib.h: 69:      ANSEL = bin;
   895  021B  0875               	movf	initAN@bin,w
   896  021C  1683               	bsf	3,5	;RP0=1, select bank3
   897  021D  1703               	bsf	3,6	;RP1=1, select bank3
   898  021E  0088               	movwf	8	;volatile
   899  021F                     l1224:
   900                           
   901                           ;./my_lib.h: 70:      ANSELH = 0b00000000;
   902  021F  0189               	clrf	9	;volatile
   903  0220                     l1226:
   904                           
   905                           ;./my_lib.h: 73:      ADCON0bits.CHS= 0;
   906  0220  30C3               	movlw	-61
   907  0221  1283               	bcf	3,5	;RP0=0, select bank0
   908  0222  1303               	bcf	3,6	;RP1=0, select bank0
   909  0223  059F               	andwf	31,f	;volatile
   910  0224                     l1228:
   911                           
   912                           ;./my_lib.h: 74:      _delay((unsigned long)((100)*(8000000/4000000.0)));
   913  0224  3042               	movlw	66
   914  0225  00F4               	movwf	??_initAN
   915  0226                     u297:
   916  0226  0BF4               	decfsz	??_initAN,f
   917  0227  2A26               	goto	u297
   918  0228  0000               	nop
   919  0229                     l1230:
   920                           
   921                           ;./my_lib.h: 76:      ADCON0bits.ADON = 1;
   922  0229  1283               	bcf	3,5	;RP0=0, select bank0
   923  022A  1303               	bcf	3,6	;RP1=0, select bank0
   924  022B  141F               	bsf	31,0	;volatile
   925  022C                     l1232:
   926                           
   927                           ;./my_lib.h: 77:      ADCON0bits.ADCS = 1;
   928  022C  081F               	movf	31,w	;volatile
   929  022D  393F               	andlw	-193
   930  022E  3840               	iorlw	64
   931  022F  009F               	movwf	31	;volatile
   932                           
   933                           ;./my_lib.h: 81:      ADCON1bits.ADFM = just;
   934  0230  0C73               	rrf	initAN@just,w
   935  0231  1683               	bsf	3,5	;RP0=1, select bank1
   936  0232  1303               	bcf	3,6	;RP1=0, select bank1
   937  0233  1C03               	skipc
   938  0234  139F               	bcf	31,7	;volatile
   939  0235  1803               	skipnc
   940  0236  179F               	bsf	31,7	;volatile
   941  0237                     l1234:
   942                           
   943                           ;./my_lib.h: 82:      ADCON1bits.VCFG0 = 0;
   944  0237  121F               	bcf	31,4	;volatile
   945  0238                     l1236:
   946                           
   947                           ;./my_lib.h: 83:      ADCON1bits.VCFG1 = 0;
   948  0238  129F               	bcf	31,5	;volatile
   949  0239                     l1238:
   950                           
   951                           ;./my_lib.h: 85:      PIE1bits.ADIE= 1;
   952  0239  170C               	bsf	12,6	;volatile
   953  023A                     l95:
   954  023A  0008               	return
   955  023B                     __end_of_initAN:
   956                           
   957                           	psect	text4
   958  023B                     __ptext4:	
   959 ;; *************** function _I2C_Slave_Init *****************
   960 ;; Defined at:
   961 ;;		line 93 in file "I2C.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;  address         1    wreg     unsigned char 
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  address         1    3[COMMON] unsigned char 
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   975 ;;      Params:         0       0       0       0       0
   976 ;;      Locals:         1       0       0       0       0
   977 ;;      Temps:          0       0       0       0       0
   978 ;;      Totals:         1       0       0       0       0
   979 ;;Total ram usage:        1 bytes
   980 ;; Hardware stack levels used: 1
   981 ;; Hardware stack levels required when called: 1
   982 ;; This function calls:
   983 ;;		Nothing
   984 ;; This function is called by:
   985 ;;		_setup
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           
   990                           ;psect for function _I2C_Slave_Init
   991  023B                     _I2C_Slave_Init:
   992                           
   993                           ;incstack = 0
   994                           ; Regs used in _I2C_Slave_Init: [wreg]
   995                           ;I2C_Slave_Init@address stored from wreg
   996  023B  00F3               	movwf	I2C_Slave_Init@address
   997  023C                     l884:
   998                           
   999                           ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
      +                          dress;
  1000  023C  0873               	movf	I2C_Slave_Init@address,w
  1001  023D  1683               	bsf	3,5	;RP0=1, select bank1
  1002  023E  1303               	bcf	3,6	;RP1=0, select bank1
  1003  023F  0093               	movwf	19	;volatile
  1004                           
  1005                           ;I2C.c: 96:     SSPCON = 0x36;
  1006  0240  3036               	movlw	54
  1007  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1008  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1009  0243  0094               	movwf	20	;volatile
  1010                           
  1011                           ;I2C.c: 97:     SSPSTAT = 0x80;
  1012  0244  3080               	movlw	128
  1013  0245  1683               	bsf	3,5	;RP0=1, select bank1
  1014  0246  1303               	bcf	3,6	;RP1=0, select bank1
  1015  0247  0094               	movwf	20	;volatile
  1016                           
  1017                           ;I2C.c: 98:     SSPCON2 = 0x01;
  1018  0248  3001               	movlw	1
  1019  0249  0091               	movwf	17	;volatile
  1020  024A                     l886:
  1021                           
  1022                           ;I2C.c: 99:     TRISC3 = 1;
  1023  024A  1587               	bsf	7,3	;volatile
  1024  024B                     l888:
  1025                           
  1026                           ;I2C.c: 100:     TRISC4 = 1;
  1027  024B  1607               	bsf	7,4	;volatile
  1028  024C                     l890:
  1029                           
  1030                           ;I2C.c: 101:     GIE = 1;
  1031  024C  178B               	bsf	11,7	;volatile
  1032  024D                     l892:
  1033                           
  1034                           ;I2C.c: 102:     PEIE = 1;
  1035  024D  170B               	bsf	11,6	;volatile
  1036  024E                     l894:
  1037                           
  1038                           ;I2C.c: 103:     SSPIF = 0;
  1039  024E  1283               	bcf	3,5	;RP0=0, select bank0
  1040  024F  1303               	bcf	3,6	;RP1=0, select bank0
  1041  0250  118C               	bcf	12,3	;volatile
  1042  0251                     l896:
  1043                           
  1044                           ;I2C.c: 104:     SSPIE = 1;
  1045  0251  1683               	bsf	3,5	;RP0=1, select bank1
  1046  0252  1303               	bcf	3,6	;RP1=0, select bank1
  1047  0253  158C               	bsf	12,3	;volatile
  1048  0254                     l262:
  1049  0254  0008               	return
  1050  0255                     __end_of_I2C_Slave_Init:
  1051                           
  1052                           	psect	text5
  1053  0017                     __ptext5:	
  1054 ;; *************** function _chselect *****************
  1055 ;; Defined at:
  1056 ;;		line 138 in file "./my_lib.h"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;  cant            1    wreg     unsigned char 
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;  cant            1    6[COMMON] unsigned char 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  1    wreg      void 
  1063 ;; Registers used:
  1064 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1070 ;;      Params:         0       0       0       0       0
  1071 ;;      Locals:         1       0       0       0       0
  1072 ;;      Temps:          3       0       0       0       0
  1073 ;;      Totals:         4       0       0       0       0
  1074 ;;Total ram usage:        4 bytes
  1075 ;; Hardware stack levels used: 1
  1076 ;; Hardware stack levels required when called: 1
  1077 ;; This function calls:
  1078 ;;		Nothing
  1079 ;; This function is called by:
  1080 ;;		_main
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           
  1085                           ;psect for function _chselect
  1086  0017                     _chselect:
  1087                           
  1088                           ;incstack = 0
  1089                           ; Regs used in _chselect: [wreg-fsr0h+status,2+status,0]
  1090                           ;chselect@cant stored from wreg
  1091  0017  00F6               	movwf	chselect@cant
  1092  0018                     l898:
  1093                           
  1094                           ;./my_lib.h: 139:     if(ADCON0bits.GO == 0){
  1095  0018  1283               	bcf	3,5	;RP0=0, select bank0
  1096  0019  1303               	bcf	3,6	;RP1=0, select bank0
  1097  001A  189F               	btfsc	31,1	;volatile
  1098  001B  281D               	goto	u11
  1099  001C  281E               	goto	u10
  1100  001D                     u11:
  1101  001D  290E               	goto	l986
  1102  001E                     u10:
  1103  001E  28D7               	goto	l984
  1104  001F                     l902:
  1105                           
  1106                           ;./my_lib.h: 143:             if (cant == 1){
  1107  001F  0376               	decf	chselect@cant,w
  1108  0020  1D03               	btfss	3,2
  1109  0021  2823               	goto	u21
  1110  0022  2824               	goto	u20
  1111  0023                     u21:
  1112  0023  2827               	goto	l906
  1113  0024                     u20:
  1114  0024                     l904:
  1115                           
  1116                           ;./my_lib.h: 144:                 ADCON0bits.CHS = 0;
  1117  0024  30C3               	movlw	-61
  1118  0025  059F               	andwf	31,f	;volatile
  1119                           
  1120                           ;./my_lib.h: 145:             }
  1121  0026  290E               	goto	l986
  1122  0027                     l906:
  1123                           
  1124                           ;./my_lib.h: 147:                 ADCON0bits.CHS = 1;
  1125  0027  081F               	movf	31,w	;volatile
  1126  0028  39C3               	andlw	-61
  1127  0029  3804               	iorlw	4
  1128  002A  009F               	movwf	31	;volatile
  1129  002B  290E               	goto	l986
  1130  002C                     l908:
  1131                           
  1132                           ;./my_lib.h: 151:             if (cant == 2){
  1133  002C  3002               	movlw	2
  1134  002D  0676               	xorwf	chselect@cant,w
  1135  002E  1D03               	btfss	3,2
  1136  002F  2831               	goto	u31
  1137  0030  2832               	goto	u30
  1138  0031                     u31:
  1139  0031  2835               	goto	l912
  1140  0032                     u30:
  1141  0032                     l910:
  1142                           
  1143                           ;./my_lib.h: 152:                 ADCON0bits.CHS = 0;
  1144  0032  30C3               	movlw	-61
  1145  0033  059F               	andwf	31,f	;volatile
  1146                           
  1147                           ;./my_lib.h: 153:             }
  1148  0034  290E               	goto	l986
  1149  0035                     l912:
  1150                           
  1151                           ;./my_lib.h: 155:                 ADCON0bits.CHS = 2;
  1152  0035  081F               	movf	31,w	;volatile
  1153  0036  39C3               	andlw	-61
  1154  0037  3808               	iorlw	8
  1155  0038  009F               	movwf	31	;volatile
  1156  0039  290E               	goto	l986
  1157  003A                     l914:
  1158                           
  1159                           ;./my_lib.h: 159:             if (cant == 3){
  1160  003A  3003               	movlw	3
  1161  003B  0676               	xorwf	chselect@cant,w
  1162  003C  1D03               	btfss	3,2
  1163  003D  283F               	goto	u41
  1164  003E  2840               	goto	u40
  1165  003F                     u41:
  1166  003F  2843               	goto	l918
  1167  0040                     u40:
  1168  0040                     l916:
  1169                           
  1170                           ;./my_lib.h: 160:                 ADCON0bits.CHS = 0;
  1171  0040  30C3               	movlw	-61
  1172  0041  059F               	andwf	31,f	;volatile
  1173                           
  1174                           ;./my_lib.h: 161:             }
  1175  0042  290E               	goto	l986
  1176  0043                     l918:
  1177                           
  1178                           ;./my_lib.h: 163:                 ADCON0bits.CHS = 3;
  1179  0043  081F               	movf	31,w	;volatile
  1180  0044  39C3               	andlw	-61
  1181  0045  380C               	iorlw	12
  1182  0046  009F               	movwf	31	;volatile
  1183  0047  290E               	goto	l986
  1184  0048                     l920:
  1185                           
  1186                           ;./my_lib.h: 167:             if (cant == 4){
  1187  0048  3004               	movlw	4
  1188  0049  0676               	xorwf	chselect@cant,w
  1189  004A  1D03               	btfss	3,2
  1190  004B  284D               	goto	u51
  1191  004C  284E               	goto	u50
  1192  004D                     u51:
  1193  004D  2851               	goto	l924
  1194  004E                     u50:
  1195  004E                     l922:
  1196                           
  1197                           ;./my_lib.h: 168:                 ADCON0bits.CHS = 0;
  1198  004E  30C3               	movlw	-61
  1199  004F  059F               	andwf	31,f	;volatile
  1200                           
  1201                           ;./my_lib.h: 169:             }
  1202  0050  290E               	goto	l986
  1203  0051                     l924:
  1204                           
  1205                           ;./my_lib.h: 171:                 ADCON0bits.CHS = 4;
  1206  0051  081F               	movf	31,w	;volatile
  1207  0052  39C3               	andlw	-61
  1208  0053  3810               	iorlw	16
  1209  0054  009F               	movwf	31	;volatile
  1210  0055  290E               	goto	l986
  1211  0056                     l926:
  1212                           
  1213                           ;./my_lib.h: 175:             if (cant == 5){
  1214  0056  3005               	movlw	5
  1215  0057  0676               	xorwf	chselect@cant,w
  1216  0058  1D03               	btfss	3,2
  1217  0059  285B               	goto	u61
  1218  005A  285C               	goto	u60
  1219  005B                     u61:
  1220  005B  285F               	goto	l930
  1221  005C                     u60:
  1222  005C                     l928:
  1223                           
  1224                           ;./my_lib.h: 176:                 ADCON0bits.CHS = 0;
  1225  005C  30C3               	movlw	-61
  1226  005D  059F               	andwf	31,f	;volatile
  1227                           
  1228                           ;./my_lib.h: 177:             }
  1229  005E  290E               	goto	l986
  1230  005F                     l930:
  1231                           
  1232                           ;./my_lib.h: 179:                 ADCON0bits.CHS = 5;
  1233  005F  081F               	movf	31,w	;volatile
  1234  0060  39C3               	andlw	-61
  1235  0061  3814               	iorlw	20
  1236  0062  009F               	movwf	31	;volatile
  1237  0063  290E               	goto	l986
  1238  0064                     l932:
  1239                           
  1240                           ;./my_lib.h: 183:             if (cant == 6){
  1241  0064  3006               	movlw	6
  1242  0065  0676               	xorwf	chselect@cant,w
  1243  0066  1D03               	btfss	3,2
  1244  0067  2869               	goto	u71
  1245  0068  286A               	goto	u70
  1246  0069                     u71:
  1247  0069  286D               	goto	l936
  1248  006A                     u70:
  1249  006A                     l934:
  1250                           
  1251                           ;./my_lib.h: 184:                 ADCON0bits.CHS = 0;
  1252  006A  30C3               	movlw	-61
  1253  006B  059F               	andwf	31,f	;volatile
  1254                           
  1255                           ;./my_lib.h: 185:             }
  1256  006C  290E               	goto	l986
  1257  006D                     l936:
  1258                           
  1259                           ;./my_lib.h: 187:                 ADCON0bits.CHS = 6;
  1260  006D  081F               	movf	31,w	;volatile
  1261  006E  39C3               	andlw	-61
  1262  006F  3818               	iorlw	24
  1263  0070  009F               	movwf	31	;volatile
  1264  0071  290E               	goto	l986
  1265  0072                     l938:
  1266                           
  1267                           ;./my_lib.h: 191:             if (cant == 7){
  1268  0072  3007               	movlw	7
  1269  0073  0676               	xorwf	chselect@cant,w
  1270  0074  1D03               	btfss	3,2
  1271  0075  2877               	goto	u81
  1272  0076  2878               	goto	u80
  1273  0077                     u81:
  1274  0077  287B               	goto	l942
  1275  0078                     u80:
  1276  0078                     l940:
  1277                           
  1278                           ;./my_lib.h: 192:                 ADCON0bits.CHS = 0;
  1279  0078  30C3               	movlw	-61
  1280  0079  059F               	andwf	31,f	;volatile
  1281                           
  1282                           ;./my_lib.h: 193:             }
  1283  007A  290E               	goto	l986
  1284  007B                     l942:
  1285                           
  1286                           ;./my_lib.h: 195:                 ADCON0bits.CHS = 7;
  1287  007B  081F               	movf	31,w	;volatile
  1288  007C  39C3               	andlw	-61
  1289  007D  381C               	iorlw	28
  1290  007E  009F               	movwf	31	;volatile
  1291  007F  290E               	goto	l986
  1292  0080                     l944:
  1293                           
  1294                           ;./my_lib.h: 199:             if (cant == 8){
  1295  0080  3008               	movlw	8
  1296  0081  0676               	xorwf	chselect@cant,w
  1297  0082  1D03               	btfss	3,2
  1298  0083  2885               	goto	u91
  1299  0084  2886               	goto	u90
  1300  0085                     u91:
  1301  0085  2889               	goto	l948
  1302  0086                     u90:
  1303  0086                     l946:
  1304                           
  1305                           ;./my_lib.h: 200:                 ADCON0bits.CHS = 0;
  1306  0086  30C3               	movlw	-61
  1307  0087  059F               	andwf	31,f	;volatile
  1308                           
  1309                           ;./my_lib.h: 201:             }
  1310  0088  290E               	goto	l986
  1311  0089                     l948:
  1312                           
  1313                           ;./my_lib.h: 203:                 ADCON0bits.CHS = 8;
  1314  0089  081F               	movf	31,w	;volatile
  1315  008A  39C3               	andlw	-61
  1316  008B  3820               	iorlw	32
  1317  008C  009F               	movwf	31	;volatile
  1318  008D  290E               	goto	l986
  1319  008E                     l950:
  1320                           
  1321                           ;./my_lib.h: 207:             if (cant == 9){
  1322  008E  3009               	movlw	9
  1323  008F  0676               	xorwf	chselect@cant,w
  1324  0090  1D03               	btfss	3,2
  1325  0091  2893               	goto	u101
  1326  0092  2894               	goto	u100
  1327  0093                     u101:
  1328  0093  2897               	goto	l954
  1329  0094                     u100:
  1330  0094                     l952:
  1331                           
  1332                           ;./my_lib.h: 208:                 ADCON0bits.CHS = 0;
  1333  0094  30C3               	movlw	-61
  1334  0095  059F               	andwf	31,f	;volatile
  1335                           
  1336                           ;./my_lib.h: 209:             }
  1337  0096  290E               	goto	l986
  1338  0097                     l954:
  1339                           
  1340                           ;./my_lib.h: 211:                 ADCON0bits.CHS = 9;
  1341  0097  081F               	movf	31,w	;volatile
  1342  0098  39C3               	andlw	-61
  1343  0099  3824               	iorlw	36
  1344  009A  009F               	movwf	31	;volatile
  1345  009B  290E               	goto	l986
  1346  009C                     l956:
  1347                           
  1348                           ;./my_lib.h: 215:             if (cant == 10){
  1349  009C  300A               	movlw	10
  1350  009D  0676               	xorwf	chselect@cant,w
  1351  009E  1D03               	btfss	3,2
  1352  009F  28A1               	goto	u111
  1353  00A0  28A2               	goto	u110
  1354  00A1                     u111:
  1355  00A1  28A5               	goto	l960
  1356  00A2                     u110:
  1357  00A2                     l958:
  1358                           
  1359                           ;./my_lib.h: 216:                 ADCON0bits.CHS = 0;
  1360  00A2  30C3               	movlw	-61
  1361  00A3  059F               	andwf	31,f	;volatile
  1362                           
  1363                           ;./my_lib.h: 217:             }
  1364  00A4  290E               	goto	l986
  1365  00A5                     l960:
  1366                           
  1367                           ;./my_lib.h: 219:                 ADCON0bits.CHS = 10;
  1368  00A5  081F               	movf	31,w	;volatile
  1369  00A6  39C3               	andlw	-61
  1370  00A7  3828               	iorlw	40
  1371  00A8  009F               	movwf	31	;volatile
  1372  00A9  290E               	goto	l986
  1373  00AA                     l962:
  1374                           
  1375                           ;./my_lib.h: 223:             if (cant == 11){
  1376  00AA  300B               	movlw	11
  1377  00AB  0676               	xorwf	chselect@cant,w
  1378  00AC  1D03               	btfss	3,2
  1379  00AD  28AF               	goto	u121
  1380  00AE  28B0               	goto	u120
  1381  00AF                     u121:
  1382  00AF  28B3               	goto	l966
  1383  00B0                     u120:
  1384  00B0                     l964:
  1385                           
  1386                           ;./my_lib.h: 224:                 ADCON0bits.CHS = 0;
  1387  00B0  30C3               	movlw	-61
  1388  00B1  059F               	andwf	31,f	;volatile
  1389                           
  1390                           ;./my_lib.h: 225:             }
  1391  00B2  290E               	goto	l986
  1392  00B3                     l966:
  1393                           
  1394                           ;./my_lib.h: 227:                 ADCON0bits.CHS = 11;
  1395  00B3  081F               	movf	31,w	;volatile
  1396  00B4  39C3               	andlw	-61
  1397  00B5  382C               	iorlw	44
  1398  00B6  009F               	movwf	31	;volatile
  1399  00B7  290E               	goto	l986
  1400  00B8                     l968:
  1401                           
  1402                           ;./my_lib.h: 231:             if (cant == 12){
  1403  00B8  300C               	movlw	12
  1404  00B9  0676               	xorwf	chselect@cant,w
  1405  00BA  1D03               	btfss	3,2
  1406  00BB  28BD               	goto	u131
  1407  00BC  28BE               	goto	u130
  1408  00BD                     u131:
  1409  00BD  28C1               	goto	l972
  1410  00BE                     u130:
  1411  00BE                     l970:
  1412                           
  1413                           ;./my_lib.h: 232:                 ADCON0bits.CHS = 0;
  1414  00BE  30C3               	movlw	-61
  1415  00BF  059F               	andwf	31,f	;volatile
  1416                           
  1417                           ;./my_lib.h: 233:             }
  1418  00C0  290E               	goto	l986
  1419  00C1                     l972:
  1420                           
  1421                           ;./my_lib.h: 235:                 ADCON0bits.CHS = 12;
  1422  00C1  081F               	movf	31,w	;volatile
  1423  00C2  39C3               	andlw	-61
  1424  00C3  3830               	iorlw	48
  1425  00C4  009F               	movwf	31	;volatile
  1426  00C5  290E               	goto	l986
  1427  00C6                     l974:
  1428                           
  1429                           ;./my_lib.h: 239:             if (cant == 13){
  1430  00C6  300D               	movlw	13
  1431  00C7  0676               	xorwf	chselect@cant,w
  1432  00C8  1D03               	btfss	3,2
  1433  00C9  28CB               	goto	u141
  1434  00CA  28CC               	goto	u140
  1435  00CB                     u141:
  1436  00CB  28CF               	goto	l978
  1437  00CC                     u140:
  1438  00CC                     l976:
  1439                           
  1440                           ;./my_lib.h: 240:                 ADCON0bits.CHS = 0;
  1441  00CC  30C3               	movlw	-61
  1442  00CD  059F               	andwf	31,f	;volatile
  1443                           
  1444                           ;./my_lib.h: 241:             }
  1445  00CE  290E               	goto	l986
  1446  00CF                     l978:
  1447                           
  1448                           ;./my_lib.h: 243:                 ADCON0bits.CHS = 13;
  1449  00CF  081F               	movf	31,w	;volatile
  1450  00D0  39C3               	andlw	-61
  1451  00D1  3834               	iorlw	52
  1452  00D2  009F               	movwf	31	;volatile
  1453  00D3  290E               	goto	l986
  1454  00D4                     l980:
  1455                           
  1456                           ;./my_lib.h: 247:                 ADCON0bits.CHS = 0;
  1457  00D4  30C3               	movlw	-61
  1458  00D5  059F               	andwf	31,f	;volatile
  1459                           
  1460                           ;./my_lib.h: 249:             break;
  1461  00D6  290E               	goto	l986
  1462  00D7                     l984:
  1463  00D7  0C1F               	rrf	31,w	;volatile
  1464  00D8  00F3               	movwf	??_chselect
  1465  00D9  0C73               	rrf	??_chselect,w
  1466  00DA  390F               	andlw	15
  1467  00DB  00F4               	movwf	??_chselect+1
  1468  00DC  01F5               	clrf	??_chselect+2
  1469                           
  1470                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1471                           ; Switch size 1, requested type "simple"
  1472                           ; Number of cases is 1, Range of values is 0 to 0
  1473                           ; switch strategies available:
  1474                           ; Name         Instructions Cycles
  1475                           ; simple_byte            4     3 (average)
  1476                           ; direct_byte           11     8 (fixed)
  1477                           ; jumptable            260     6 (fixed)
  1478                           ;	Chosen strategy is simple_byte
  1479  00DD  0875               	movf	??_chselect+2,w
  1480  00DE  3A00               	xorlw	0	; case 0
  1481  00DF  1903               	skipnz
  1482  00E0  28E2               	goto	l1326
  1483  00E1  290E               	goto	l986
  1484  00E2                     l1326:
  1485                           
  1486                           ; Switch size 1, requested type "simple"
  1487                           ; Number of cases is 14, Range of values is 0 to 13
  1488                           ; switch strategies available:
  1489                           ; Name         Instructions Cycles
  1490                           ; simple_byte           43    22 (average)
  1491                           ; direct_byte           50     8 (fixed)
  1492                           ; jumptable            260     6 (fixed)
  1493                           ;	Chosen strategy is simple_byte
  1494  00E2  0874               	movf	??_chselect+1,w
  1495  00E3  3A00               	xorlw	0	; case 0
  1496  00E4  1903               	skipnz
  1497  00E5  281F               	goto	l902
  1498  00E6  3A01               	xorlw	1	; case 1
  1499  00E7  1903               	skipnz
  1500  00E8  282C               	goto	l908
  1501  00E9  3A03               	xorlw	3	; case 2
  1502  00EA  1903               	skipnz
  1503  00EB  283A               	goto	l914
  1504  00EC  3A01               	xorlw	1	; case 3
  1505  00ED  1903               	skipnz
  1506  00EE  2848               	goto	l920
  1507  00EF  3A07               	xorlw	7	; case 4
  1508  00F0  1903               	skipnz
  1509  00F1  2856               	goto	l926
  1510  00F2  3A01               	xorlw	1	; case 5
  1511  00F3  1903               	skipnz
  1512  00F4  2864               	goto	l932
  1513  00F5  3A03               	xorlw	3	; case 6
  1514  00F6  1903               	skipnz
  1515  00F7  2872               	goto	l938
  1516  00F8  3A01               	xorlw	1	; case 7
  1517  00F9  1903               	skipnz
  1518  00FA  2880               	goto	l944
  1519  00FB  3A0F               	xorlw	15	; case 8
  1520  00FC  1903               	skipnz
  1521  00FD  288E               	goto	l950
  1522  00FE  3A01               	xorlw	1	; case 9
  1523  00FF  1903               	skipnz
  1524  0100  289C               	goto	l956
  1525  0101  3A03               	xorlw	3	; case 10
  1526  0102  1903               	skipnz
  1527  0103  28AA               	goto	l962
  1528  0104  3A01               	xorlw	1	; case 11
  1529  0105  1903               	skipnz
  1530  0106  28B8               	goto	l968
  1531  0107  3A07               	xorlw	7	; case 12
  1532  0108  1903               	skipnz
  1533  0109  28C6               	goto	l974
  1534  010A  3A01               	xorlw	1	; case 13
  1535  010B  1903               	skipnz
  1536  010C  28D4               	goto	l980
  1537  010D  290E               	goto	l986
  1538  010E                     l986:
  1539                           
  1540                           ;./my_lib.h: 253:     _delay((unsigned long)((150)*(8000000/4000000.0)));
  1541  010E  3063               	movlw	99
  1542  010F  00F3               	movwf	??_chselect
  1543  0110                     u307:
  1544  0110  0BF3               	decfsz	??_chselect,f
  1545  0111  2910               	goto	u307
  1546  0112  2913               	nop2
  1547  0113                     l988:
  1548                           
  1549                           ;./my_lib.h: 254:     ADCON0bits.GO = 1;
  1550  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1551  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1552  0115  149F               	bsf	31,1	;volatile
  1553  0116                     l141:
  1554  0116  0008               	return
  1555  0117                     __end_of_chselect:
  1556                           
  1557                           	psect	text6
  1558  0117                     __ptext6:	
  1559 ;; *************** function _isr *****************
  1560 ;; Defined at:
  1561 ;;		line 63 in file "MainL4Pot.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;		None
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;		None
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      void 
  1568 ;; Registers used:
  1569 ;;		wreg
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1575 ;;      Params:         0       0       0       0       0
  1576 ;;      Locals:         0       0       0       0       0
  1577 ;;      Temps:          3       0       0       0       0
  1578 ;;      Totals:         3       0       0       0       0
  1579 ;;Total ram usage:        3 bytes
  1580 ;; Hardware stack levels used: 1
  1581 ;; This function calls:
  1582 ;;		Nothing
  1583 ;; This function is called by:
  1584 ;;		Interrupt level 1
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           
  1589                           ;psect for function _isr
  1590  0117                     _isr:
  1591  0117                     i1l1086:
  1592                           
  1593                           ;MainL4Pot.c: 65: 
  1594  0117  1283               	bcf	3,5	;RP0=0, select bank0
  1595  0118  1303               	bcf	3,6	;RP1=0, select bank0
  1596  0119  1F0C               	btfss	12,6	;volatile
  1597  011A  291C               	goto	u17_21
  1598  011B  291D               	goto	u17_20
  1599  011C                     u17_21:
  1600  011C  2922               	goto	i1l1092
  1601  011D                     u17_20:
  1602  011D                     i1l1088:
  1603                           
  1604                           ;MainL4Pot.c: 66: 
  1605  011D  081E               	movf	30,w	;volatile
  1606  011E  00F0               	movwf	??_isr
  1607  011F  0870               	movf	??_isr,w
  1608  0120  00F9               	movwf	_varPot0
  1609  0121                     i1l1090:
  1610                           
  1611                           ;MainL4Pot.c: 67: 
  1612  0121  130C               	bcf	12,6	;volatile
  1613  0122                     i1l1092:
  1614                           
  1615                           ;MainL4Pot.c: 70:     chselect(1);
  1616  0122  1D8C               	btfss	12,3	;volatile
  1617  0123  2925               	goto	u18_21
  1618  0124  2926               	goto	u18_20
  1619  0125                     u18_21:
  1620  0125  297E               	goto	i1l196
  1621  0126                     u18_20:
  1622  0126                     i1l1094:
  1623                           
  1624                           ;MainL4Pot.c: 72:  }
  1625  0126  1214               	bcf	20,4	;volatile
  1626                           
  1627                           ;MainL4Pot.c: 74: 
  1628  0127  1B14               	btfsc	20,6	;volatile
  1629  0128  292A               	goto	u19_21
  1630  0129  292B               	goto	u19_20
  1631  012A                     u19_21:
  1632  012A  292F               	goto	i1l1098
  1633  012B                     u19_20:
  1634  012B                     i1l1096:
  1635  012B  1F94               	btfss	20,7	;volatile
  1636  012C  292E               	goto	u20_21
  1637  012D  292F               	goto	u20_20
  1638  012E                     u20_21:
  1639  012E  2936               	goto	i1l1106
  1640  012F                     u20_20:
  1641  012F                     i1l1098:
  1642                           
  1643                           ;MainL4Pot.c: 75: 
  1644  012F  0813               	movf	19,w	;volatile
  1645  0130  00F0               	movwf	??_isr
  1646  0131  0870               	movf	??_isr,w
  1647  0132  00F7               	movwf	_z
  1648  0133                     i1l1100:
  1649                           
  1650                           ;MainL4Pot.c: 76: 
  1651  0133  1314               	bcf	20,6	;volatile
  1652  0134                     i1l1102:
  1653                           
  1654                           ;MainL4Pot.c: 77: 
  1655  0134  1394               	bcf	20,7	;volatile
  1656  0135                     i1l1104:
  1657                           
  1658                           ;MainL4Pot.c: 78: void setup(void){
  1659  0135  1614               	bsf	20,4	;volatile
  1660  0136                     i1l1106:
  1661                           
  1662                           ;MainL4Pot.c: 81:   ANSELH = 0b00000000;
  1663  0136  1683               	bsf	3,5	;RP0=1, select bank1
  1664  0137  1303               	bcf	3,6	;RP1=0, select bank1
  1665  0138  1A94               	btfsc	20,5	;volatile
  1666  0139  293B               	goto	u21_21
  1667  013A  293C               	goto	u21_20
  1668  013B                     u21_21:
  1669  013B  295A               	goto	i1l187
  1670  013C                     u21_20:
  1671  013C                     i1l1108:
  1672  013C  1914               	btfsc	20,2	;volatile
  1673  013D  293F               	goto	u22_21
  1674  013E  2940               	goto	u22_20
  1675  013F                     u22_21:
  1676  013F  295A               	goto	i1l187
  1677  0140                     u22_20:
  1678  0140                     i1l1110:
  1679                           
  1680                           ;MainL4Pot.c: 83:   TRISA = 0b00000000;
  1681  0140  1283               	bcf	3,5	;RP0=0, select bank0
  1682  0141  1303               	bcf	3,6	;RP1=0, select bank0
  1683  0142  0813               	movf	19,w	;volatile
  1684  0143  00F0               	movwf	??_isr
  1685  0144  0870               	movf	??_isr,w
  1686  0145  00F7               	movwf	_z
  1687  0146                     i1l1112:
  1688                           
  1689                           ;MainL4Pot.c: 85:   TRISC = 0b00000000;
  1690  0146  118C               	bcf	12,3	;volatile
  1691  0147                     i1l1114:
  1692                           
  1693                           ;MainL4Pot.c: 86:   TRISD = 0x00;
  1694  0147  1614               	bsf	20,4	;volatile
  1695  0148                     i1l188:	
  1696                           ;MainL4Pot.c: 87:   TRISE = 0x00;
  1697                           
  1698  0148  1683               	bsf	3,5	;RP0=1, select bank1
  1699  0149  1303               	bcf	3,6	;RP1=0, select bank1
  1700  014A  1C14               	btfss	20,0	;volatile
  1701  014B  294D               	goto	u23_21
  1702  014C  294E               	goto	u23_20
  1703  014D                     u23_21:
  1704  014D  2948               	goto	i1l188
  1705  014E                     u23_20:
  1706  014E                     i1l1116:
  1707                           
  1708                           ;MainL4Pot.c: 88: 
  1709  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1710  014F  1303               	bcf	3,6	;RP1=0, select bank0
  1711  0150  0813               	movf	19,w	;volatile
  1712  0151  00F0               	movwf	??_isr
  1713  0152  0870               	movf	??_isr,w
  1714  0153  00FA               	movwf	_inI2C
  1715                           
  1716                           ;MainL4Pot.c: 89:   initAN(0b00000001, 0);
  1717  0154  30A6               	movlw	166
  1718  0155  00F0               	movwf	??_isr
  1719  0156                     u31_27:
  1720  0156  0BF0               	decfsz	??_isr,f
  1721  0157  2956               	goto	u31_27
  1722  0158  0000               	nop
  1723                           
  1724                           ;MainL4Pot.c: 91: 
  1725  0159  297B               	goto	i1l191
  1726  015A                     i1l187:	
  1727                           ;MainL4Pot.c: 92:   OPTION_REG = 0b11000100;
  1728                           
  1729  015A  1A94               	btfsc	20,5	;volatile
  1730  015B  295D               	goto	u24_21
  1731  015C  295E               	goto	u24_20
  1732  015D                     u24_21:
  1733  015D  297B               	goto	i1l191
  1734  015E                     u24_20:
  1735  015E                     i1l1118:
  1736  015E  1D14               	btfss	20,2	;volatile
  1737  015F  2961               	goto	u25_21
  1738  0160  2962               	goto	u25_20
  1739  0161                     u25_21:
  1740  0161  297B               	goto	i1l191
  1741  0162                     u25_20:
  1742  0162                     i1l1120:
  1743                           
  1744                           ;MainL4Pot.c: 93: 
  1745  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1746  0163  1303               	bcf	3,6	;RP1=0, select bank0
  1747  0164  0813               	movf	19,w	;volatile
  1748  0165  00F0               	movwf	??_isr
  1749  0166  0870               	movf	??_isr,w
  1750  0167  00F7               	movwf	_z
  1751  0168                     i1l1122:
  1752                           
  1753                           ;MainL4Pot.c: 94: 
  1754  0168  1683               	bsf	3,5	;RP0=1, select bank1
  1755  0169  1303               	bcf	3,6	;RP1=0, select bank1
  1756  016A  1014               	bcf	20,0	;volatile
  1757                           
  1758                           ;MainL4Pot.c: 95: 
  1759  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1760  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1761  016D  0808               	movf	8,w	;volatile
  1762  016E  0093               	movwf	19	;volatile
  1763  016F                     i1l1124:
  1764                           
  1765                           ;MainL4Pot.c: 96:   initOsc(8);
  1766  016F  1614               	bsf	20,4	;volatile
  1767                           
  1768                           ;MainL4Pot.c: 97:   I2C_Slave_Init(0x90);
  1769  0170  30A6               	movlw	166
  1770  0171  00F0               	movwf	??_isr
  1771  0172                     u32_27:
  1772  0172  0BF0               	decfsz	??_isr,f
  1773  0173  2972               	goto	u32_27
  1774  0174  0000               	nop
  1775  0175                     i1l193:	
  1776                           ;MainL4Pot.c: 98: 
  1777                           
  1778  0175  1683               	bsf	3,5	;RP0=1, select bank1
  1779  0176  1303               	bcf	3,6	;RP1=0, select bank1
  1780  0177  1814               	btfsc	20,0	;volatile
  1781  0178  297A               	goto	u26_21
  1782  0179  297B               	goto	u26_20
  1783  017A                     u26_21:
  1784  017A  2975               	goto	i1l193
  1785  017B                     u26_20:
  1786  017B                     i1l191:
  1787                           
  1788                           ;MainL4Pot.c: 101:   PORTC = 0x00;
  1789  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1790  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1791  017D  118C               	bcf	12,3	;volatile
  1792  017E                     i1l196:
  1793  017E  0872               	movf	??_isr+2,w
  1794  017F  008A               	movwf	10
  1795  0180  0E71               	swapf	??_isr+1,w
  1796  0181  0083               	movwf	3
  1797  0182  0EFE               	swapf	btemp,f
  1798  0183  0E7E               	swapf	btemp,w
  1799  0184  0009               	retfie
  1800  0185                     __end_of_isr:
  1801  007E                     btemp	set	126	;btemp
  1802  007E                     wtemp0	set	126
  1803                           
  1804                           	psect	intentry
  1805  0004                     __pintentry:	
  1806                           ;incstack = 0
  1807                           ; Regs used in _isr: [wreg]
  1808                           
  1809  0004                     interrupt_function:
  1810  007E                     saved_w	set	btemp
  1811  0004  00FE               	movwf	btemp
  1812  0005  0E03               	swapf	3,w
  1813  0006  00F1               	movwf	??_isr+1
  1814  0007  080A               	movf	10,w
  1815  0008  00F2               	movwf	??_isr+2
  1816  0009  120A  118A  2917   	ljmp	_isr
  1817                           
  1818                           	psect	config
  1819                           
  1820                           ;Config register CONFIG1 @ 0x2007
  1821                           ;	Oscillator Selection bits
  1822                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1823                           ;	Watchdog Timer Enable bit
  1824                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1825                           ;	Power-up Timer Enable bit
  1826                           ;	PWRTE = OFF, PWRT disabled
  1827                           ;	RE3/MCLR pin function select bit
  1828                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1829                           ;	Code Protection bit
  1830                           ;	CP = OFF, Program memory code protection is disabled
  1831                           ;	Data Code Protection bit
  1832                           ;	CPD = OFF, Data memory code protection is disabled
  1833                           ;	Brown Out Reset Selection bits
  1834                           ;	BOREN = OFF, BOR disabled
  1835                           ;	Internal External Switchover bit
  1836                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1837                           ;	Fail-Safe Clock Monitor Enabled bit
  1838                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1839                           ;	Low Voltage Programming Enable bit
  1840                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1841                           ;	In-Circuit Debugger Mode bit
  1842                           ;	DEBUG = 0x1, unprogrammed default
  1843  2007                     	org	8199
  1844  2007  20D4               	dw	8404
  1845                           
  1846                           ;Config register CONFIG2 @ 0x2008
  1847                           ;	Brown-out Reset Selection bit
  1848                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1849                           ;	Flash Program Memory Self Write Enable bits
  1850                           ;	WRT = OFF, Write protection off
  1851  2008                     	org	8200
  1852  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_chselect
    _setup->_initAN
    _setup->_initOsc

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     367
                           _chselect
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     172
                     _I2C_Slave_Init
                             _initAN
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _initAN                                               3     2      1     142
                                              3 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _chselect                                             4     4      0     195
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _chselect
   _setup
     _I2C_Slave_Init
     _initAN
     _initOsc

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Aug 09 14:38:00 2021

                      _z 0077              _SSPSTATbits 0094                       _BF 04A0  
                     l90 01B1                       l82 0187                       l91 01B7  
                     l83 01DF                       l92 01E0                       l84 018D  
                     l85 0193                       l86 0199                       l95 023A  
                     l87 019F                       l88 01A5                       l89 01AB  
                     u10 001E                       u11 001D                       u20 0024  
                     u21 0023                       u30 0032                       u31 0031  
                     u40 0040                       u41 003F                       u50 004E  
                     u51 004D                       u60 005C                       u61 005B  
                     u70 006A                       u71 0069                       u80 0078  
                     u81 0077                       u90 0086                       u91 0085  
                    l201 025A                      l141 0116                      l207 0214  
                    l262 0254                      l910 0032                      l902 001F  
                    l920 0048                      l912 0035                      l904 0024  
                    l930 005F                      l922 004E                      l914 003A  
                    l906 0027                      l940 0078                      l932 0064  
                    l924 0051                      l916 0040                      l908 002C  
                    l950 008E                      l942 007B                      l934 006A  
                    l926 0056                      l918 0043                      l854 0186  
                    l960 00A5                      l952 0094                      l944 0080  
                    l936 006D                      l928 005C                      l970 00BE  
                    l962 00AA                      l954 0097                      l946 0086  
                    l938 0072                      l890 024C                      l858 01BD  
                    l980 00D4                      l972 00C1                      l964 00B0  
                    l956 009C                      l948 0089                      l892 024D  
                    l884 023C                      l974 00C6                      l966 00B3  
                    l958 00A2                      l894 024E                      l886 024A  
                    l976 00CC                      l968 00B8                      l984 00D7  
                    l896 0251                      l888 024B                      l978 00CF  
                    l986 010E                      l898 0018                      _GIE 005F  
                    l988 0113                      u100 0094                      u101 0093  
                    u110 00A2                      u111 00A1                      u120 00B0  
                    u121 00AF                      u130 00BE                      u131 00BD  
                    u140 00CC                      u141 00CB                      u307 0110  
                    u297 0226                      _isr 0117                     l1220 0216  
                   l1230 0229                     l1222 021B                     l1232 022C  
                   l1224 021F                     l1240 01E1                     l1234 0237  
                   l1226 0220                     l1250 0202                     l1242 01EB  
                   l1236 0238                     l1228 0224                     l1324 01C5  
                   l1260 0209                     l1252 0205                     l1244 01F2  
                   l1326 00E2                     l1238 0239                     l1262 020D  
                   l1254 0206                     l1246 01F6                     l1270 0255  
                   l1264 020E                     l1256 0207                     l1248 01FC  
                   l1272 0260                     l1266 0211                     l1258 0208  
                   l1268 0212                     ?_isr 0070                     _IOCB 0096  
                   _PIE1 008C                     _PIE2 008D                     _PEIE 005E  
                   _PIR1 000C                     _PIR2 000D                     _WPUB 0095  
                   _main 0255                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l191 017B                    i1l193 0175                    i1l187 015A  
                  i1l188 0148                    i1l196 017E                    u20_20 012F  
                  u20_21 012E                    u21_20 013C                    u21_21 013B  
                  u22_20 0140                    u22_21 013F                    u23_20 014E  
                  u23_21 014D                    u31_27 0156                    u24_20 015E  
                  u24_21 015D                    u32_27 0172                    u25_20 0162  
                  u17_20 011D                    u25_21 0161                    u17_21 011C  
                  u26_20 017B                    u18_20 0126                    u26_21 017A  
                  u18_21 0125                    _SPBRG 0099                    u19_20 012B  
                  u19_21 012A                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _SSPIE 0463                    _TRISE 0089  
                  _SSPIF 0063                    _inI2C 007A          __end_of_initOsc 01E1  
                  _setup 01E1                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0268  
                 ??_main 0077                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   i1l1100 0133                   i1l1110 0140  
                 i1l1102 0134                   i1l1120 0162                   i1l1112 0146  
                 i1l1104 0135                   i1l1122 0168                   i1l1114 0147  
                 i1l1106 0136                   i1l1124 016F                   i1l1116 014E  
                 i1l1108 013C                   i1l1118 015E                   i1l1090 0121  
                 i1l1092 0122                   i1l1094 0126                   i1l1086 0117  
                 i1l1096 012B                   i1l1088 011D                   i1l1098 012F  
                 _INTCON 000B              initOsc@frec 0075                   _SPBRGH 009A  
                 _SSPADD 0093                   _TRISC3 043B                   _TRISC4 043C  
                 _SSPBUF 0013                   _SSPCON 0014         __end_of_chselect 0117  
                 _initAN 0215                ??_initOsc 0073                   saved_w 007E  
__end_of__initialization 0013           __pcstackCOMMON 0070  __size_of_I2C_Slave_Init 001A  
          __end_of_setup 0215                  ??_setup 0076    I2C_Slave_Init@address 0073  
             __pmaintext 0255               __pintentry 0004                  ?_initAN 0073  
              ?_chselect 0070                  _SSPCON2 0091                  _SSPSTAT 0094  
        __size_of_initAN 0026                  __ptext1 01E1                  __ptext2 0185  
                __ptext3 0215                  __ptext4 023B                  __ptext5 0017  
                __ptext6 0117                  _initOsc 0185             __size_of_isr 006E  
                _varPot0 0079                  _varPot1 0078               ??_chselect 0073  
   end_of_initialization 0013                _RCSTAbits 0018           _I2C_Slave_Init 023B  
              _TRISCbits 0087                _TXSTAbits 0098   __end_of_I2C_Slave_Init 0255  
            _BAUDCTLbits 0187           __end_of_initAN 023B               initAN@just 0073  
    start_initialization 000F              __end_of_isr 0185          ?_I2C_Slave_Init 0070  
               ??_initAN 0074              __pbssCOMMON 0077                ___latbits 0002  
      __size_of_chselect 0100                 ?_initOsc 0070           __size_of_setup 0034  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F                initAN@bin 0075  
       __size_of_initOsc 005C                 _chselect 0017         ??_I2C_Slave_Init 0073  
          __size_of_main 0013               _INTCONbits 000B             chselect@cant 0076  
               intlevel1 0000               _OSCCONbits 008F               _OPTION_REG 0081  
            _SSPCON2bits 0091               _SSPCONbits 0014  
