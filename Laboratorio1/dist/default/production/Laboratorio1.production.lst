

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jul 16 13:40:16 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215                           
   216                           	psect	idataBANK0
   217  03BC                     __pidataBANK0:
   218                           
   219                           ;initializer for _valor
   220  03BC  3404               	retlw	4
   221  000B                     _INTCON	set	11
   222  000D                     _PIR2	set	13
   223  000C                     _PIR1	set	12
   224  0009                     _PORTE	set	9
   225  0005                     _PORTA	set	5
   226  000E                     _TMR1L	set	14
   227  000F                     _TMR1H	set	15
   228  0010                     _T1CON	set	16
   229  0008                     _PORTD	set	8
   230  000C                     _PIR1bits	set	12
   231  0007                     _PORTC	set	7
   232  0006                     _PORTB	set	6
   233  000B                     _INTCONbits	set	11
   234  0001                     _TMR0	set	1
   235  001E                     _ADRESH	set	30
   236  001F                     _ADCON0bits	set	31
   237  0033                     _RB3	set	51
   238  0031                     _RB1	set	49
   239  0030                     _RB0	set	48
   240  0058                     _RBIF	set	88
   241  0060                     _TMR1IF	set	96
   242  0035                     _RB5	set	53
   243  0034                     _RB4	set	52
   244  005A                     _T0IF	set	90
   245  008D                     _PIE2	set	141
   246  008C                     _PIE1	set	140
   247  0081                     _OPTION_REG	set	129
   248  0096                     _IOCB	set	150
   249  0095                     _WPUB	set	149
   250  0089                     _TRISE	set	137
   251  0088                     _TRISD	set	136
   252  0087                     _TRISC	set	135
   253  0086                     _TRISB	set	134
   254  008C                     _PIE1bits	set	140
   255  009F                     _ADCON1bits	set	159
   256  0085                     _TRISA	set	133
   257  008F                     _OSCCONbits	set	143
   258  0189                     _ANSELH	set	393
   259  0188                     _ANSEL	set	392
   260                           
   261                           	psect	cinit
   262  0011                     start_initialization:	
   263                           ; #config settings
   264                           
   265  0011                     __initialization:
   266                           
   267                           ; Initialize objects allocated to BANK0
   268  0011  120A  118A  23BC  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   269  0016  00AD               	movwf	__pdataBANK0& (0+127)
   270                           
   271                           ; Clear objects allocated to BANK0
   272  0017  01A8               	clrf	__pbssBANK0& (0+127)
   273  0018  01A9               	clrf	(__pbssBANK0+1)& (0+127)
   274  0019  01AA               	clrf	(__pbssBANK0+2)& (0+127)
   275  001A  01AB               	clrf	(__pbssBANK0+3)& (0+127)
   276  001B  01AC               	clrf	(__pbssBANK0+4)& (0+127)
   277                           
   278                           ; Clear objects allocated to COMMON
   279  001C  01F9               	clrf	__pbssCOMMON& (0+127)
   280  001D  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   281  001E  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   282  001F  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   283  0020  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   284  0021                     end_of_initialization:	
   285                           ;End of C runtime variable initialization code
   286                           
   287  0021                     __end_of__initialization:
   288  0021  0183               	clrf	3
   289  0022  120A  118A  2B38   	ljmp	_main	;jump to C main() function
   290                           
   291                           	psect	bssCOMMON
   292  0079                     __pbssCOMMON:
   293  0079                     _disp1:
   294  0079                     	ds	1
   295  007A                     _disp0:
   296  007A                     	ds	1
   297  007B                     _multiplex:
   298  007B                     	ds	1
   299  007C                     _startfinal:
   300  007C                     	ds	1
   301  007D                     _flagint:
   302  007D                     	ds	1
   303                           
   304                           	psect	bssBANK0
   305  0028                     __pbssBANK0:
   306  0028                     _nibblehigh:
   307  0028                     	ds	1
   308  0029                     _nibblelow:
   309  0029                     	ds	1
   310  002A                     _contador:
   311  002A                     	ds	1
   312  002B                     _var:
   313  002B                     	ds	1
   314  002C                     _start:
   315  002C                     	ds	1
   316                           
   317                           	psect	dataBANK0
   318  002D                     __pdataBANK0:
   319  002D                     _valor:
   320  002D                     	ds	1
   321                           
   322                           	psect	cstackCOMMON
   323  0070                     __pcstackCOMMON:
   324  0070                     ?_setup:
   325  0070                     ?_hexconv:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ?_table:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_initOsc:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_readAN:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ??_readAN:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?_chselect:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?_isr:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_main:	
   347                           ; 1 bytes @ 0x0
   348                           
   349                           
   350                           ; 1 bytes @ 0x0
   351  0070                     	ds	2
   352  0072                     readAN@canal:
   353                           
   354                           ; 1 bytes @ 0x2
   355  0072                     	ds	1
   356  0073                     readAN@lec:
   357                           
   358                           ; 1 bytes @ 0x3
   359  0073                     	ds	1
   360  0074                     ??_isr:
   361                           
   362                           ; 1 bytes @ 0x4
   363  0074                     	ds	5
   364                           
   365                           	psect	cstackBANK0
   366  0020                     __pcstackBANK0:
   367  0020                     ??_hexconv:
   368  0020                     ??_table:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0020                     ??_initOsc:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0020                     ?_initAN:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0020                     ??_chselect:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0020                     initAN@just:	
   381                           ; 1 bytes @ 0x0
   382                           
   383                           
   384                           ; 1 bytes @ 0x0
   385  0020                     	ds	1
   386  0021                     ??_initAN:
   387  0021                     hexconv@num:	
   388                           ; 1 bytes @ 0x1
   389                           
   390                           
   391                           ; 1 bytes @ 0x1
   392  0021                     	ds	1
   393  0022                     initOsc@frec:
   394  0022                     initAN@bin:	
   395                           ; 1 bytes @ 0x2
   396                           
   397  0022                     table@val:	
   398                           ; 1 bytes @ 0x2
   399                           
   400                           
   401                           ; 1 bytes @ 0x2
   402  0022                     	ds	1
   403  0023                     ??_setup:
   404  0023                     chselect@cant:	
   405                           ; 1 bytes @ 0x3
   406                           
   407  0023                     table@tempo:	
   408                           ; 1 bytes @ 0x3
   409                           
   410                           
   411                           ; 1 bytes @ 0x3
   412  0023                     	ds	1
   413  0024                     ?_dispasign:
   414  0024                     dispasign@arg2:	
   415                           ; 1 bytes @ 0x4
   416                           
   417                           
   418                           ; 1 bytes @ 0x4
   419  0024                     	ds	1
   420  0025                     ??_dispasign:
   421                           
   422                           ; 1 bytes @ 0x5
   423  0025                     	ds	1
   424  0026                     dispasign@arg1:
   425                           
   426                           ; 1 bytes @ 0x6
   427  0026                     	ds	1
   428  0027                     ??_main:
   429                           
   430                           ; 1 bytes @ 0x7
   431  0027                     	ds	1
   432                           
   433                           	psect	maintext
   434  0338                     __pmaintext:	
   435 ;;
   436 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   437 ;;
   438 ;; *************** function _main *****************
   439 ;; Defined at:
   440 ;;		line 118 in file "MainL1.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   449 ;; Tracked objects:
   450 ;;		On entry : B00/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   454 ;;      Params:         0       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0
   456 ;;      Temps:          0       1       0       0       0
   457 ;;      Totals:         0       1       0       0       0
   458 ;;Total ram usage:        1 bytes
   459 ;; Hardware stack levels required when called: 4
   460 ;; This function calls:
   461 ;;		_chselect
   462 ;;		_dispasign
   463 ;;		_hexconv
   464 ;;		_setup
   465 ;; This function is called by:
   466 ;;		Startup code after reset
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           
   471                           ;psect for function _main
   472  0338                     _main:
   473  0338                     l1592:	
   474                           ;incstack = 0
   475                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   476                           
   477                           
   478                           ;MainL1.c: 119: 
   479  0338  120A  118A  22B7  120A  118A  	fcall	_setup
   480  033D                     l234:	
   481                           ;MainL1.c: 123:   PORTA = 0x00;
   482                           
   483                           
   484                           ;MainL1.c: 124:   PORTB = 0x00;
   485  033D  3001               	movlw	1
   486  033E  120A  118A  2025  120A  118A  	fcall	_chselect
   487  0343                     l1594:
   488                           
   489                           ;MainL1.c: 125:   PORTC = 0x00;
   490  0343  1283               	bcf	3,5	;RP0=0, select bank0
   491  0344  1303               	bcf	3,6	;RP1=0, select bank0
   492  0345  082B               	movf	_var,w
   493  0346  120A  118A  23AB  120A  118A  	fcall	_hexconv
   494  034B                     l1596:
   495                           
   496                           ;MainL1.c: 126:   PORTD = 0x00;
   497  034B  1283               	bcf	3,5	;RP0=0, select bank0
   498  034C  1303               	bcf	3,6	;RP1=0, select bank0
   499  034D  0829               	movf	_nibblelow,w
   500  034E  00A7               	movwf	??_main
   501  034F  0827               	movf	??_main,w
   502  0350  00A4               	movwf	dispasign@arg2
   503  0351  0828               	movf	_nibblehigh,w
   504  0352  120A  118A  2391  120A  118A  	fcall	_dispasign
   505  0357                     l1598:
   506                           
   507                           ;MainL1.c: 127:   PORTE = 0x00;
   508  0357  1283               	bcf	3,5	;RP0=0, select bank0
   509  0358  1303               	bcf	3,6	;RP1=0, select bank0
   510  0359  0808               	movf	8,w	;volatile
   511  035A  022B               	subwf	_var,w
   512  035B  1C03               	skipc
   513  035C  2B5E               	goto	u421
   514  035D  2B5F               	goto	u420
   515  035E                     u421:
   516  035E  2B61               	goto	l235
   517  035F                     u420:
   518  035F                     l1600:
   519                           
   520                           ;MainL1.c: 128: 
   521  035F  1586               	bsf	6,3	;volatile
   522                           
   523                           ;MainL1.c: 129: 
   524  0360  2B3D               	goto	l234
   525  0361                     l235:	
   526                           ;MainL1.c: 130: 
   527                           
   528                           
   529                           ;MainL1.c: 131:   PIE1 = 0b00000000;
   530  0361  1186               	bcf	6,3	;volatile
   531  0362  2B3D               	goto	l234
   532  0363  120A  118A  280E   	ljmp	start
   533  0366                     __end_of_main:
   534                           
   535                           	psect	text1
   536  02B7                     __ptext1:	
   537 ;; *************** function _setup *****************
   538 ;; Defined at:
   539 ;;		line 140 in file "MainL1.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   553 ;;      Params:         0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0
   555 ;;      Temps:          0       0       0       0       0
   556 ;;      Totals:         0       0       0       0       0
   557 ;;Total ram usage:        0 bytes
   558 ;; Hardware stack levels used: 1
   559 ;; Hardware stack levels required when called: 3
   560 ;; This function calls:
   561 ;;		_initAN
   562 ;;		_initOsc
   563 ;; This function is called by:
   564 ;;		_main
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568                           
   569                           ;psect for function _setup
   570  02B7                     _setup:
   571  02B7                     l1494:	
   572                           ;incstack = 0
   573                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   574                           
   575                           
   576                           ;MainL1.c: 142:     disp1 = table(arg2);
   577  02B7  1683               	bsf	3,5	;RP0=1, select bank3
   578  02B8  1703               	bsf	3,6	;RP1=1, select bank3
   579  02B9  0188               	clrf	8	;volatile
   580                           
   581                           ;MainL1.c: 143: 
   582  02BA  0189               	clrf	9	;volatile
   583  02BB                     l1496:
   584                           
   585                           ;MainL1.c: 145: }
   586  02BB  3001               	movlw	1
   587  02BC  1683               	bsf	3,5	;RP0=1, select bank1
   588  02BD  1303               	bcf	3,6	;RP1=0, select bank1
   589  02BE  0085               	movwf	5	;volatile
   590  02BF                     l1498:
   591                           
   592                           ;MainL1.c: 146: 
   593  02BF  3003               	movlw	3
   594  02C0  0086               	movwf	6	;volatile
   595                           
   596                           ;MainL1.c: 147: void hexconv(uint8_t num){
   597  02C1  0187               	clrf	7	;volatile
   598                           
   599                           ;MainL1.c: 148:     nibblelow = num & 0x0F;
   600  02C2  0188               	clrf	8	;volatile
   601                           
   602                           ;MainL1.c: 149:     nibblehigh = num & 0xF0;
   603  02C3  0189               	clrf	9	;volatile
   604  02C4                     l1500:
   605                           
   606                           ;MainL1.c: 151:     nibblehigh >>= 4;
   607  02C4  1283               	bcf	3,5	;RP0=0, select bank0
   608  02C5  1303               	bcf	3,6	;RP1=0, select bank0
   609  02C6  01A0               	clrf	initAN@just
   610  02C7  3001               	movlw	1
   611  02C8  120A  118A  2366  120A  118A  	fcall	_initAN
   612  02CD                     l1502:
   613                           
   614                           ;MainL1.c: 153: }
   615  02CD  3003               	movlw	3
   616  02CE  1683               	bsf	3,5	;RP0=1, select bank1
   617  02CF  1303               	bcf	3,6	;RP1=0, select bank1
   618  02D0  0095               	movwf	21	;volatile
   619  02D1                     l1504:
   620  02D1  3003               	movlw	3
   621  02D2  0096               	movwf	22	;volatile
   622  02D3                     l1506:
   623  02D3  3044               	movlw	68
   624  02D4  0081               	movwf	1	;volatile
   625  02D5                     l1508:
   626  02D5  3011               	movlw	17
   627  02D6  1283               	bcf	3,5	;RP0=0, select bank0
   628  02D7  1303               	bcf	3,6	;RP1=0, select bank0
   629  02D8  0090               	movwf	16	;volatile
   630  02D9                     l1510:
   631  02D9  100C               	bcf	12,0	;volatile
   632  02DA                     l1512:
   633  02DA  303C               	movlw	60
   634  02DB  008F               	movwf	15	;volatile
   635  02DC                     l1514:
   636  02DC  30B0               	movlw	176
   637  02DD  008E               	movwf	14	;volatile
   638  02DE                     l1516:
   639  02DE  3004               	movlw	4
   640  02DF  120A  118A  21F7  120A  118A  	fcall	_initOsc
   641  02E4                     l1518:
   642  02E4  1683               	bsf	3,5	;RP0=1, select bank1
   643  02E5  1303               	bcf	3,6	;RP1=0, select bank1
   644  02E6  140F               	bsf	15,0	;volatile
   645  02E7                     l1520:
   646  02E7  1283               	bcf	3,5	;RP0=0, select bank0
   647  02E8  1303               	bcf	3,6	;RP1=0, select bank0
   648  02E9  0185               	clrf	5	;volatile
   649  02EA                     l1522:
   650  02EA  0186               	clrf	6	;volatile
   651  02EB                     l1524:
   652  02EB  0187               	clrf	7	;volatile
   653  02EC                     l1526:
   654  02EC  0188               	clrf	8	;volatile
   655  02ED                     l1528:
   656  02ED  0189               	clrf	9	;volatile
   657  02EE                     l1530:
   658  02EE  1683               	bsf	3,5	;RP0=1, select bank1
   659  02EF  1303               	bcf	3,6	;RP1=0, select bank1
   660  02F0  018C               	clrf	12	;volatile
   661  02F1                     l1532:
   662  02F1  018D               	clrf	13	;volatile
   663  02F2                     l1534:
   664  02F2  1283               	bcf	3,5	;RP0=0, select bank0
   665  02F3  1303               	bcf	3,6	;RP1=0, select bank0
   666  02F4  018C               	clrf	12	;volatile
   667  02F5                     l1536:
   668  02F5  018D               	clrf	13	;volatile
   669  02F6                     l1538:
   670  02F6  30E8               	movlw	232
   671  02F7  008B               	movwf	11	;volatile
   672  02F8                     l242:
   673  02F8  0008               	return
   674  02F9                     __end_of_setup:
   675                           
   676                           	psect	text2
   677  01F7                     __ptext2:	
   678 ;; *************** function _initOsc *****************
   679 ;; Defined at:
   680 ;;		line 14 in file "./my_lib.h"
   681 ;; Parameters:    Size  Location     Type
   682 ;;  frec            1    wreg     unsigned char 
   683 ;; Auto vars:     Size  Location     Type
   684 ;;  frec            1    2[BANK0 ] unsigned char 
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   694 ;;      Params:         0       0       0       0       0
   695 ;;      Locals:         0       1       0       0       0
   696 ;;      Temps:          0       2       0       0       0
   697 ;;      Totals:         0       3       0       0       0
   698 ;;Total ram usage:        3 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; Hardware stack levels required when called: 2
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		_setup
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           
   709                           ;psect for function _initOsc
   710  01F7                     _initOsc:
   711                           
   712                           ;incstack = 0
   713                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   714                           ;initOsc@frec stored from wreg
   715  01F7  1283               	bcf	3,5	;RP0=0, select bank0
   716  01F8  1303               	bcf	3,6	;RP1=0, select bank0
   717  01F9  00A2               	movwf	initOsc@frec
   718  01FA                     l1276:
   719                           
   720                           ;./my_lib.h: 15:     OSCCONbits.SCS = 1;
   721  01FA  1683               	bsf	3,5	;RP0=1, select bank1
   722  01FB  1303               	bcf	3,6	;RP1=0, select bank1
   723  01FC  140F               	bsf	15,0	;volatile
   724                           
   725                           ;./my_lib.h: 16:         switch(frec){
   726  01FD  2A34               	goto	l1280
   727  01FE                     l92:	
   728                           ;./my_lib.h: 17:             case 8:
   729                           
   730                           
   731                           ;./my_lib.h: 18:                 OSCCONbits.IRCF0 = 1;
   732  01FE  1683               	bsf	3,5	;RP0=1, select bank1
   733  01FF  1303               	bcf	3,6	;RP1=0, select bank1
   734  0200  160F               	bsf	15,4	;volatile
   735                           
   736                           ;./my_lib.h: 19:                 OSCCONbits.IRCF1 = 1;
   737  0201  168F               	bsf	15,5	;volatile
   738                           
   739                           ;./my_lib.h: 20:                 OSCCONbits.IRCF2 = 1;
   740  0202  170F               	bsf	15,6	;volatile
   741                           
   742                           ;./my_lib.h: 21:                 break;
   743  0203  2A58               	goto	l102
   744  0204                     l94:	
   745                           ;./my_lib.h: 23:             case 4:
   746                           
   747                           
   748                           ;./my_lib.h: 24:                 OSCCONbits.IRCF0 = 0;
   749  0204  1683               	bsf	3,5	;RP0=1, select bank1
   750  0205  1303               	bcf	3,6	;RP1=0, select bank1
   751  0206  120F               	bcf	15,4	;volatile
   752                           
   753                           ;./my_lib.h: 25:                 OSCCONbits.IRCF1 = 1;
   754  0207  168F               	bsf	15,5	;volatile
   755                           
   756                           ;./my_lib.h: 26:                 OSCCONbits.IRCF2 = 1;
   757  0208  170F               	bsf	15,6	;volatile
   758                           
   759                           ;./my_lib.h: 27:                 break;
   760  0209  2A58               	goto	l102
   761  020A                     l95:	
   762                           ;./my_lib.h: 28:             case 2:
   763                           
   764                           
   765                           ;./my_lib.h: 29:                 OSCCONbits.IRCF0 = 1;
   766  020A  1683               	bsf	3,5	;RP0=1, select bank1
   767  020B  1303               	bcf	3,6	;RP1=0, select bank1
   768  020C  160F               	bsf	15,4	;volatile
   769                           
   770                           ;./my_lib.h: 30:                 OSCCONbits.IRCF1 = 0;
   771  020D  128F               	bcf	15,5	;volatile
   772                           
   773                           ;./my_lib.h: 31:                 OSCCONbits.IRCF2 = 1;
   774  020E  170F               	bsf	15,6	;volatile
   775                           
   776                           ;./my_lib.h: 32:                 break;
   777  020F  2A58               	goto	l102
   778  0210                     l96:	
   779                           ;./my_lib.h: 33:              case 1:
   780                           
   781                           
   782                           ;./my_lib.h: 34:                 OSCCONbits.IRCF0 = 0;
   783  0210  1683               	bsf	3,5	;RP0=1, select bank1
   784  0211  1303               	bcf	3,6	;RP1=0, select bank1
   785  0212  120F               	bcf	15,4	;volatile
   786                           
   787                           ;./my_lib.h: 35:                 OSCCONbits.IRCF1 = 0;
   788  0213  128F               	bcf	15,5	;volatile
   789                           
   790                           ;./my_lib.h: 36:                 OSCCONbits.IRCF2 = 1;
   791  0214  170F               	bsf	15,6	;volatile
   792                           
   793                           ;./my_lib.h: 37:                 break;
   794  0215  2A58               	goto	l102
   795  0216                     l97:	
   796                           ;./my_lib.h: 38:              case 50:
   797                           
   798                           
   799                           ;./my_lib.h: 39:                 OSCCONbits.IRCF0 = 0;
   800  0216  1683               	bsf	3,5	;RP0=1, select bank1
   801  0217  1303               	bcf	3,6	;RP1=0, select bank1
   802  0218  120F               	bcf	15,4	;volatile
   803                           
   804                           ;./my_lib.h: 40:                 OSCCONbits.IRCF1 = 1;
   805  0219  168F               	bsf	15,5	;volatile
   806                           
   807                           ;./my_lib.h: 41:                 OSCCONbits.IRCF2 = 1;
   808  021A  170F               	bsf	15,6	;volatile
   809                           
   810                           ;./my_lib.h: 42:                 break;
   811  021B  2A58               	goto	l102
   812  021C                     l98:	
   813                           ;./my_lib.h: 43:              case 25:
   814                           
   815                           
   816                           ;./my_lib.h: 44:                 OSCCONbits.IRCF0 = 0;
   817  021C  1683               	bsf	3,5	;RP0=1, select bank1
   818  021D  1303               	bcf	3,6	;RP1=0, select bank1
   819  021E  120F               	bcf	15,4	;volatile
   820                           
   821                           ;./my_lib.h: 45:                 OSCCONbits.IRCF1 = 1;
   822  021F  168F               	bsf	15,5	;volatile
   823                           
   824                           ;./my_lib.h: 46:                 OSCCONbits.IRCF2 = 0;
   825  0220  130F               	bcf	15,6	;volatile
   826                           
   827                           ;./my_lib.h: 47:                 break;
   828  0221  2A58               	goto	l102
   829  0222                     l99:	
   830                           ;./my_lib.h: 48:               case 12:
   831                           
   832                           
   833                           ;./my_lib.h: 49:                 OSCCONbits.IRCF0 = 1;
   834  0222  1683               	bsf	3,5	;RP0=1, select bank1
   835  0223  1303               	bcf	3,6	;RP1=0, select bank1
   836  0224  160F               	bsf	15,4	;volatile
   837                           
   838                           ;./my_lib.h: 50:                 OSCCONbits.IRCF1 = 0;
   839  0225  128F               	bcf	15,5	;volatile
   840                           
   841                           ;./my_lib.h: 51:                 OSCCONbits.IRCF2 = 0;
   842  0226  130F               	bcf	15,6	;volatile
   843                           
   844                           ;./my_lib.h: 52:                 break;
   845  0227  2A58               	goto	l102
   846  0228                     l100:	
   847                           ;./my_lib.h: 53:               case 31:
   848                           
   849                           
   850                           ;./my_lib.h: 54:                 OSCCONbits.IRCF0 = 0;
   851  0228  1683               	bsf	3,5	;RP0=1, select bank1
   852  0229  1303               	bcf	3,6	;RP1=0, select bank1
   853  022A  120F               	bcf	15,4	;volatile
   854                           
   855                           ;./my_lib.h: 55:                 OSCCONbits.IRCF1 = 1;
   856  022B  168F               	bsf	15,5	;volatile
   857                           
   858                           ;./my_lib.h: 56:                 OSCCONbits.IRCF2 = 1;
   859  022C  170F               	bsf	15,6	;volatile
   860                           
   861                           ;./my_lib.h: 57:                 break;
   862  022D  2A58               	goto	l102
   863  022E                     l101:	
   864                           ;./my_lib.h: 58:               default:
   865                           
   866                           
   867                           ;./my_lib.h: 59:                 OSCCONbits.IRCF0 = 0;
   868  022E  1683               	bsf	3,5	;RP0=1, select bank1
   869  022F  1303               	bcf	3,6	;RP1=0, select bank1
   870  0230  120F               	bcf	15,4	;volatile
   871                           
   872                           ;./my_lib.h: 60:                 OSCCONbits.IRCF1 = 1;
   873  0231  168F               	bsf	15,5	;volatile
   874                           
   875                           ;./my_lib.h: 61:                 OSCCONbits.IRCF2 = 1;
   876  0232  170F               	bsf	15,6	;volatile
   877                           
   878                           ;./my_lib.h: 62:                 break;
   879  0233  2A58               	goto	l102
   880  0234                     l1280:
   881  0234  1283               	bcf	3,5	;RP0=0, select bank0
   882  0235  1303               	bcf	3,6	;RP1=0, select bank0
   883  0236  0822               	movf	initOsc@frec,w
   884  0237  00A0               	movwf	??_initOsc
   885  0238  01A1               	clrf	??_initOsc+1
   886                           
   887                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   888                           ; Switch size 1, requested type "simple"
   889                           ; Number of cases is 1, Range of values is 0 to 0
   890                           ; switch strategies available:
   891                           ; Name         Instructions Cycles
   892                           ; simple_byte            4     3 (average)
   893                           ; direct_byte           11     8 (fixed)
   894                           ; jumptable            260     6 (fixed)
   895                           ;	Chosen strategy is simple_byte
   896  0239  0821               	movf	??_initOsc+1,w
   897  023A  3A00               	xorlw	0	; case 0
   898  023B  1903               	skipnz
   899  023C  2A3E               	goto	l1712
   900  023D  2A2E               	goto	l101
   901  023E                     l1712:
   902                           
   903                           ; Switch size 1, requested type "simple"
   904                           ; Number of cases is 8, Range of values is 1 to 50
   905                           ; switch strategies available:
   906                           ; Name         Instructions Cycles
   907                           ; simple_byte           25    13 (average)
   908                           ; direct_byte          161    11 (fixed)
   909                           ; jumptable            263     9 (fixed)
   910                           ;	Chosen strategy is simple_byte
   911  023E  0820               	movf	??_initOsc,w
   912  023F  3A01               	xorlw	1	; case 1
   913  0240  1903               	skipnz
   914  0241  2A10               	goto	l96
   915  0242  3A03               	xorlw	3	; case 2
   916  0243  1903               	skipnz
   917  0244  2A0A               	goto	l95
   918  0245  3A06               	xorlw	6	; case 4
   919  0246  1903               	skipnz
   920  0247  2A04               	goto	l94
   921  0248  3A0C               	xorlw	12	; case 8
   922  0249  1903               	skipnz
   923  024A  29FE               	goto	l92
   924  024B  3A04               	xorlw	4	; case 12
   925  024C  1903               	skipnz
   926  024D  2A22               	goto	l99
   927  024E  3A15               	xorlw	21	; case 25
   928  024F  1903               	skipnz
   929  0250  2A1C               	goto	l98
   930  0251  3A06               	xorlw	6	; case 31
   931  0252  1903               	skipnz
   932  0253  2A28               	goto	l100
   933  0254  3A2D               	xorlw	45	; case 50
   934  0255  1903               	skipnz
   935  0256  2A16               	goto	l97
   936  0257  2A2E               	goto	l101
   937  0258                     l102:
   938  0258  0008               	return
   939  0259                     __end_of_initOsc:
   940                           
   941                           	psect	text3
   942  0366                     __ptext3:	
   943 ;; *************** function _initAN *****************
   944 ;; Defined at:
   945 ;;		line 67 in file "./my_lib.h"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  bin             1    wreg     unsigned char 
   948 ;;  just            1    0[BANK0 ] unsigned char 
   949 ;; Auto vars:     Size  Location     Type
   950 ;;  bin             1    2[BANK0 ] unsigned char 
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, status,2, status,0
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   960 ;;      Params:         0       1       0       0       0
   961 ;;      Locals:         0       1       0       0       0
   962 ;;      Temps:          0       1       0       0       0
   963 ;;      Totals:         0       3       0       0       0
   964 ;;Total ram usage:        3 bytes
   965 ;; Hardware stack levels used: 1
   966 ;; Hardware stack levels required when called: 2
   967 ;; This function calls:
   968 ;;		Nothing
   969 ;; This function is called by:
   970 ;;		_setup
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           
   975                           ;psect for function _initAN
   976  0366                     _initAN:
   977                           
   978                           ;incstack = 0
   979                           ; Regs used in _initAN: [wreg+status,2+status,0]
   980                           ;initAN@bin stored from wreg
   981  0366  1283               	bcf	3,5	;RP0=0, select bank0
   982  0367  1303               	bcf	3,6	;RP1=0, select bank0
   983  0368  00A2               	movwf	initAN@bin
   984  0369                     l1286:
   985                           
   986                           ;./my_lib.h: 69:      ANSEL = bin;
   987  0369  0822               	movf	initAN@bin,w
   988  036A  1683               	bsf	3,5	;RP0=1, select bank3
   989  036B  1703               	bsf	3,6	;RP1=1, select bank3
   990  036C  0088               	movwf	8	;volatile
   991  036D                     l1288:
   992                           
   993                           ;./my_lib.h: 70:      ANSELH = 0b00000000;
   994  036D  0189               	clrf	9	;volatile
   995  036E                     l1290:
   996                           
   997                           ;./my_lib.h: 71:      TRISA = bin;
   998  036E  1283               	bcf	3,5	;RP0=0, select bank0
   999  036F  1303               	bcf	3,6	;RP1=0, select bank0
  1000  0370  0822               	movf	initAN@bin,w
  1001  0371  1683               	bsf	3,5	;RP0=1, select bank1
  1002  0372  1303               	bcf	3,6	;RP1=0, select bank1
  1003  0373  0085               	movwf	5	;volatile
  1004  0374                     l1292:
  1005                           
  1006                           ;./my_lib.h: 73:      ADCON0bits.CHS= 0;
  1007  0374  30C3               	movlw	-61
  1008  0375  1283               	bcf	3,5	;RP0=0, select bank0
  1009  0376  1303               	bcf	3,6	;RP1=0, select bank0
  1010  0377  059F               	andwf	31,f	;volatile
  1011  0378                     l1294:
  1012                           
  1013                           ;./my_lib.h: 74:      _delay((unsigned long)((100)*(4000000/4000000.0)));
  1014  0378  3020               	movlw	32
  1015  0379  1283               	bcf	3,5	;RP0=0, select bank0
  1016  037A  1303               	bcf	3,6	;RP1=0, select bank0
  1017  037B  00A1               	movwf	??_initAN
  1018  037C                     u437:
  1019  037C  0BA1               	decfsz	??_initAN,f
  1020  037D  2B7C               	goto	u437
  1021  037E  0000               	nop
  1022  037F                     l1296:
  1023                           
  1024                           ;./my_lib.h: 76:      ADCON0bits.ADON = 1;
  1025  037F  1283               	bcf	3,5	;RP0=0, select bank0
  1026  0380  1303               	bcf	3,6	;RP1=0, select bank0
  1027  0381  141F               	bsf	31,0	;volatile
  1028  0382                     l1298:
  1029                           
  1030                           ;./my_lib.h: 77:      ADCON0bits.ADCS = 1;
  1031  0382  081F               	movf	31,w	;volatile
  1032  0383  393F               	andlw	-193
  1033  0384  3840               	iorlw	64
  1034  0385  009F               	movwf	31	;volatile
  1035  0386                     l1300:
  1036                           
  1037                           ;./my_lib.h: 81:      ADCON1bits.ADFM = just;
  1038  0386  0C20               	rrf	initAN@just,w
  1039  0387  1683               	bsf	3,5	;RP0=1, select bank1
  1040  0388  1303               	bcf	3,6	;RP1=0, select bank1
  1041  0389  1C03               	skipc
  1042  038A  139F               	bcf	31,7	;volatile
  1043  038B  1803               	skipnc
  1044  038C  179F               	bsf	31,7	;volatile
  1045  038D                     l1302:
  1046                           
  1047                           ;./my_lib.h: 82:      ADCON1bits.VCFG0 = 0;
  1048  038D  121F               	bcf	31,4	;volatile
  1049  038E                     l1304:
  1050                           
  1051                           ;./my_lib.h: 83:      ADCON1bits.VCFG1 = 0;
  1052  038E  129F               	bcf	31,5	;volatile
  1053  038F                     l1306:
  1054                           
  1055                           ;./my_lib.h: 85:      PIE1bits.ADIE= 1;
  1056  038F  170C               	bsf	12,6	;volatile
  1057  0390                     l105:
  1058  0390  0008               	return
  1059  0391                     __end_of_initAN:
  1060                           
  1061                           	psect	text4
  1062  03AB                     __ptext4:	
  1063 ;; *************** function _hexconv *****************
  1064 ;; Defined at:
  1065 ;;		line 190 in file "MainL1.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;  num             1    wreg     unsigned char 
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;  num             1    1[BANK0 ] unsigned char 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		wreg, status,2
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1079 ;;      Params:         0       0       0       0       0
  1080 ;;      Locals:         0       1       0       0       0
  1081 ;;      Temps:          0       1       0       0       0
  1082 ;;      Totals:         0       2       0       0       0
  1083 ;;Total ram usage:        2 bytes
  1084 ;; Hardware stack levels used: 1
  1085 ;; Hardware stack levels required when called: 2
  1086 ;; This function calls:
  1087 ;;		Nothing
  1088 ;; This function is called by:
  1089 ;;		_main
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           
  1094                           ;psect for function _hexconv
  1095  03AB                     _hexconv:
  1096                           
  1097                           ;incstack = 0
  1098                           ; Regs used in _hexconv: [wreg+status,2]
  1099                           ;hexconv@num stored from wreg
  1100  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  1101  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  1102  03AD  00A1               	movwf	hexconv@num
  1103  03AE                     l1540:
  1104  03AE  0821               	movf	hexconv@num,w
  1105  03AF  390F               	andlw	15
  1106  03B0  00A0               	movwf	??_hexconv
  1107  03B1  0820               	movf	??_hexconv,w
  1108  03B2  00A9               	movwf	_nibblelow
  1109  03B3  0821               	movf	hexconv@num,w
  1110  03B4  39F0               	andlw	240
  1111  03B5  00A0               	movwf	??_hexconv
  1112  03B6  0820               	movf	??_hexconv,w
  1113  03B7  00A8               	movwf	_nibblehigh
  1114  03B8                     l1542:
  1115  03B8  0EA8               	swapf	_nibblehigh,f
  1116  03B9  300F               	movlw	15
  1117  03BA  05A8               	andwf	_nibblehigh,f
  1118  03BB                     l248:
  1119  03BB  0008               	return
  1120  03BC                     __end_of_hexconv:
  1121                           
  1122                           	psect	text5
  1123  0391                     __ptext5:	
  1124 ;; *************** function _dispasign *****************
  1125 ;; Defined at:
  1126 ;;		line 183 in file "MainL1.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  arg1            1    wreg     unsigned char 
  1129 ;;  arg2            1    4[BANK0 ] unsigned char 
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;  arg1            1    6[BANK0 ] unsigned char 
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1141 ;;      Params:         0       1       0       0       0
  1142 ;;      Locals:         0       1       0       0       0
  1143 ;;      Temps:          0       1       0       0       0
  1144 ;;      Totals:         0       3       0       0       0
  1145 ;;Total ram usage:        3 bytes
  1146 ;; Hardware stack levels used: 1
  1147 ;; Hardware stack levels required when called: 3
  1148 ;; This function calls:
  1149 ;;		_table
  1150 ;; This function is called by:
  1151 ;;		_main
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155                           
  1156                           ;psect for function _dispasign
  1157  0391                     _dispasign:
  1158                           
  1159                           ;incstack = 0
  1160                           ; Regs used in _dispasign: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1161                           ;dispasign@arg1 stored from wreg
  1162  0391  1283               	bcf	3,5	;RP0=0, select bank0
  1163  0392  1303               	bcf	3,6	;RP1=0, select bank0
  1164  0393  00A6               	movwf	dispasign@arg1
  1165  0394                     l1544:
  1166  0394  0826               	movf	dispasign@arg1,w
  1167  0395  120A  118A  2167  120A  118A  	fcall	_table
  1168  039A  1283               	bcf	3,5	;RP0=0, select bank0
  1169  039B  1303               	bcf	3,6	;RP1=0, select bank0
  1170  039C  00A5               	movwf	??_dispasign
  1171  039D  0825               	movf	??_dispasign,w
  1172  039E  00FA               	movwf	_disp0
  1173  039F  0824               	movf	dispasign@arg2,w
  1174  03A0  120A  118A  2167  120A  118A  	fcall	_table
  1175  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1176  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  1177  03A7  00A5               	movwf	??_dispasign
  1178  03A8  0825               	movf	??_dispasign,w
  1179  03A9  00F9               	movwf	_disp1
  1180  03AA                     l245:
  1181  03AA  0008               	return
  1182  03AB                     __end_of_dispasign:
  1183                           
  1184                           	psect	text6
  1185  0167                     __ptext6:	
  1186 ;; *************** function _table *****************
  1187 ;; Defined at:
  1188 ;;		line 259 in file "./my_lib.h"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;  val             1    wreg     unsigned char 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  val             1    2[BANK0 ] unsigned char 
  1193 ;;  tempo           1    3[BANK0 ] unsigned char 
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      unsigned char 
  1196 ;; Registers used:
  1197 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1203 ;;      Params:         0       0       0       0       0
  1204 ;;      Locals:         0       2       0       0       0
  1205 ;;      Temps:          0       2       0       0       0
  1206 ;;      Totals:         0       4       0       0       0
  1207 ;;Total ram usage:        4 bytes
  1208 ;; Hardware stack levels used: 1
  1209 ;; Hardware stack levels required when called: 2
  1210 ;; This function calls:
  1211 ;;		Nothing
  1212 ;; This function is called by:
  1213 ;;		_dispasign
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           
  1218                           ;psect for function _table
  1219  0167                     _table:
  1220                           
  1221                           ;incstack = 0
  1222                           ; Regs used in _table: [wreg-fsr0h+status,2+status,0]
  1223                           ;table@val stored from wreg
  1224  0167  1283               	bcf	3,5	;RP0=0, select bank0
  1225  0168  1303               	bcf	3,6	;RP1=0, select bank0
  1226  0169  00A2               	movwf	table@val
  1227  016A                     l1308:
  1228                           
  1229                           ;./my_lib.h: 260:     uint8_t tempo;;./my_lib.h: 262:     switch(val){
  1230  016A  29BB               	goto	l1344
  1231  016B                     l1310:
  1232                           
  1233                           ;./my_lib.h: 264:             tempo = 0b00111111;
  1234  016B  303F               	movlw	63
  1235  016C  00A0               	movwf	??_table
  1236  016D  0820               	movf	??_table,w
  1237  016E  00A3               	movwf	table@tempo
  1238                           
  1239                           ;./my_lib.h: 265:             break;
  1240  016F  29F5               	goto	l1346
  1241  0170                     l1312:
  1242                           
  1243                           ;./my_lib.h: 267:             tempo = 0b00000110;
  1244  0170  3006               	movlw	6
  1245  0171  00A0               	movwf	??_table
  1246  0172  0820               	movf	??_table,w
  1247  0173  00A3               	movwf	table@tempo
  1248                           
  1249                           ;./my_lib.h: 268:             break;
  1250  0174  29F5               	goto	l1346
  1251  0175                     l1314:
  1252                           
  1253                           ;./my_lib.h: 270:             tempo = 0b01011011;
  1254  0175  305B               	movlw	91
  1255  0176  00A0               	movwf	??_table
  1256  0177  0820               	movf	??_table,w
  1257  0178  00A3               	movwf	table@tempo
  1258                           
  1259                           ;./my_lib.h: 271:             break;
  1260  0179  29F5               	goto	l1346
  1261  017A                     l1316:
  1262                           
  1263                           ;./my_lib.h: 273:             tempo = 0b01001111;
  1264  017A  304F               	movlw	79
  1265  017B  00A0               	movwf	??_table
  1266  017C  0820               	movf	??_table,w
  1267  017D  00A3               	movwf	table@tempo
  1268                           
  1269                           ;./my_lib.h: 274:             break;
  1270  017E  29F5               	goto	l1346
  1271  017F                     l1318:
  1272                           
  1273                           ;./my_lib.h: 276:             tempo = 0b01100110;
  1274  017F  3066               	movlw	102
  1275  0180  00A0               	movwf	??_table
  1276  0181  0820               	movf	??_table,w
  1277  0182  00A3               	movwf	table@tempo
  1278                           
  1279                           ;./my_lib.h: 277:             break;
  1280  0183  29F5               	goto	l1346
  1281  0184                     l1320:
  1282                           
  1283                           ;./my_lib.h: 279:             tempo = 0b01101101;
  1284  0184  306D               	movlw	109
  1285  0185  00A0               	movwf	??_table
  1286  0186  0820               	movf	??_table,w
  1287  0187  00A3               	movwf	table@tempo
  1288                           
  1289                           ;./my_lib.h: 280:             break;
  1290  0188  29F5               	goto	l1346
  1291  0189                     l1322:
  1292                           
  1293                           ;./my_lib.h: 282:             tempo = 0b01111101;
  1294  0189  307D               	movlw	125
  1295  018A  00A0               	movwf	??_table
  1296  018B  0820               	movf	??_table,w
  1297  018C  00A3               	movwf	table@tempo
  1298                           
  1299                           ;./my_lib.h: 283:             break;
  1300  018D  29F5               	goto	l1346
  1301  018E                     l1324:
  1302                           
  1303                           ;./my_lib.h: 285:             tempo = 0b00000111;
  1304  018E  3007               	movlw	7
  1305  018F  00A0               	movwf	??_table
  1306  0190  0820               	movf	??_table,w
  1307  0191  00A3               	movwf	table@tempo
  1308                           
  1309                           ;./my_lib.h: 286:             break;
  1310  0192  29F5               	goto	l1346
  1311  0193                     l1326:
  1312                           
  1313                           ;./my_lib.h: 288:             tempo = 0b01111111;
  1314  0193  307F               	movlw	127
  1315  0194  00A0               	movwf	??_table
  1316  0195  0820               	movf	??_table,w
  1317  0196  00A3               	movwf	table@tempo
  1318                           
  1319                           ;./my_lib.h: 289:             break;
  1320  0197  29F5               	goto	l1346
  1321  0198                     l1328:
  1322                           
  1323                           ;./my_lib.h: 291:             tempo = 0b01100111;
  1324  0198  3067               	movlw	103
  1325  0199  00A0               	movwf	??_table
  1326  019A  0820               	movf	??_table,w
  1327  019B  00A3               	movwf	table@tempo
  1328                           
  1329                           ;./my_lib.h: 292:             break;
  1330  019C  29F5               	goto	l1346
  1331  019D                     l1330:
  1332                           
  1333                           ;./my_lib.h: 294:             tempo = 0b01110111;
  1334  019D  3077               	movlw	119
  1335  019E  00A0               	movwf	??_table
  1336  019F  0820               	movf	??_table,w
  1337  01A0  00A3               	movwf	table@tempo
  1338                           
  1339                           ;./my_lib.h: 295:             break;
  1340  01A1  29F5               	goto	l1346
  1341  01A2                     l1332:
  1342                           
  1343                           ;./my_lib.h: 297:             tempo = 0b01111100;
  1344  01A2  307C               	movlw	124
  1345  01A3  00A0               	movwf	??_table
  1346  01A4  0820               	movf	??_table,w
  1347  01A5  00A3               	movwf	table@tempo
  1348                           
  1349                           ;./my_lib.h: 298:             break;
  1350  01A6  29F5               	goto	l1346
  1351  01A7                     l1334:
  1352                           
  1353                           ;./my_lib.h: 300:             tempo = 0b00111001;
  1354  01A7  3039               	movlw	57
  1355  01A8  00A0               	movwf	??_table
  1356  01A9  0820               	movf	??_table,w
  1357  01AA  00A3               	movwf	table@tempo
  1358                           
  1359                           ;./my_lib.h: 301:             break;
  1360  01AB  29F5               	goto	l1346
  1361  01AC                     l1336:
  1362                           
  1363                           ;./my_lib.h: 303:             tempo = 0b01011110;
  1364  01AC  305E               	movlw	94
  1365  01AD  00A0               	movwf	??_table
  1366  01AE  0820               	movf	??_table,w
  1367  01AF  00A3               	movwf	table@tempo
  1368                           
  1369                           ;./my_lib.h: 304:             break;
  1370  01B0  29F5               	goto	l1346
  1371  01B1                     l1338:
  1372                           
  1373                           ;./my_lib.h: 306:             tempo = 0b01111001;
  1374  01B1  3079               	movlw	121
  1375  01B2  00A0               	movwf	??_table
  1376  01B3  0820               	movf	??_table,w
  1377  01B4  00A3               	movwf	table@tempo
  1378                           
  1379                           ;./my_lib.h: 307:             break;
  1380  01B5  29F5               	goto	l1346
  1381  01B6                     l1340:
  1382                           
  1383                           ;./my_lib.h: 309:             tempo = 0b01110001;
  1384  01B6  3071               	movlw	113
  1385  01B7  00A0               	movwf	??_table
  1386  01B8  0820               	movf	??_table,w
  1387  01B9  00A3               	movwf	table@tempo
  1388                           
  1389                           ;./my_lib.h: 310:             break;
  1390  01BA  29F5               	goto	l1346
  1391  01BB                     l1344:
  1392  01BB  0822               	movf	table@val,w
  1393  01BC  00A0               	movwf	??_table
  1394  01BD  01A1               	clrf	??_table+1
  1395                           
  1396                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1397                           ; Switch size 1, requested type "simple"
  1398                           ; Number of cases is 1, Range of values is 0 to 0
  1399                           ; switch strategies available:
  1400                           ; Name         Instructions Cycles
  1401                           ; simple_byte            4     3 (average)
  1402                           ; direct_byte           11     8 (fixed)
  1403                           ; jumptable            260     6 (fixed)
  1404                           ;	Chosen strategy is simple_byte
  1405  01BE  0821               	movf	??_table+1,w
  1406  01BF  3A00               	xorlw	0	; case 0
  1407  01C0  1903               	skipnz
  1408  01C1  29C3               	goto	l1714
  1409  01C2  296B               	goto	l1310
  1410  01C3                     l1714:
  1411                           
  1412                           ; Switch size 1, requested type "simple"
  1413                           ; Number of cases is 16, Range of values is 0 to 15
  1414                           ; switch strategies available:
  1415                           ; Name         Instructions Cycles
  1416                           ; simple_byte           49    25 (average)
  1417                           ; direct_byte           56     8 (fixed)
  1418                           ; jumptable            260     6 (fixed)
  1419                           ;	Chosen strategy is simple_byte
  1420  01C3  0820               	movf	??_table,w
  1421  01C4  3A00               	xorlw	0	; case 0
  1422  01C5  1903               	skipnz
  1423  01C6  296B               	goto	l1310
  1424  01C7  3A01               	xorlw	1	; case 1
  1425  01C8  1903               	skipnz
  1426  01C9  2970               	goto	l1312
  1427  01CA  3A03               	xorlw	3	; case 2
  1428  01CB  1903               	skipnz
  1429  01CC  2975               	goto	l1314
  1430  01CD  3A01               	xorlw	1	; case 3
  1431  01CE  1903               	skipnz
  1432  01CF  297A               	goto	l1316
  1433  01D0  3A07               	xorlw	7	; case 4
  1434  01D1  1903               	skipnz
  1435  01D2  297F               	goto	l1318
  1436  01D3  3A01               	xorlw	1	; case 5
  1437  01D4  1903               	skipnz
  1438  01D5  2984               	goto	l1320
  1439  01D6  3A03               	xorlw	3	; case 6
  1440  01D7  1903               	skipnz
  1441  01D8  2989               	goto	l1322
  1442  01D9  3A01               	xorlw	1	; case 7
  1443  01DA  1903               	skipnz
  1444  01DB  298E               	goto	l1324
  1445  01DC  3A0F               	xorlw	15	; case 8
  1446  01DD  1903               	skipnz
  1447  01DE  2993               	goto	l1326
  1448  01DF  3A01               	xorlw	1	; case 9
  1449  01E0  1903               	skipnz
  1450  01E1  2998               	goto	l1328
  1451  01E2  3A03               	xorlw	3	; case 10
  1452  01E3  1903               	skipnz
  1453  01E4  299D               	goto	l1330
  1454  01E5  3A01               	xorlw	1	; case 11
  1455  01E6  1903               	skipnz
  1456  01E7  29A2               	goto	l1332
  1457  01E8  3A07               	xorlw	7	; case 12
  1458  01E9  1903               	skipnz
  1459  01EA  29A7               	goto	l1334
  1460  01EB  3A01               	xorlw	1	; case 13
  1461  01EC  1903               	skipnz
  1462  01ED  29AC               	goto	l1336
  1463  01EE  3A03               	xorlw	3	; case 14
  1464  01EF  1903               	skipnz
  1465  01F0  29B1               	goto	l1338
  1466  01F1  3A01               	xorlw	1	; case 15
  1467  01F2  1903               	skipnz
  1468  01F3  29B6               	goto	l1340
  1469  01F4  296B               	goto	l1310
  1470  01F5                     l1346:
  1471                           
  1472                           ;./my_lib.h: 315:         return(tempo);
  1473  01F5  0823               	movf	table@tempo,w
  1474  01F6                     l192:
  1475  01F6  0008               	return
  1476  01F7                     __end_of_table:
  1477                           
  1478                           	psect	text7
  1479  0025                     __ptext7:	
  1480 ;; *************** function _chselect *****************
  1481 ;; Defined at:
  1482 ;;		line 138 in file "./my_lib.h"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;  cant            1    wreg     unsigned char 
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;  cant            1    3[BANK0 ] unsigned char 
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1496 ;;      Params:         0       0       0       0       0
  1497 ;;      Locals:         0       1       0       0       0
  1498 ;;      Temps:          0       3       0       0       0
  1499 ;;      Totals:         0       4       0       0       0
  1500 ;;Total ram usage:        4 bytes
  1501 ;; Hardware stack levels used: 1
  1502 ;; Hardware stack levels required when called: 2
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           
  1511                           ;psect for function _chselect
  1512  0025                     _chselect:
  1513                           
  1514                           ;incstack = 0
  1515                           ; Regs used in _chselect: [wreg-fsr0h+status,2+status,0]
  1516                           ;chselect@cant stored from wreg
  1517  0025  1283               	bcf	3,5	;RP0=0, select bank0
  1518  0026  1303               	bcf	3,6	;RP1=0, select bank0
  1519  0027  00A3               	movwf	chselect@cant
  1520  0028                     l1398:
  1521                           
  1522                           ;./my_lib.h: 139:     if(ADCON0bits.GO == 0){
  1523  0028  189F               	btfsc	31,1	;volatile
  1524  0029  282B               	goto	u221
  1525  002A  282C               	goto	u220
  1526  002B                     u221:
  1527  002B  295D               	goto	l1486
  1528  002C                     u220:
  1529  002C  2926               	goto	l1484
  1530  002D                     l1402:
  1531                           
  1532                           ;./my_lib.h: 143:             if (cant == 1){
  1533  002D  0323               	decf	chselect@cant,w
  1534  002E  1D03               	btfss	3,2
  1535  002F  2831               	goto	u231
  1536  0030  2832               	goto	u230
  1537  0031                     u231:
  1538  0031  2835               	goto	l1406
  1539  0032                     u230:
  1540  0032                     l1404:
  1541                           
  1542                           ;./my_lib.h: 144:                 ADCON0bits.CHS = 0;
  1543  0032  30C3               	movlw	-61
  1544  0033  059F               	andwf	31,f	;volatile
  1545                           
  1546                           ;./my_lib.h: 145:             }
  1547  0034  295D               	goto	l1486
  1548  0035                     l1406:
  1549                           
  1550                           ;./my_lib.h: 147:                 ADCON0bits.CHS = cant;
  1551  0035  0823               	movf	chselect@cant,w
  1552  0036  00A0               	movwf	??_chselect
  1553  0037  0DA0               	rlf	??_chselect,f
  1554  0038  0DA0               	rlf	??_chselect,f
  1555  0039  081F               	movf	31,w	;volatile
  1556  003A  0620               	xorwf	??_chselect,w
  1557  003B  39C3               	andlw	-61
  1558  003C  0620               	xorwf	??_chselect,w
  1559  003D  009F               	movwf	31	;volatile
  1560  003E  295D               	goto	l1486
  1561  003F                     l1408:
  1562                           
  1563                           ;./my_lib.h: 151:             if (cant == 2){
  1564  003F  3002               	movlw	2
  1565  0040  0623               	xorwf	chselect@cant,w
  1566  0041  1D03               	btfss	3,2
  1567  0042  2844               	goto	u241
  1568  0043  2845               	goto	u240
  1569  0044                     u241:
  1570  0044  2848               	goto	l1412
  1571  0045                     u240:
  1572  0045                     l1410:
  1573                           
  1574                           ;./my_lib.h: 152:                 ADCON0bits.CHS = 0;
  1575  0045  30C3               	movlw	-61
  1576  0046  059F               	andwf	31,f	;volatile
  1577                           
  1578                           ;./my_lib.h: 153:             }
  1579  0047  295D               	goto	l1486
  1580  0048                     l1412:
  1581                           
  1582                           ;./my_lib.h: 155:                 ADCON0bits.CHS = cant;
  1583  0048  0823               	movf	chselect@cant,w
  1584  0049  00A0               	movwf	??_chselect
  1585  004A  0DA0               	rlf	??_chselect,f
  1586  004B  0DA0               	rlf	??_chselect,f
  1587  004C  081F               	movf	31,w	;volatile
  1588  004D  0620               	xorwf	??_chselect,w
  1589  004E  39C3               	andlw	-61
  1590  004F  0620               	xorwf	??_chselect,w
  1591  0050  009F               	movwf	31	;volatile
  1592  0051  295D               	goto	l1486
  1593  0052                     l1414:
  1594                           
  1595                           ;./my_lib.h: 159:             if (cant == 3){
  1596  0052  3003               	movlw	3
  1597  0053  0623               	xorwf	chselect@cant,w
  1598  0054  1D03               	btfss	3,2
  1599  0055  2857               	goto	u251
  1600  0056  2858               	goto	u250
  1601  0057                     u251:
  1602  0057  285B               	goto	l1418
  1603  0058                     u250:
  1604  0058                     l1416:
  1605                           
  1606                           ;./my_lib.h: 160:                 ADCON0bits.CHS = 0;
  1607  0058  30C3               	movlw	-61
  1608  0059  059F               	andwf	31,f	;volatile
  1609                           
  1610                           ;./my_lib.h: 161:             }
  1611  005A  295D               	goto	l1486
  1612  005B                     l1418:
  1613                           
  1614                           ;./my_lib.h: 163:                 ADCON0bits.CHS = cant;
  1615  005B  0823               	movf	chselect@cant,w
  1616  005C  00A0               	movwf	??_chselect
  1617  005D  0DA0               	rlf	??_chselect,f
  1618  005E  0DA0               	rlf	??_chselect,f
  1619  005F  081F               	movf	31,w	;volatile
  1620  0060  0620               	xorwf	??_chselect,w
  1621  0061  39C3               	andlw	-61
  1622  0062  0620               	xorwf	??_chselect,w
  1623  0063  009F               	movwf	31	;volatile
  1624  0064  295D               	goto	l1486
  1625  0065                     l1420:
  1626                           
  1627                           ;./my_lib.h: 167:             if (cant == 4){
  1628  0065  3004               	movlw	4
  1629  0066  0623               	xorwf	chselect@cant,w
  1630  0067  1D03               	btfss	3,2
  1631  0068  286A               	goto	u261
  1632  0069  286B               	goto	u260
  1633  006A                     u261:
  1634  006A  286E               	goto	l1424
  1635  006B                     u260:
  1636  006B                     l1422:
  1637                           
  1638                           ;./my_lib.h: 168:                 ADCON0bits.CHS = 0;
  1639  006B  30C3               	movlw	-61
  1640  006C  059F               	andwf	31,f	;volatile
  1641                           
  1642                           ;./my_lib.h: 169:             }
  1643  006D  295D               	goto	l1486
  1644  006E                     l1424:
  1645                           
  1646                           ;./my_lib.h: 171:                 ADCON0bits.CHS = cant;
  1647  006E  0823               	movf	chselect@cant,w
  1648  006F  00A0               	movwf	??_chselect
  1649  0070  0DA0               	rlf	??_chselect,f
  1650  0071  0DA0               	rlf	??_chselect,f
  1651  0072  081F               	movf	31,w	;volatile
  1652  0073  0620               	xorwf	??_chselect,w
  1653  0074  39C3               	andlw	-61
  1654  0075  0620               	xorwf	??_chselect,w
  1655  0076  009F               	movwf	31	;volatile
  1656  0077  295D               	goto	l1486
  1657  0078                     l1426:
  1658                           
  1659                           ;./my_lib.h: 175:             if (cant == 5){
  1660  0078  3005               	movlw	5
  1661  0079  0623               	xorwf	chselect@cant,w
  1662  007A  1D03               	btfss	3,2
  1663  007B  287D               	goto	u271
  1664  007C  287E               	goto	u270
  1665  007D                     u271:
  1666  007D  2881               	goto	l1430
  1667  007E                     u270:
  1668  007E                     l1428:
  1669                           
  1670                           ;./my_lib.h: 176:                 ADCON0bits.CHS = 0;
  1671  007E  30C3               	movlw	-61
  1672  007F  059F               	andwf	31,f	;volatile
  1673                           
  1674                           ;./my_lib.h: 177:             }
  1675  0080  295D               	goto	l1486
  1676  0081                     l1430:
  1677                           
  1678                           ;./my_lib.h: 179:                 ADCON0bits.CHS = cant;
  1679  0081  0823               	movf	chselect@cant,w
  1680  0082  00A0               	movwf	??_chselect
  1681  0083  0DA0               	rlf	??_chselect,f
  1682  0084  0DA0               	rlf	??_chselect,f
  1683  0085  081F               	movf	31,w	;volatile
  1684  0086  0620               	xorwf	??_chselect,w
  1685  0087  39C3               	andlw	-61
  1686  0088  0620               	xorwf	??_chselect,w
  1687  0089  009F               	movwf	31	;volatile
  1688  008A  295D               	goto	l1486
  1689  008B                     l1432:
  1690                           
  1691                           ;./my_lib.h: 183:             if (cant == 6){
  1692  008B  3006               	movlw	6
  1693  008C  0623               	xorwf	chselect@cant,w
  1694  008D  1D03               	btfss	3,2
  1695  008E  2890               	goto	u281
  1696  008F  2891               	goto	u280
  1697  0090                     u281:
  1698  0090  2894               	goto	l1436
  1699  0091                     u280:
  1700  0091                     l1434:
  1701                           
  1702                           ;./my_lib.h: 184:                 ADCON0bits.CHS = 0;
  1703  0091  30C3               	movlw	-61
  1704  0092  059F               	andwf	31,f	;volatile
  1705                           
  1706                           ;./my_lib.h: 185:             }
  1707  0093  295D               	goto	l1486
  1708  0094                     l1436:
  1709                           
  1710                           ;./my_lib.h: 187:                 ADCON0bits.CHS = cant;
  1711  0094  0823               	movf	chselect@cant,w
  1712  0095  00A0               	movwf	??_chselect
  1713  0096  0DA0               	rlf	??_chselect,f
  1714  0097  0DA0               	rlf	??_chselect,f
  1715  0098  081F               	movf	31,w	;volatile
  1716  0099  0620               	xorwf	??_chselect,w
  1717  009A  39C3               	andlw	-61
  1718  009B  0620               	xorwf	??_chselect,w
  1719  009C  009F               	movwf	31	;volatile
  1720  009D  295D               	goto	l1486
  1721  009E                     l1438:
  1722                           
  1723                           ;./my_lib.h: 191:             if (cant == 7){
  1724  009E  3007               	movlw	7
  1725  009F  0623               	xorwf	chselect@cant,w
  1726  00A0  1D03               	btfss	3,2
  1727  00A1  28A3               	goto	u291
  1728  00A2  28A4               	goto	u290
  1729  00A3                     u291:
  1730  00A3  28A7               	goto	l1442
  1731  00A4                     u290:
  1732  00A4                     l1440:
  1733                           
  1734                           ;./my_lib.h: 192:                 ADCON0bits.CHS = 0;
  1735  00A4  30C3               	movlw	-61
  1736  00A5  059F               	andwf	31,f	;volatile
  1737                           
  1738                           ;./my_lib.h: 193:             }
  1739  00A6  295D               	goto	l1486
  1740  00A7                     l1442:
  1741                           
  1742                           ;./my_lib.h: 195:                 ADCON0bits.CHS = cant;
  1743  00A7  0823               	movf	chselect@cant,w
  1744  00A8  00A0               	movwf	??_chselect
  1745  00A9  0DA0               	rlf	??_chselect,f
  1746  00AA  0DA0               	rlf	??_chselect,f
  1747  00AB  081F               	movf	31,w	;volatile
  1748  00AC  0620               	xorwf	??_chselect,w
  1749  00AD  39C3               	andlw	-61
  1750  00AE  0620               	xorwf	??_chselect,w
  1751  00AF  009F               	movwf	31	;volatile
  1752  00B0  295D               	goto	l1486
  1753  00B1                     l1444:
  1754                           
  1755                           ;./my_lib.h: 199:             if (cant == 8){
  1756  00B1  3008               	movlw	8
  1757  00B2  0623               	xorwf	chselect@cant,w
  1758  00B3  1D03               	btfss	3,2
  1759  00B4  28B6               	goto	u301
  1760  00B5  28B7               	goto	u300
  1761  00B6                     u301:
  1762  00B6  28BA               	goto	l1448
  1763  00B7                     u300:
  1764  00B7                     l1446:
  1765                           
  1766                           ;./my_lib.h: 200:                 ADCON0bits.CHS = 0;
  1767  00B7  30C3               	movlw	-61
  1768  00B8  059F               	andwf	31,f	;volatile
  1769                           
  1770                           ;./my_lib.h: 201:             }
  1771  00B9  295D               	goto	l1486
  1772  00BA                     l1448:
  1773                           
  1774                           ;./my_lib.h: 203:                 ADCON0bits.CHS = cant;
  1775  00BA  0823               	movf	chselect@cant,w
  1776  00BB  00A0               	movwf	??_chselect
  1777  00BC  0DA0               	rlf	??_chselect,f
  1778  00BD  0DA0               	rlf	??_chselect,f
  1779  00BE  081F               	movf	31,w	;volatile
  1780  00BF  0620               	xorwf	??_chselect,w
  1781  00C0  39C3               	andlw	-61
  1782  00C1  0620               	xorwf	??_chselect,w
  1783  00C2  009F               	movwf	31	;volatile
  1784  00C3  295D               	goto	l1486
  1785  00C4                     l1450:
  1786                           
  1787                           ;./my_lib.h: 207:             if (cant == 9){
  1788  00C4  3009               	movlw	9
  1789  00C5  0623               	xorwf	chselect@cant,w
  1790  00C6  1D03               	btfss	3,2
  1791  00C7  28C9               	goto	u311
  1792  00C8  28CA               	goto	u310
  1793  00C9                     u311:
  1794  00C9  28CD               	goto	l1454
  1795  00CA                     u310:
  1796  00CA                     l1452:
  1797                           
  1798                           ;./my_lib.h: 208:                 ADCON0bits.CHS = 0;
  1799  00CA  30C3               	movlw	-61
  1800  00CB  059F               	andwf	31,f	;volatile
  1801                           
  1802                           ;./my_lib.h: 209:             }
  1803  00CC  295D               	goto	l1486
  1804  00CD                     l1454:
  1805                           
  1806                           ;./my_lib.h: 211:                 ADCON0bits.CHS = cant;
  1807  00CD  0823               	movf	chselect@cant,w
  1808  00CE  00A0               	movwf	??_chselect
  1809  00CF  0DA0               	rlf	??_chselect,f
  1810  00D0  0DA0               	rlf	??_chselect,f
  1811  00D1  081F               	movf	31,w	;volatile
  1812  00D2  0620               	xorwf	??_chselect,w
  1813  00D3  39C3               	andlw	-61
  1814  00D4  0620               	xorwf	??_chselect,w
  1815  00D5  009F               	movwf	31	;volatile
  1816  00D6  295D               	goto	l1486
  1817  00D7                     l1456:
  1818                           
  1819                           ;./my_lib.h: 215:             if (cant == 10){
  1820  00D7  300A               	movlw	10
  1821  00D8  0623               	xorwf	chselect@cant,w
  1822  00D9  1D03               	btfss	3,2
  1823  00DA  28DC               	goto	u321
  1824  00DB  28DD               	goto	u320
  1825  00DC                     u321:
  1826  00DC  28E0               	goto	l1460
  1827  00DD                     u320:
  1828  00DD                     l1458:
  1829                           
  1830                           ;./my_lib.h: 216:                 ADCON0bits.CHS = 0;
  1831  00DD  30C3               	movlw	-61
  1832  00DE  059F               	andwf	31,f	;volatile
  1833                           
  1834                           ;./my_lib.h: 217:             }
  1835  00DF  295D               	goto	l1486
  1836  00E0                     l1460:
  1837                           
  1838                           ;./my_lib.h: 219:                 ADCON0bits.CHS = cant;
  1839  00E0  0823               	movf	chselect@cant,w
  1840  00E1  00A0               	movwf	??_chselect
  1841  00E2  0DA0               	rlf	??_chselect,f
  1842  00E3  0DA0               	rlf	??_chselect,f
  1843  00E4  081F               	movf	31,w	;volatile
  1844  00E5  0620               	xorwf	??_chselect,w
  1845  00E6  39C3               	andlw	-61
  1846  00E7  0620               	xorwf	??_chselect,w
  1847  00E8  009F               	movwf	31	;volatile
  1848  00E9  295D               	goto	l1486
  1849  00EA                     l1462:
  1850                           
  1851                           ;./my_lib.h: 223:             if (cant == 11){
  1852  00EA  300B               	movlw	11
  1853  00EB  0623               	xorwf	chselect@cant,w
  1854  00EC  1D03               	btfss	3,2
  1855  00ED  28EF               	goto	u331
  1856  00EE  28F0               	goto	u330
  1857  00EF                     u331:
  1858  00EF  28F3               	goto	l1466
  1859  00F0                     u330:
  1860  00F0                     l1464:
  1861                           
  1862                           ;./my_lib.h: 224:                 ADCON0bits.CHS = 0;
  1863  00F0  30C3               	movlw	-61
  1864  00F1  059F               	andwf	31,f	;volatile
  1865                           
  1866                           ;./my_lib.h: 225:             }
  1867  00F2  295D               	goto	l1486
  1868  00F3                     l1466:
  1869                           
  1870                           ;./my_lib.h: 227:                 ADCON0bits.CHS = cant;
  1871  00F3  0823               	movf	chselect@cant,w
  1872  00F4  00A0               	movwf	??_chselect
  1873  00F5  0DA0               	rlf	??_chselect,f
  1874  00F6  0DA0               	rlf	??_chselect,f
  1875  00F7  081F               	movf	31,w	;volatile
  1876  00F8  0620               	xorwf	??_chselect,w
  1877  00F9  39C3               	andlw	-61
  1878  00FA  0620               	xorwf	??_chselect,w
  1879  00FB  009F               	movwf	31	;volatile
  1880  00FC  295D               	goto	l1486
  1881  00FD                     l1468:
  1882                           
  1883                           ;./my_lib.h: 231:             if (cant == 12){
  1884  00FD  300C               	movlw	12
  1885  00FE  0623               	xorwf	chselect@cant,w
  1886  00FF  1D03               	btfss	3,2
  1887  0100  2902               	goto	u341
  1888  0101  2903               	goto	u340
  1889  0102                     u341:
  1890  0102  2906               	goto	l1472
  1891  0103                     u340:
  1892  0103                     l1470:
  1893                           
  1894                           ;./my_lib.h: 232:                 ADCON0bits.CHS = 0;
  1895  0103  30C3               	movlw	-61
  1896  0104  059F               	andwf	31,f	;volatile
  1897                           
  1898                           ;./my_lib.h: 233:             }
  1899  0105  295D               	goto	l1486
  1900  0106                     l1472:
  1901                           
  1902                           ;./my_lib.h: 235:                 ADCON0bits.CHS = cant;
  1903  0106  0823               	movf	chselect@cant,w
  1904  0107  00A0               	movwf	??_chselect
  1905  0108  0DA0               	rlf	??_chselect,f
  1906  0109  0DA0               	rlf	??_chselect,f
  1907  010A  081F               	movf	31,w	;volatile
  1908  010B  0620               	xorwf	??_chselect,w
  1909  010C  39C3               	andlw	-61
  1910  010D  0620               	xorwf	??_chselect,w
  1911  010E  009F               	movwf	31	;volatile
  1912  010F  295D               	goto	l1486
  1913  0110                     l1474:
  1914                           
  1915                           ;./my_lib.h: 239:             if (cant == 13){
  1916  0110  300D               	movlw	13
  1917  0111  0623               	xorwf	chselect@cant,w
  1918  0112  1D03               	btfss	3,2
  1919  0113  2915               	goto	u351
  1920  0114  2916               	goto	u350
  1921  0115                     u351:
  1922  0115  2919               	goto	l1478
  1923  0116                     u350:
  1924  0116                     l1476:
  1925                           
  1926                           ;./my_lib.h: 240:                 ADCON0bits.CHS = 0;
  1927  0116  30C3               	movlw	-61
  1928  0117  059F               	andwf	31,f	;volatile
  1929                           
  1930                           ;./my_lib.h: 241:             }
  1931  0118  295D               	goto	l1486
  1932  0119                     l1478:
  1933                           
  1934                           ;./my_lib.h: 243:                 ADCON0bits.CHS = cant;
  1935  0119  0823               	movf	chselect@cant,w
  1936  011A  00A0               	movwf	??_chselect
  1937  011B  0DA0               	rlf	??_chselect,f
  1938  011C  0DA0               	rlf	??_chselect,f
  1939  011D  081F               	movf	31,w	;volatile
  1940  011E  0620               	xorwf	??_chselect,w
  1941  011F  39C3               	andlw	-61
  1942  0120  0620               	xorwf	??_chselect,w
  1943  0121  009F               	movwf	31	;volatile
  1944  0122  295D               	goto	l1486
  1945  0123                     l1480:
  1946                           
  1947                           ;./my_lib.h: 247:                 ADCON0bits.CHS = 0;
  1948  0123  30C3               	movlw	-61
  1949  0124  059F               	andwf	31,f	;volatile
  1950                           
  1951                           ;./my_lib.h: 249:             break;
  1952  0125  295D               	goto	l1486
  1953  0126                     l1484:
  1954  0126  0C1F               	rrf	31,w	;volatile
  1955  0127  00A0               	movwf	??_chselect
  1956  0128  0C20               	rrf	??_chselect,w
  1957  0129  390F               	andlw	15
  1958  012A  00A1               	movwf	??_chselect+1
  1959  012B  01A2               	clrf	??_chselect+2
  1960                           
  1961                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1962                           ; Switch size 1, requested type "simple"
  1963                           ; Number of cases is 1, Range of values is 0 to 0
  1964                           ; switch strategies available:
  1965                           ; Name         Instructions Cycles
  1966                           ; simple_byte            4     3 (average)
  1967                           ; direct_byte           11     8 (fixed)
  1968                           ; jumptable            260     6 (fixed)
  1969                           ;	Chosen strategy is simple_byte
  1970  012C  0822               	movf	??_chselect+2,w
  1971  012D  3A00               	xorlw	0	; case 0
  1972  012E  1903               	skipnz
  1973  012F  2931               	goto	l1716
  1974  0130  295D               	goto	l1486
  1975  0131                     l1716:
  1976                           
  1977                           ; Switch size 1, requested type "simple"
  1978                           ; Number of cases is 14, Range of values is 0 to 13
  1979                           ; switch strategies available:
  1980                           ; Name         Instructions Cycles
  1981                           ; simple_byte           43    22 (average)
  1982                           ; direct_byte           50     8 (fixed)
  1983                           ; jumptable            260     6 (fixed)
  1984                           ;	Chosen strategy is simple_byte
  1985  0131  0821               	movf	??_chselect+1,w
  1986  0132  3A00               	xorlw	0	; case 0
  1987  0133  1903               	skipnz
  1988  0134  282D               	goto	l1402
  1989  0135  3A01               	xorlw	1	; case 1
  1990  0136  1903               	skipnz
  1991  0137  283F               	goto	l1408
  1992  0138  3A03               	xorlw	3	; case 2
  1993  0139  1903               	skipnz
  1994  013A  2852               	goto	l1414
  1995  013B  3A01               	xorlw	1	; case 3
  1996  013C  1903               	skipnz
  1997  013D  2865               	goto	l1420
  1998  013E  3A07               	xorlw	7	; case 4
  1999  013F  1903               	skipnz
  2000  0140  2878               	goto	l1426
  2001  0141  3A01               	xorlw	1	; case 5
  2002  0142  1903               	skipnz
  2003  0143  288B               	goto	l1432
  2004  0144  3A03               	xorlw	3	; case 6
  2005  0145  1903               	skipnz
  2006  0146  289E               	goto	l1438
  2007  0147  3A01               	xorlw	1	; case 7
  2008  0148  1903               	skipnz
  2009  0149  28B1               	goto	l1444
  2010  014A  3A0F               	xorlw	15	; case 8
  2011  014B  1903               	skipnz
  2012  014C  28C4               	goto	l1450
  2013  014D  3A01               	xorlw	1	; case 9
  2014  014E  1903               	skipnz
  2015  014F  28D7               	goto	l1456
  2016  0150  3A03               	xorlw	3	; case 10
  2017  0151  1903               	skipnz
  2018  0152  28EA               	goto	l1462
  2019  0153  3A01               	xorlw	1	; case 11
  2020  0154  1903               	skipnz
  2021  0155  28FD               	goto	l1468
  2022  0156  3A07               	xorlw	7	; case 12
  2023  0157  1903               	skipnz
  2024  0158  2910               	goto	l1474
  2025  0159  3A01               	xorlw	1	; case 13
  2026  015A  1903               	skipnz
  2027  015B  2923               	goto	l1480
  2028  015C  295D               	goto	l1486
  2029  015D                     l1486:
  2030                           
  2031                           ;./my_lib.h: 253:     _delay((unsigned long)((150)*(4000000/4000000.0)));
  2032  015D  3031               	movlw	49
  2033  015E  1283               	bcf	3,5	;RP0=0, select bank0
  2034  015F  1303               	bcf	3,6	;RP1=0, select bank0
  2035  0160  00A0               	movwf	??_chselect
  2036  0161                     u447:
  2037  0161  0BA0               	decfsz	??_chselect,f
  2038  0162  2961               	goto	u447
  2039  0163                     l1488:
  2040                           
  2041                           ;./my_lib.h: 254:     ADCON0bits.GO = 1;
  2042  0163  1283               	bcf	3,5	;RP0=0, select bank0
  2043  0164  1303               	bcf	3,6	;RP1=0, select bank0
  2044  0165  149F               	bsf	31,1	;volatile
  2045  0166                     l170:
  2046  0166  0008               	return
  2047  0167                     __end_of_chselect:
  2048                           
  2049                           	psect	text8
  2050  0259                     __ptext8:	
  2051 ;; *************** function _isr *****************
  2052 ;; Defined at:
  2053 ;;		line 70 in file "MainL1.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;		None
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;		None
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2067 ;;      Params:         0       0       0       0       0
  2068 ;;      Locals:         0       0       0       0       0
  2069 ;;      Temps:          5       0       0       0       0
  2070 ;;      Totals:         5       0       0       0       0
  2071 ;;Total ram usage:        5 bytes
  2072 ;; Hardware stack levels used: 1
  2073 ;; Hardware stack levels required when called: 1
  2074 ;; This function calls:
  2075 ;;		_readAN
  2076 ;; This function is called by:
  2077 ;;		Interrupt level 1
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           
  2082                           ;psect for function _isr
  2083  0259                     _isr:
  2084  0259                     i1l1546:
  2085                           
  2086                           ;MainL1.c: 73: }
  2087  0259  1D0B               	btfss	11,2	;volatile
  2088  025A  2A5C               	goto	u36_21
  2089  025B  2A5D               	goto	u36_20
  2090  025C                     u36_21:
  2091  025C  2A81               	goto	i1l219
  2092  025D                     u36_20:
  2093  025D                     i1l1548:
  2094                           
  2095                           ;MainL1.c: 74: 
  2096  025D  3064               	movlw	100
  2097  025E  1283               	bcf	3,5	;RP0=0, select bank0
  2098  025F  1303               	bcf	3,6	;RP1=0, select bank0
  2099  0260  0081               	movwf	1	;volatile
  2100  0261                     i1l1550:
  2101                           
  2102                           ;MainL1.c: 75: void main(void) {
  2103  0261  110B               	bcf	11,2	;volatile
  2104  0262                     i1l1552:
  2105                           
  2106                           ;MainL1.c: 76:     setup();
  2107  0262  0186               	clrf	6	;volatile
  2108                           
  2109                           ;MainL1.c: 77: 
  2110  0263  2A71               	goto	i1l1568
  2111  0264                     i1l1554:
  2112                           
  2113                           ;MainL1.c: 79: 
  2114  0264  087A               	movf	_disp0,w
  2115  0265  0087               	movwf	7	;volatile
  2116  0266                     i1l1556:
  2117                           
  2118                           ;MainL1.c: 80: while(1) {
  2119  0266  1606               	bsf	6,4	;volatile
  2120  0267                     i1l1558:
  2121                           
  2122                           ;MainL1.c: 81:     chselect(1);
  2123  0267  3001               	movlw	1
  2124  0268  00F4               	movwf	??_isr
  2125  0269  0874               	movf	??_isr,w
  2126  026A  07FB               	addwf	_multiplex,f
  2127                           
  2128                           ;MainL1.c: 82:     hexconv(var);
  2129  026B  2A81               	goto	i1l219
  2130  026C                     i1l1560:
  2131                           
  2132                           ;MainL1.c: 85:         RB3 =1;
  2133  026C  0879               	movf	_disp1,w
  2134  026D  0087               	movwf	7	;volatile
  2135  026E                     i1l1562:
  2136                           
  2137                           ;MainL1.c: 86:     }
  2138  026E  1686               	bsf	6,5	;volatile
  2139  026F                     i1l1564:
  2140                           
  2141                           ;MainL1.c: 87:     else{
  2142  026F  01FB               	clrf	_multiplex
  2143                           
  2144                           ;MainL1.c: 88:         RB3 =0;
  2145  0270  2A81               	goto	i1l219
  2146  0271                     i1l1568:
  2147  0271  087B               	movf	_multiplex,w
  2148  0272  00F4               	movwf	??_isr
  2149  0273  01F5               	clrf	??_isr+1
  2150                           
  2151                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2152                           ; Switch size 1, requested type "simple"
  2153                           ; Number of cases is 1, Range of values is 0 to 0
  2154                           ; switch strategies available:
  2155                           ; Name         Instructions Cycles
  2156                           ; simple_byte            4     3 (average)
  2157                           ; direct_byte           11     8 (fixed)
  2158                           ; jumptable            260     6 (fixed)
  2159                           ;	Chosen strategy is simple_byte
  2160  0274  0875               	movf	??_isr+1,w
  2161  0275  3A00               	xorlw	0	; case 0
  2162  0276  1903               	skipnz
  2163  0277  2A79               	goto	i1l1718
  2164  0278  2A81               	goto	i1l219
  2165  0279                     i1l1718:
  2166                           
  2167                           ; Switch size 1, requested type "simple"
  2168                           ; Number of cases is 2, Range of values is 0 to 1
  2169                           ; switch strategies available:
  2170                           ; Name         Instructions Cycles
  2171                           ; simple_byte            7     4 (average)
  2172                           ; direct_byte           14     8 (fixed)
  2173                           ; jumptable            260     6 (fixed)
  2174                           ;	Chosen strategy is simple_byte
  2175  0279  0874               	movf	??_isr,w
  2176  027A  3A00               	xorlw	0	; case 0
  2177  027B  1903               	skipnz
  2178  027C  2A64               	goto	i1l1554
  2179  027D  3A01               	xorlw	1	; case 1
  2180  027E  1903               	skipnz
  2181  027F  2A6C               	goto	i1l1560
  2182  0280  2A81               	goto	i1l219
  2183  0281                     i1l219:	
  2184                           ;MainL1.c: 92: }
  2185                           
  2186                           
  2187                           ;MainL1.c: 94: 
  2188  0281  1283               	bcf	3,5	;RP0=0, select bank0
  2189  0282  1303               	bcf	3,6	;RP1=0, select bank0
  2190  0283  1F0C               	btfss	12,6	;volatile
  2191  0284  2A86               	goto	u37_21
  2192  0285  2A87               	goto	u37_20
  2193  0286                     u37_21:
  2194  0286  2A96               	goto	i1l1574
  2195  0287                     u37_20:
  2196  0287                     i1l1570:
  2197                           
  2198                           ;MainL1.c: 95: 
  2199  0287  0C1F               	rrf	31,w	;volatile
  2200  0288  00F4               	movwf	??_isr
  2201  0289  0C74               	rrf	??_isr,w
  2202  028A  390F               	andlw	15
  2203  028B  120A  118A  22F9  120A  118A  	fcall	_readAN
  2204  0290  00F5               	movwf	??_isr+1
  2205  0291  0875               	movf	??_isr+1,w
  2206  0292  1283               	bcf	3,5	;RP0=0, select bank0
  2207  0293  1303               	bcf	3,6	;RP1=0, select bank0
  2208  0294  00AB               	movwf	_var
  2209  0295                     i1l1572:
  2210                           
  2211                           ;MainL1.c: 96: 
  2212  0295  130C               	bcf	12,6	;volatile
  2213  0296                     i1l1574:
  2214                           
  2215                           ;MainL1.c: 99:   ANSEL = 0b00000000;
  2216  0296  1C0C               	btfss	12,0	;volatile
  2217  0297  2A99               	goto	u38_21
  2218  0298  2A9A               	goto	u38_20
  2219  0299                     u38_21:
  2220  0299  2A9B               	goto	i1l225
  2221  029A                     u38_20:
  2222  029A                     i1l1576:
  2223                           
  2224                           ;MainL1.c: 100:   ANSELH = 0b00000000;
  2225  029A  100C               	bcf	12,0	;volatile
  2226  029B                     i1l225:	
  2227                           ;MainL1.c: 101: 
  2228                           
  2229                           
  2230                           ;MainL1.c: 103:   TRISB = 0b00000011;
  2231  029B  1C0B               	btfss	11,0	;volatile
  2232  029C  2A9E               	goto	u39_21
  2233  029D  2A9F               	goto	u39_20
  2234  029E                     u39_21:
  2235  029E  2AAE               	goto	i1l229
  2236  029F                     u39_20:
  2237  029F                     i1l1578:
  2238                           
  2239                           ;MainL1.c: 104:   TRISC = 0x00;
  2240  029F  1806               	btfsc	6,0	;volatile
  2241  02A0  2AA2               	goto	u40_21
  2242  02A1  2AA3               	goto	u40_20
  2243  02A2                     u40_21:
  2244  02A2  2AA7               	goto	i1l1582
  2245  02A3                     u40_20:
  2246  02A3                     i1l1580:
  2247                           
  2248                           ;MainL1.c: 105:   TRISD = 0x00;
  2249  02A3  3001               	movlw	1
  2250  02A4  00F4               	movwf	??_isr
  2251  02A5  0874               	movf	??_isr,w
  2252  02A6  0788               	addwf	8,f	;volatile
  2253  02A7                     i1l1582:
  2254                           
  2255                           ;MainL1.c: 108:   initAN(0b00000001, 0);
  2256  02A7  1886               	btfsc	6,1	;volatile
  2257  02A8  2AAA               	goto	u41_21
  2258  02A9  2AAB               	goto	u41_20
  2259  02AA                     u41_21:
  2260  02AA  2AAD               	goto	i1l1586
  2261  02AB                     u41_20:
  2262  02AB                     i1l1584:
  2263                           
  2264                           ;MainL1.c: 109: 
  2265  02AB  3001               	movlw	1
  2266  02AC  0288               	subwf	8,f	;volatile
  2267  02AD                     i1l1586:
  2268                           
  2269                           ;MainL1.c: 113:   OPTION_REG = 0b01000100;
  2270  02AD  100B               	bcf	11,0	;volatile
  2271  02AE                     i1l229:
  2272  02AE  0878               	movf	??_isr+4,w
  2273  02AF  008A               	movwf	10
  2274  02B0  0877               	movf	??_isr+3,w
  2275  02B1  0084               	movwf	4
  2276  02B2  0E76               	swapf	??_isr+2,w
  2277  02B3  0083               	movwf	3
  2278  02B4  0EFE               	swapf	btemp,f
  2279  02B5  0E7E               	swapf	btemp,w
  2280  02B6  0009               	retfie
  2281  02B7                     __end_of_isr:
  2282                           
  2283                           	psect	intentry
  2284  0004                     __pintentry:	
  2285                           ;incstack = 0
  2286                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2287                           
  2288  0004                     interrupt_function:
  2289  007E                     saved_w	set	btemp
  2290  0004  00FE               	movwf	btemp
  2291  0005  0E03               	swapf	3,w
  2292  0006  00F6               	movwf	??_isr+2
  2293  0007  0804               	movf	4,w
  2294  0008  00F7               	movwf	??_isr+3
  2295  0009  080A               	movf	10,w
  2296  000A  00F8               	movwf	??_isr+4
  2297  000B  120A  118A  2A59   	ljmp	_isr
  2298                           
  2299                           	psect	text9
  2300  02F9                     __ptext9:	
  2301 ;; *************** function _readAN *****************
  2302 ;; Defined at:
  2303 ;;		line 88 in file "./my_lib.h"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;  canal           1    wreg     unsigned char 
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;  canal           1    2[COMMON] unsigned char 
  2308 ;;  lec             1    3[COMMON] unsigned char 
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  1    wreg      unsigned char 
  2311 ;; Registers used:
  2312 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2318 ;;      Params:         0       0       0       0       0
  2319 ;;      Locals:         2       0       0       0       0
  2320 ;;      Temps:          2       0       0       0       0
  2321 ;;      Totals:         4       0       0       0       0
  2322 ;;Total ram usage:        4 bytes
  2323 ;; Hardware stack levels used: 1
  2324 ;; This function calls:
  2325 ;;		Nothing
  2326 ;; This function is called by:
  2327 ;;		_isr
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           
  2332                           ;psect for function _readAN
  2333  02F9                     _readAN:
  2334                           
  2335                           ;incstack = 0
  2336                           ; Regs used in _readAN: [wreg-fsr0h+status,2+status,0]
  2337                           ;readAN@canal stored from wreg
  2338  02F9  00F2               	movwf	readAN@canal
  2339  02FA                     i1l1356:
  2340                           
  2341                           ;./my_lib.h: 89:     uint8_t lec;;./my_lib.h: 90:     switch(canal){
  2342  02FA  2B02               	goto	i1l1388
  2343  02FB                     i1l1358:
  2344                           
  2345                           ;./my_lib.h: 92:             lec = ADRESH;
  2346  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  2347  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  2348  02FD  081E               	movf	30,w	;volatile
  2349  02FE  00F0               	movwf	??_readAN
  2350  02FF  0870               	movf	??_readAN,w
  2351  0300  00F3               	movwf	readAN@lec
  2352                           
  2353                           ;./my_lib.h: 93:             break;
  2354  0301  2B36               	goto	i1l1390
  2355  0302                     i1l1388:
  2356  0302  0872               	movf	readAN@canal,w
  2357  0303  00F0               	movwf	??_readAN
  2358  0304  01F1               	clrf	??_readAN+1
  2359                           
  2360                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2361                           ; Switch size 1, requested type "simple"
  2362                           ; Number of cases is 1, Range of values is 0 to 0
  2363                           ; switch strategies available:
  2364                           ; Name         Instructions Cycles
  2365                           ; simple_byte            4     3 (average)
  2366                           ; direct_byte           11     8 (fixed)
  2367                           ; jumptable            260     6 (fixed)
  2368                           ;	Chosen strategy is simple_byte
  2369  0305  0871               	movf	??_readAN+1,w
  2370  0306  3A00               	xorlw	0	; case 0
  2371  0307  1903               	skipnz
  2372  0308  2B0A               	goto	i1l1720
  2373  0309  2B36               	goto	i1l1390
  2374  030A                     i1l1720:
  2375                           
  2376                           ; Switch size 1, requested type "simple"
  2377                           ; Number of cases is 14, Range of values is 0 to 13
  2378                           ; switch strategies available:
  2379                           ; Name         Instructions Cycles
  2380                           ; simple_byte           43    22 (average)
  2381                           ; direct_byte           50     8 (fixed)
  2382                           ; jumptable            260     6 (fixed)
  2383                           ;	Chosen strategy is simple_byte
  2384  030A  0870               	movf	??_readAN,w
  2385  030B  3A00               	xorlw	0	; case 0
  2386  030C  1903               	skipnz
  2387  030D  2AFB               	goto	i1l1358
  2388  030E  3A01               	xorlw	1	; case 1
  2389  030F  1903               	skipnz
  2390  0310  2AFB               	goto	i1l1358
  2391  0311  3A03               	xorlw	3	; case 2
  2392  0312  1903               	skipnz
  2393  0313  2AFB               	goto	i1l1358
  2394  0314  3A01               	xorlw	1	; case 3
  2395  0315  1903               	skipnz
  2396  0316  2AFB               	goto	i1l1358
  2397  0317  3A07               	xorlw	7	; case 4
  2398  0318  1903               	skipnz
  2399  0319  2AFB               	goto	i1l1358
  2400  031A  3A01               	xorlw	1	; case 5
  2401  031B  1903               	skipnz
  2402  031C  2AFB               	goto	i1l1358
  2403  031D  3A03               	xorlw	3	; case 6
  2404  031E  1903               	skipnz
  2405  031F  2AFB               	goto	i1l1358
  2406  0320  3A01               	xorlw	1	; case 7
  2407  0321  1903               	skipnz
  2408  0322  2AFB               	goto	i1l1358
  2409  0323  3A0F               	xorlw	15	; case 8
  2410  0324  1903               	skipnz
  2411  0325  2AFB               	goto	i1l1358
  2412  0326  3A01               	xorlw	1	; case 9
  2413  0327  1903               	skipnz
  2414  0328  2AFB               	goto	i1l1358
  2415  0329  3A03               	xorlw	3	; case 10
  2416  032A  1903               	skipnz
  2417  032B  2AFB               	goto	i1l1358
  2418  032C  3A01               	xorlw	1	; case 11
  2419  032D  1903               	skipnz
  2420  032E  2AFB               	goto	i1l1358
  2421  032F  3A07               	xorlw	7	; case 12
  2422  0330  1903               	skipnz
  2423  0331  2AFB               	goto	i1l1358
  2424  0332  3A01               	xorlw	1	; case 13
  2425  0333  1903               	skipnz
  2426  0334  2AFB               	goto	i1l1358
  2427  0335  2B36               	goto	i1l1390
  2428  0336                     i1l1390:
  2429                           
  2430                           ;./my_lib.h: 134:     return(lec);
  2431  0336  0873               	movf	readAN@lec,w
  2432  0337                     i1l124:
  2433  0337  0008               	return
  2434  0338                     __end_of_readAN:
  2435  007E                     btemp	set	126	;btemp
  2436  007E                     wtemp0	set	126
  2437                           
  2438                           	psect	config
  2439                           
  2440                           ;Config register CONFIG1 @ 0x2007
  2441                           ;	Oscillator Selection bits
  2442                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2443                           ;	Watchdog Timer Enable bit
  2444                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2445                           ;	Power-up Timer Enable bit
  2446                           ;	PWRTE = OFF, PWRT disabled
  2447                           ;	RE3/MCLR pin function select bit
  2448                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2449                           ;	Code Protection bit
  2450                           ;	CP = OFF, Program memory code protection is disabled
  2451                           ;	Data Code Protection bit
  2452                           ;	CPD = OFF, Data memory code protection is disabled
  2453                           ;	Brown Out Reset Selection bits
  2454                           ;	BOREN = OFF, BOR disabled
  2455                           ;	Internal External Switchover bit
  2456                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2457                           ;	Fail-Safe Clock Monitor Enabled bit
  2458                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2459                           ;	Low Voltage Programming Enable bit
  2460                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2461                           ;	In-Circuit Debugger Mode bit
  2462                           ;	DEBUG = 0x1, unprogrammed default
  2463  2007                     	org	8199
  2464  2007  20D4               	dw	8404
  2465                           
  2466                           ;Config register CONFIG2 @ 0x2008
  2467                           ;	Brown-out Reset Selection bit
  2468                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2469                           ;	Flash Program Memory Self Write Enable bits
  2470                           ;	WRT = OFF, Write protection off
  2471  2008                     	org	8200
  2472  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80      8      14
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_readAN

Critical Paths under _main in BANK0

    _main->_dispasign
    _setup->_initAN
    _setup->_initOsc
    _dispasign->_table

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     961
                                              7 BANK0      1     1      0
                           _chselect
                          _dispasign
                            _hexconv
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     164
                             _initAN
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _initAN                                               3     2      1     142
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _hexconv                                              2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _dispasign                                            3     2      1     181
                                              4 BANK0      3     2      1
                              _table
 ---------------------------------------------------------------------------------
 (2) _table                                                4     4      0      61
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _chselect                                             4     4      0     572
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0      58
                                              4 COMMON     5     5      0
                             _readAN
 ---------------------------------------------------------------------------------
 (4) _readAN                                               4     4      0      58
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _chselect
   _dispasign
     _table
   _hexconv
   _setup
     _initAN
     _initOsc

 _isr (ROOT)
   _readAN

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8       E       5       17.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1C      12        0.0%
ABS                  0      0      1C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jul 16 13:40:16 2021

                     l92 01FE                       l94 0204                       l95 020A  
                     l96 0210                       l97 0216                       l98 021C  
                     l99 0222                      l100 0228                      l101 022E  
                    l102 0258                      l105 0390                      l170 0166  
                    l242 02F8                      l234 033D                      l235 0361  
                    l245 03AA                      l192 01F6                      l248 03BB  
                    _RB0 0030                      _RB1 0031                      _RB3 0033  
                    _RB4 0034                      _RB5 0035                      u300 00B7  
                    u220 002C                      u301 00B6                      u221 002B  
                    u310 00CA                      u230 0032                      u311 00C9  
                    u231 0031                      u320 00DD                      u240 0045  
                    u321 00DC                      u241 0044                      u330 00F0  
                    u250 0058                      u331 00EF                      u251 0057  
                    u340 0103                      u260 006B                      u420 035F  
                    u341 0102                      u261 006A                      u421 035E  
                    u350 0116                      u270 007E                      u351 0115  
                    u271 007D                      u280 0091                      u281 0090  
                    u290 00A4                      u291 00A3                      u437 037C  
                    u447 0161                      _isr 0259                      _var 002B  
                    fsr0 0004                     l1300 0386                     l1310 016B  
                   l1302 038D                     l1320 0184                     l1312 0170  
                   l1304 038E                     l1410 0045                     l1402 002D  
                   l1330 019D                     l1322 0189                     l1314 0175  
                   l1306 038F                     l1420 0065                     l1412 0048  
                   l1404 0032                     l1340 01B6                     l1332 01A2  
                   l1324 018E                     l1316 017A                     l1308 016A  
                   l1500 02C4                     l1430 0081                     l1422 006B  
                   l1414 0052                     l1406 0035                     l1334 01A7  
                   l1326 0193                     l1318 017F                     l1510 02D9  
                   l1502 02CD                     l1440 00A4                     l1432 008B  
                   l1424 006E                     l1416 0058                     l1408 003F  
                   l1336 01AC                     l1328 0198                     l1344 01BB  
                   l1280 0234                     l1520 02E7                     l1512 02DA  
                   l1504 02D1                     l1600 035F                     l1450 00C4  
                   l1442 00A7                     l1434 0091                     l1426 0078  
                   l1418 005B                     l1338 01B1                     l1346 01F5  
                   l1290 036E                     l1530 02EE                     l1522 02EA  
                   l1514 02DC                     l1506 02D3                     l1460 00E0  
                   l1452 00CA                     l1444 00B1                     l1436 0094  
                   l1428 007E                     l1540 03AE                     l1292 0374  
                   l1276 01FA                     l1532 02F1                     l1524 02EB  
                   l1516 02DE                     l1508 02D5                     l1470 0103  
                   l1462 00EA                     l1454 00CD                     l1446 00B7  
                   l1438 009E                     l1542 03B8                     l1294 0378  
                   l1286 0369                     l1534 02F2                     l1526 02EC  
                   l1518 02E4                     l1480 0123                     l1472 0106  
                   l1464 00F0                     l1456 00D7                     l1448 00BA  
                   l1544 0394                     l1296 037F                     l1288 036D  
                   l1712 023E                     l1536 02F5                     l1528 02ED  
                   l1474 0110                     l1466 00F3                     l1458 00DD  
                   l1714 01C3                     l1298 0382                     l1538 02F6  
                   l1716 0131                     l1476 0116                     l1468 00FD  
                   l1484 0126                     l1478 0119                     l1486 015D  
                   l1398 0028                     l1494 02B7                     l1488 0163  
                   l1496 02BB                     l1592 0338                     l1498 02BF  
                   l1594 0343                     l1596 034B                     l1598 0357  
                   ?_isr 0070                     _T0IF 005A                     _IOCB 0096  
                   _PIE1 008C                     _PIE2 008D                     _RBIF 0058  
                   _PIR1 000C                     _PIR2 000D                     _TMR0 0001  
                   _WPUB 0095                     _main 0338                     btemp 007E  
                   start 000E                    ??_isr 0074                    ?_main 0070  
                  _ANSEL 0188                    _T1CON 0010                    i1l124 0337  
                  i1l225 029B                    i1l219 0281                    i1l229 02AE  
                  u40_20 02A3                    u40_21 02A2                    u41_20 02AB  
                  u41_21 02AA                    _TMR1H 000F                    _TMR1L 000E  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u36_20 025D  
                  u36_21 025C                    u37_20 0287                    u37_21 0286  
                  u38_20 029A                    u38_21 0299                    u39_20 029F  
                  u39_21 029E                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
        __end_of_hexconv 03BC                    _disp0 007A                    _disp1 0079  
        __end_of_initOsc 0259                    _table 0167                    _valor 002D  
                  _setup 02B7                    _start 002C                    pclath 000A  
                  status 0003              readAN@canal 0072                    wtemp0 007E  
        __initialization 0011             __end_of_main 0366                   ??_main 0027  
                 ?_table 0070                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   i1l1356 02FA                   i1l1390 0336  
                 i1l1358 02FB                   i1l1550 0261                   i1l1720 030A  
                 i1l1560 026C                   i1l1552 0262                   i1l1570 0287  
                 i1l1562 026E                   i1l1554 0264                   i1l1546 0259  
                 i1l1388 0302                   i1l1580 02A3                   i1l1572 0295  
                 i1l1564 026F                   i1l1556 0266                   i1l1548 025D  
                 i1l1582 02A7                   i1l1574 0296                   i1l1718 0279  
                 i1l1558 0267                   i1l1584 02AB                   i1l1576 029A  
                 i1l1568 0271                   i1l1586 02AD                   i1l1578 029F  
                 _INTCON 000B            dispasign@arg1 0026            dispasign@arg2 0024  
            initOsc@frec 0022                   _TMR1IF 0060         __end_of_chselect 0167  
                 _initAN 0366                   _readAN 02F9                ??_hexconv 0020  
              ??_initOsc 0020                   saved_w 007E  __end_of__initialization 0021  
         __pcstackCOMMON 0070             __pidataBANK0 03BC            __end_of_table 01F7  
          __end_of_setup 02F9       __size_of_dispasign 001A                  ??_table 0020  
                ??_setup 0023               __pbssBANK0 0028               __pmaintext 0338  
             __pintentry 0004                  ?_initAN 0020                  ?_readAN 0070  
              ?_chselect 0070        __end_of_dispasign 03AB               _nibblehigh 0028  
        __size_of_initAN 002B          __size_of_readAN 003F                  __ptext1 02B7  
                __ptext2 01F7                  __ptext3 0366                  __ptext4 03AB  
                __ptext5 0391                  __ptext6 0167                  __ptext7 0025  
                __ptext8 0259                  __ptext9 02F9                  _flagint 007D  
                _hexconv 03AB                  _initOsc 01F7             __size_of_isr 005E  
             ??_chselect 0020     end_of_initialization 0021               _startfinal 007C  
         __end_of_initAN 0391           __end_of_readAN 0338               initAN@just 0020  
             hexconv@num 0021      start_initialization 0011              __end_of_isr 02B7  
            __pdataBANK0 002D                 ??_initAN 0021                 ??_readAN 0070  
             table@tempo 0023              __pbssCOMMON 0079                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_chselect 0142                _dispasign 0391  
               ?_hexconv 0070                 ?_initOsc 0070                _nibblelow 0029  
         __size_of_table 0090           __size_of_setup 0042        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C                _multiplex 007B  
             ?_dispasign 0024               _ADCON0bits 001F               _ADCON1bits 009F  
              initAN@bin 0022                readAN@lec 0073         __size_of_hexconv 0011  
       __size_of_initOsc 0062                 _chselect 0025                 _contador 002A  
          __size_of_main 002E              ??_dispasign 0025               _INTCONbits 000B  
           chselect@cant 0023                 table@val 0022                 intlevel1 0000  
             _OSCCONbits 008F               _OPTION_REG 0081  
